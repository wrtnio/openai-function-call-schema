{
  "openapi": "3.0.3",
  "functions": [
    {
      "method": "get",
      "path": "/monitors/health",
      "name": "monitors_health_get",
      "parameters": [
        {
          "type": "object",
          "properties": {}
        }
      ],
      "description": "Health check API."
    },
    {
      "method": "get",
      "path": "/monitors/performance",
      "name": "monitors_performance_get",
      "parameters": [
        {
          "type": "object",
          "properties": {}
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "cpu": {
            "type": "object",
            "properties": {
              "user": {
                "type": "number"
              },
              "system": {
                "type": "number"
              }
            },
            "required": [
              "user",
              "system"
            ]
          },
          "memory": {
            "type": "object",
            "properties": {
              "rss": {
                "type": "number"
              },
              "heapTotal": {
                "type": "number"
              },
              "heapUsed": {
                "type": "number"
              },
              "external": {
                "type": "number"
              },
              "arrayBuffers": {
                "type": "number"
              }
            },
            "required": [
              "rss",
              "heapTotal",
              "heapUsed",
              "external",
              "arrayBuffers"
            ]
          },
          "resource": {
            "type": "object",
            "properties": {
              "fsRead": {
                "type": "number"
              },
              "fsWrite": {
                "type": "number"
              },
              "involuntaryContextSwitches": {
                "type": "number"
              },
              "ipcReceived": {
                "type": "number"
              },
              "ipcSent": {
                "type": "number"
              },
              "majorPageFault": {
                "type": "number"
              },
              "maxRSS": {
                "type": "number"
              },
              "minorPageFault": {
                "type": "number"
              },
              "sharedMemorySize": {
                "type": "number"
              },
              "signalsCount": {
                "type": "number"
              },
              "swappedOut": {
                "type": "number"
              },
              "systemCPUTime": {
                "type": "number"
              },
              "unsharedDataSize": {
                "type": "number"
              },
              "unsharedStackSize": {
                "type": "number"
              },
              "userCPUTime": {
                "type": "number"
              },
              "voluntaryContextSwitches": {
                "type": "number"
              }
            },
            "required": [
              "fsRead",
              "fsWrite",
              "involuntaryContextSwitches",
              "ipcReceived",
              "ipcSent",
              "majorPageFault",
              "maxRSS",
              "minorPageFault",
              "sharedMemorySize",
              "signalsCount",
              "swappedOut",
              "systemCPUTime",
              "unsharedDataSize",
              "unsharedStackSize",
              "userCPUTime",
              "voluntaryContextSwitches"
            ]
          }
        },
        "required": [
          "cpu",
          "memory",
          "resource"
        ]
      },
      "description": "Get performance information.\n\nGet perofmration information composed with CPU, memory and resource usage."
    },
    {
      "method": "get",
      "path": "/monitors/system",
      "name": "monitors_system_get",
      "parameters": [
        {
          "type": "object",
          "properties": {}
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "number",
            "title": "Random Unique ID",
            "description": "Random Unique ID."
          },
          "arguments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "`process.argv`"
          },
          "commit": {
            "type": "object",
            "properties": {
              "shortHash": {
                "type": "string"
              },
              "branch": {
                "type": "string"
              },
              "hash": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "sanitizedSubject": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "author": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "email"
                ],
                "description": "Git user account info."
              },
              "committer": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "email"
                ],
                "description": "Git user account info."
              },
              "authored_at": {
                "type": "string"
              },
              "commited_at": {
                "type": "string"
              },
              "notes": {
                "type": "string"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "shortHash",
              "branch",
              "hash",
              "subject",
              "sanitizedSubject",
              "body",
              "author",
              "committer",
              "authored_at",
              "commited_at",
              "tags"
            ],
            "description": "Git commit info."
          },
          "package": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "main": {
                "type": "string"
              },
              "typings": {
                "type": "string"
              },
              "scripts": {
                "type": "object",
                "properties": {},
                "description": "Construct a type with a set of properties K of type T",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "repository": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "git"
                    ]
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "url"
                ]
              },
              "author": {
                "type": "string"
              },
              "license": {
                "type": "string"
              },
              "bugs": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ]
              },
              "homepage": {
                "type": "string"
              },
              "devDependencies": {
                "type": "object",
                "properties": {},
                "description": "Construct a type with a set of properties K of type T",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "dependencies": {
                "type": "object",
                "properties": {},
                "description": "Construct a type with a set of properties K of type T",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "publishConfig": {
                "type": "object",
                "properties": {
                  "registry": {
                    "type": "string"
                  }
                },
                "required": [
                  "registry"
                ]
              },
              "files": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name",
              "version",
              "description",
              "scripts",
              "repository",
              "author",
              "license",
              "bugs",
              "homepage",
              "dependencies"
            ],
            "description": "NPM package info."
          },
          "created_at": {
            "type": "string",
            "title": "Creation time of this server",
            "description": "Creation time of this server."
          }
        },
        "required": [
          "uid",
          "arguments",
          "commit",
          "package",
          "created_at"
        ],
        "description": "System Information."
      },
      "description": "Get system information.\n\nGet system information with commit and package information.\n\nAs such information is a type of sensitive, response be encrypted."
    },
    {
      "method": "get",
      "path": "/shoppings/admins/authenticate",
      "name": "shoppings_admins_authenticate_get",
      "parameters": [
        {
          "type": "object",
          "properties": {}
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "administrator"
            ],
            "title": "Discriminant for the type of customer",
            "description": "Discriminant for the type of customer."
          },
          "member": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname that uniquely identifies the member",
                "description": "Nickname that uniquely identifies the member."
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "value": {
                      "type": "string",
                      "format": "email",
                      "title": "Email address value",
                      "description": "Email address value."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "created_at"
                  ],
                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                },
                "title": "List of emails",
                "description": "List of emails."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
              }
            },
            "required": [
              "id",
              "nickname",
              "emails",
              "created_at"
            ],
            "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
          },
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of record",
            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
          }
        },
        "required": [
          "type",
          "member",
          "customer",
          "citizen",
          "id",
          "created_at"
        ],
        "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
      },
      "description": "Get administrator information.\n\nGet {@link IShoppingAdministrator.IInvert administrator} information of\ncurrent {@link IShoppingCustomer customer}.\n\nIf current {@link IShoppingMember member} is not an administrator,\nit throws 403 forbidden exception."
    },
    {
      "method": "post",
      "path": "/shoppings/admins/authenticate",
      "name": "shoppings_admins_authenticate_post",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {},
              "description": "Joining request info."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "administrator"
            ],
            "title": "Discriminant for the type of customer",
            "description": "Discriminant for the type of customer."
          },
          "member": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname that uniquely identifies the member",
                "description": "Nickname that uniquely identifies the member."
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "value": {
                      "type": "string",
                      "format": "email",
                      "title": "Email address value",
                      "description": "Email address value."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "created_at"
                  ],
                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                },
                "title": "List of emails",
                "description": "List of emails."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
              }
            },
            "required": [
              "id",
              "nickname",
              "emails",
              "created_at"
            ],
            "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
          },
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of record",
            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
          }
        },
        "required": [
          "type",
          "member",
          "customer",
          "citizen",
          "id",
          "created_at"
        ],
        "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
      },
      "description": "Join as an administrator.\n\nJoin as an administrator with {@link IShoppingAdministrator.IJoin joining info}.\n\nThis method is allowed only when the {@link IShoppingCustomer customer} already\nhas joined the {@link IShoppingMember membership}. IF not, he (she) must\naccomplish it before. If not, 403 forbidden exception would be thrown."
    },
    {
      "method": "put",
      "path": "/shoppings/admins/authenticate/login",
      "name": "shoppings_admins_authenticate_login_put",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "title": "Email address of member",
                  "description": "Email address of member.\n\nIf the member has multiple email addresses, just use one of them."
                },
                "password": {
                  "type": "string",
                  "title": "Password of the member account",
                  "description": "Password of the member account."
                }
              },
              "required": [
                "email",
                "password"
              ],
              "description": "Login request info."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "administrator"
            ],
            "title": "Discriminant for the type of customer",
            "description": "Discriminant for the type of customer."
          },
          "member": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname that uniquely identifies the member",
                "description": "Nickname that uniquely identifies the member."
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "value": {
                      "type": "string",
                      "format": "email",
                      "title": "Email address value",
                      "description": "Email address value."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "created_at"
                  ],
                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                },
                "title": "List of emails",
                "description": "List of emails."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
              }
            },
            "required": [
              "id",
              "nickname",
              "emails",
              "created_at"
            ],
            "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
          },
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of record",
            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
          }
        },
        "required": [
          "type",
          "member",
          "customer",
          "citizen",
          "id",
          "created_at"
        ],
        "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
      },
      "description": "Login as an administrator.\n\nLogin as an administrator with {@link IShoppingAdministrator.ILogin login info}.\n\nThis method has exactly same effect with\n{@link ShoppingApi.functional.customers.authenticate.login } function, but\nreturned type is a llttle different. The similar function returns\n{@link IShoppingCustomer } type that starting from the customer information, so\nthat you have to access to the administrator info through\n`customer.member.administrator`. In contrast with that, this method returns\n{@link IShoppingAdministrator.IInvert } type that starting from the administrator\ninfo, so that can access to the customer info through `administrator.customer`.\n\nOf course, to use this function, you had to {@link join } as an administrator\nbefore. If not, 403 forbidden exception would be thrown,"
    },
    {
      "method": "delete",
      "path": "/shoppings/admins/coupons/{id}",
      "name": "shoppings_admins_coupons_eraseById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Target coupon's "
            }
          }
        }
      ],
      "description": "Erase a coupon.\n\nErase a {@link IShoppingCoupon coupon} with given ID.\n\nFor reference, if there're some {@link IShoppingCouponTicket tickets}\nwhich are already issued from the target coupon, they would not be affected.\nThose tickets are still valid until their expration time."
    },
    {
      "method": "post",
      "path": "/shoppings/admins/deposits",
      "name": "shoppings_admins_deposits_post",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                },
                "direction": {
                  "type": "number",
                  "enum": [
                    -1,
                    1
                  ]
                }
              },
              "required": [
                "code",
                "source",
                "direction"
              ]
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "code": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "direction": {
            "type": "number",
            "enum": [
              1,
              -1
            ]
          }
        },
        "required": [
          "id",
          "created_at",
          "code",
          "source",
          "direction"
        ]
      },
      "description": "Create a new deposit metadata.\n\nCreate a new {@link IShoppingDeposit deposit} metadata.\n\nThis action means that adding a new origin reason of deposit's income/outcome.\nOf course, creating a new deposit record does not mean that automatically\nincrease or decrease the {@link IShoppingCustomer customer}'s balance\nfollowing the record's reason why. The logic must be developed manually\nin the backend side."
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/deposits",
      "name": "shoppings_admins_deposits_patch",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "source": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "direction": {
                      "type": "number",
                      "enum": [
                        -1,
                        1
                      ]
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-deposit.source",
                      "-deposit.code",
                      "-deposit.direction",
                      "+deposit.source",
                      "+deposit.code",
                      "+deposit.direction"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              }
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "code": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                },
                "direction": {
                  "type": "number",
                  "enum": [
                    1,
                    -1
                  ]
                }
              },
              "required": [
                "id",
                "created_at",
                "code",
                "source",
                "direction"
              ]
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "Get deposit metadata list.\n\nList up every {@link IShoppingDeposit deposit} metadata informations\nwith {@link IPage pagination}.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingDeposit.IRequest.search search condition} in the request body.\nAlso, it is possible to customize sequence order of records by configuring\n{@link IShoppingDeposit.IRequest.sort sort condition}."
    },
    {
      "method": "get",
      "path": "/shoppings/admins/deposits/{id}",
      "name": "shoppings_admins_deposits_getById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target deposit's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "code": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "direction": {
            "type": "number",
            "enum": [
              1,
              -1
            ]
          }
        },
        "required": [
          "id",
          "created_at",
          "code",
          "source",
          "direction"
        ]
      },
      "description": "Get a deposit metadata.\n\nGet a {@link IShoppingDeposit deposit} metadata information with its ID."
    },
    {
      "method": "delete",
      "path": "/shoppings/admins/deposits/{id}",
      "name": "shoppings_admins_deposits_eraseById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target deposit's "
            }
          }
        }
      ],
      "description": "Erase a deposit metadata.\n\nErase a {@link IShoppingDeposit deposit} metadata, so that no more\n{@link IShoppingCustomer customer}'s balance does not be increased or\ndecreased by the deposit's reason why."
    },
    {
      "method": "get",
      "path": "/shoppings/admins/deposits/{code}/get",
      "name": "shoppings_admins_deposits_get_getByCode",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": ""
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "code": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "direction": {
            "type": "number",
            "enum": [
              1,
              -1
            ]
          }
        },
        "required": [
          "id",
          "created_at",
          "code",
          "source",
          "direction"
        ]
      },
      "description": "Get a deposit metadata by its code.\n\nGet a {@link IShoppingDeposit deposit} metadata information with its code."
    },
    {
      "method": "post",
      "path": "/shoppings/admins/mileages",
      "name": "shoppings_admins_mileages_post",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                },
                "direction": {
                  "type": "number",
                  "enum": [
                    -1,
                    1
                  ]
                },
                "value": {
                  "type": "number",
                  "nullable": true
                }
              },
              "required": [
                "code",
                "source",
                "direction",
                "value"
              ]
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "number",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "code": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "direction": {
            "type": "number",
            "enum": [
              1,
              -1
            ]
          }
        },
        "required": [
          "id",
          "value",
          "created_at",
          "code",
          "source",
          "direction"
        ]
      },
      "description": "Create a new mileage metadata.\n\nCreate a new {@link IShoppingMileage mileage} metadata.\n\nThis action means that adding a new origin reason of mileage's income/outcome.\nOf course, creating a new mileage record does not mean that automatically\nincrease or decrease the {@link IShoppingCustomer customer}'s balance\nfollowing the record's reason why. The logic must be developed manually\nin the backend side."
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/mileages",
      "name": "shoppings_admins_mileages_patch",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "source": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "direction": {
                      "type": "number",
                      "enum": [
                        -1,
                        1
                      ]
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-mileage.source",
                      "-mileage.code",
                      "-mileage.direction",
                      "+mileage.source",
                      "+mileage.code",
                      "+mileage.direction"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              }
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "value": {
                  "type": "number",
                  "nullable": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "code": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                },
                "direction": {
                  "type": "number",
                  "enum": [
                    1,
                    -1
                  ]
                }
              },
              "required": [
                "id",
                "value",
                "created_at",
                "code",
                "source",
                "direction"
              ]
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "Get mileage metadata list.\n\nList up every {@link IShoppingMileage mileage} metadata informations\nwith {@link IPage pagination}.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingMileage.IRequest.search search condition} in the request body.\nAlso, it is possible to customize sequence order of records by configuring\n{@link IShoppingMileage.IRequest.sort sort condition}."
    },
    {
      "method": "get",
      "path": "/shoppings/admins/mileages/{id}",
      "name": "shoppings_admins_mileages_getById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target mileage's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "number",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "code": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "direction": {
            "type": "number",
            "enum": [
              1,
              -1
            ]
          }
        },
        "required": [
          "id",
          "value",
          "created_at",
          "code",
          "source",
          "direction"
        ]
      },
      "description": "Get a mileage metadata.\n\nGet a {@link IShoppingMileage mileage} metadata information with its ID."
    },
    {
      "method": "delete",
      "path": "/shoppings/admins/mileages/{id}",
      "name": "shoppings_admins_mileages_eraseById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target mileage's "
            }
          }
        }
      ],
      "description": "Erase a mileage metadata.\n\nErase a {@link IShoppingMileage mileage} metadata, so that no more\n{@link IShoppingCustomer customer}'s balance does not be increased or\ndecreased by the mileage's reason why."
    },
    {
      "method": "get",
      "path": "/shoppings/admins/mileages/{code}/get",
      "name": "shoppings_admins_mileages_get_getByCode",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": ""
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "number",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "code": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "direction": {
            "type": "number",
            "enum": [
              1,
              -1
            ]
          }
        },
        "required": [
          "id",
          "value",
          "created_at",
          "code",
          "source",
          "direction"
        ]
      },
      "description": "Get a mileage metadata by its code.\n\nGet a {@link IShoppingMileage mileage} metadata information with its code."
    },
    {
      "method": "post",
      "path": "/shoppings/admins/mileages/donations",
      "name": "shoppings_admins_mileages_donations_post",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "citizen_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "value": {
                  "type": "number"
                },
                "reason": {
                  "type": "string"
                }
              },
              "required": [
                "citizen_id",
                "value",
                "reason"
              ]
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "administrator": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "administrator"
                ],
                "title": "Discriminant for the type of customer",
                "description": "Discriminant for the type of customer."
              },
              "member": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname that uniquely identifies the member",
                    "description": "Nickname that uniquely identifies the member."
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "value": {
                          "type": "string",
                          "format": "email",
                          "title": "Email address value",
                          "description": "Email address value."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        }
                      },
                      "required": [
                        "id",
                        "value",
                        "created_at"
                      ],
                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                    },
                    "title": "List of emails",
                    "description": "List of emails."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                  }
                },
                "required": [
                  "id",
                  "nickname",
                  "emails",
                  "created_at"
                ],
                "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
              },
              "customer": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "channel": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "code": {
                        "type": "string",
                        "title": "Identifier code",
                        "description": "Identifier code."
                      },
                      "name": {
                        "type": "string",
                        "title": "Name of the channel",
                        "description": "Name of the channel."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "code",
                      "name"
                    ],
                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                  },
                  "external_user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen activation info.",
                        "title": "Citizen activation info",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                      },
                      "application": {
                        "type": "string",
                        "title": "Identifier code of the external service",
                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                      },
                      "uid": {
                        "type": "string",
                        "title": "Identifier key of external user from the external system",
                        "description": "Identifier key of external user from the external system."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname of external user in the external system",
                        "description": "Nickname of external user in the external system."
                      },
                      "data": {
                        "description": "Additional information about external user from the external\nsystem."
                      }
                    },
                    "required": [
                      "id",
                      "citizen",
                      "created_at",
                      "application",
                      "uid",
                      "nickname",
                      "data"
                    ],
                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                    "title": "External user information",
                    "nullable": true
                  },
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "title": "Connection address",
                    "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                  },
                  "referrer": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "title": "Referrer address",
                    "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                  },
                  "ip": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "ipv4"
                      },
                      {
                        "type": "string",
                        "format": "ipv6"
                      }
                    ],
                    "title": "Connection IP Address",
                    "description": "Connection IP Address."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of the connection record",
                    "description": "Creation time of the connection record."
                  }
                },
                "required": [
                  "id",
                  "channel",
                  "external_user",
                  "href",
                  "referrer",
                  "ip",
                  "created_at"
                ],
                "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
              }
            },
            "required": [
              "type",
              "member",
              "customer",
              "citizen",
              "id",
              "created_at"
            ],
            "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
          },
          "value": {
            "type": "number"
          },
          "reason": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "administrator",
          "citizen",
          "value",
          "reason",
          "created_at"
        ]
      },
      "description": "Donate a mileage to a citizen.\n\nDonate a mileage to a specific {@link IShoppingCitizen citizen} from\ncurrent {@link IShoppingAdministrator administrator}, with detailed\nreason why.\n\nNote that, as donating mileage affects to the citizen's balance and\ncurrent shopping mall's operating profit, administrator must archive\nthe detailed reason why the mileage is donated."
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/mileages/donations",
      "name": "shoppings_admins_mileages_donations_patch",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "minimum": {
                      "type": "number",
                      "minimum": 0
                    },
                    "maximum": {
                      "type": "number",
                      "minimum": 0
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-donation.created_at",
                      "-donation.value",
                      "-donation.reason",
                      "+donation.created_at",
                      "+donation.value",
                      "+donation.reason"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              }
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "administrator": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "administrator"
                      ],
                      "title": "Discriminant for the type of customer",
                      "description": "Discriminant for the type of customer."
                    },
                    "member": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname that uniquely identifies the member",
                          "description": "Nickname that uniquely identifies the member."
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "value": {
                                "type": "string",
                                "format": "email",
                                "title": "Email address value",
                                "description": "Email address value."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "created_at"
                            ],
                            "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                          },
                          "title": "List of emails",
                          "description": "List of emails."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                        }
                      },
                      "required": [
                        "id",
                        "nickname",
                        "emails",
                        "created_at"
                      ],
                      "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "channel": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "code": {
                              "type": "string",
                              "title": "Identifier code",
                              "description": "Identifier code."
                            },
                            "name": {
                              "type": "string",
                              "title": "Name of the channel",
                              "description": "Name of the channel."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "code",
                            "name"
                          ],
                          "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                        },
                        "external_user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "citizen": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "mobile": {
                                  "type": "string",
                                  "pattern": "^[0-9]*$",
                                  "title": "Mobile number",
                                  "description": "Mobile number."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen activation info.",
                              "title": "Citizen activation info",
                              "nullable": true
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                            },
                            "application": {
                              "type": "string",
                              "title": "Identifier code of the external service",
                              "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                            },
                            "uid": {
                              "type": "string",
                              "title": "Identifier key of external user from the external system",
                              "description": "Identifier key of external user from the external system."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname of external user in the external system",
                              "description": "Nickname of external user in the external system."
                            },
                            "data": {
                              "description": "Additional information about external user from the external\nsystem."
                            }
                          },
                          "required": [
                            "id",
                            "citizen",
                            "created_at",
                            "application",
                            "uid",
                            "nickname",
                            "data"
                          ],
                          "description": "External user information.\n\nWhen the customer has come frome an external service.",
                          "title": "External user information",
                          "nullable": true
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "title": "Connection address",
                          "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                        },
                        "referrer": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true,
                          "title": "Referrer address",
                          "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                        },
                        "ip": {
                          "oneOf": [
                            {
                              "type": "string",
                              "format": "ipv4"
                            },
                            {
                              "type": "string",
                              "format": "ipv6"
                            }
                          ],
                          "title": "Connection IP Address",
                          "description": "Connection IP Address."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of the connection record",
                          "description": "Creation time of the connection record."
                        }
                      },
                      "required": [
                        "id",
                        "channel",
                        "external_user",
                        "href",
                        "referrer",
                        "ip",
                        "created_at"
                      ],
                      "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                    },
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                    }
                  },
                  "required": [
                    "type",
                    "member",
                    "customer",
                    "citizen",
                    "id",
                    "created_at"
                  ],
                  "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
                },
                "citizen": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    },
                    "mobile": {
                      "type": "string",
                      "pattern": "^[0-9]*$",
                      "title": "Mobile number",
                      "description": "Mobile number."
                    },
                    "name": {
                      "type": "string",
                      "title": "Real name, or equivalent nickname",
                      "description": "Real name, or equivalent nickname."
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "mobile",
                    "name"
                  ],
                  "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                },
                "value": {
                  "type": "number"
                },
                "reason": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "administrator",
                "citizen",
                "value",
                "reason",
                "created_at"
              ]
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every mileage donation histories.\n\nList up every {@link IShoppingMileageDonation mileage donation histories}\nwith {@link IPage pagination}.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingMileageDonation.IRequest.search search condition} in\nthe request body. Also, it is possible to customize sequence order of\nrecords by configuring {@link IShoppingMileageDonation.IRequest.sort sort}."
    },
    {
      "method": "get",
      "path": "/shoppings/admins/mileages/donations/{id}",
      "name": "shoppings_admins_mileages_donations_getById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target history's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "administrator": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "administrator"
                ],
                "title": "Discriminant for the type of customer",
                "description": "Discriminant for the type of customer."
              },
              "member": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname that uniquely identifies the member",
                    "description": "Nickname that uniquely identifies the member."
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "value": {
                          "type": "string",
                          "format": "email",
                          "title": "Email address value",
                          "description": "Email address value."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        }
                      },
                      "required": [
                        "id",
                        "value",
                        "created_at"
                      ],
                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                    },
                    "title": "List of emails",
                    "description": "List of emails."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                  }
                },
                "required": [
                  "id",
                  "nickname",
                  "emails",
                  "created_at"
                ],
                "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
              },
              "customer": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "channel": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "code": {
                        "type": "string",
                        "title": "Identifier code",
                        "description": "Identifier code."
                      },
                      "name": {
                        "type": "string",
                        "title": "Name of the channel",
                        "description": "Name of the channel."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "code",
                      "name"
                    ],
                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                  },
                  "external_user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen activation info.",
                        "title": "Citizen activation info",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                      },
                      "application": {
                        "type": "string",
                        "title": "Identifier code of the external service",
                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                      },
                      "uid": {
                        "type": "string",
                        "title": "Identifier key of external user from the external system",
                        "description": "Identifier key of external user from the external system."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname of external user in the external system",
                        "description": "Nickname of external user in the external system."
                      },
                      "data": {
                        "description": "Additional information about external user from the external\nsystem."
                      }
                    },
                    "required": [
                      "id",
                      "citizen",
                      "created_at",
                      "application",
                      "uid",
                      "nickname",
                      "data"
                    ],
                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                    "title": "External user information",
                    "nullable": true
                  },
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "title": "Connection address",
                    "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                  },
                  "referrer": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "title": "Referrer address",
                    "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                  },
                  "ip": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "ipv4"
                      },
                      {
                        "type": "string",
                        "format": "ipv6"
                      }
                    ],
                    "title": "Connection IP Address",
                    "description": "Connection IP Address."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of the connection record",
                    "description": "Creation time of the connection record."
                  }
                },
                "required": [
                  "id",
                  "channel",
                  "external_user",
                  "href",
                  "referrer",
                  "ip",
                  "created_at"
                ],
                "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
              }
            },
            "required": [
              "type",
              "member",
              "customer",
              "citizen",
              "id",
              "created_at"
            ],
            "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
          },
          "value": {
            "type": "number"
          },
          "reason": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "administrator",
          "citizen",
          "value",
          "reason",
          "created_at"
        ]
      },
      "description": "Get a mileage donation history.\n\nGet a {@link IShoppingMileageDonation mileage donation history} with its ID."
    },
    {
      "method": "post",
      "path": "/shoppings/admins/sales/{saleId}/questions/{inquiryId}/comments",
      "name": "shoppings_admins_sales_questions_comments_postBySaleidAndInquiryid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "body",
                "files"
              ],
              "description": "Creation information of the comment."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "administrator"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "seller"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "customer"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                        "title": "Citizen information",
                        "nullable": true
                      },
                      "seller": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Seller information.\n\nIf the member also signed up as a seller.",
                        "title": "Seller information",
                        "nullable": true
                      },
                      "administrator": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                        "title": "Administrator information",
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "citizen",
                      "seller",
                      "administrator",
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Membership information.\n\nIf the customer has joined as a member.",
                    "title": "Membership information",
                    "nullable": true
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "channel": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "code": {
                        "type": "string",
                        "title": "Identifier code",
                        "description": "Identifier code."
                      },
                      "name": {
                        "type": "string",
                        "title": "Name of the channel",
                        "description": "Name of the channel."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "code",
                      "name"
                    ],
                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                  },
                  "external_user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen activation info.",
                        "title": "Citizen activation info",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                      },
                      "application": {
                        "type": "string",
                        "title": "Identifier code of the external service",
                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                      },
                      "uid": {
                        "type": "string",
                        "title": "Identifier key of external user from the external system",
                        "description": "Identifier key of external user from the external system."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname of external user in the external system",
                        "description": "Nickname of external user in the external system."
                      },
                      "data": {
                        "description": "Additional information about external user from the external\nsystem."
                      }
                    },
                    "required": [
                      "id",
                      "citizen",
                      "created_at",
                      "application",
                      "uid",
                      "nickname",
                      "data"
                    ],
                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                    "title": "External user information",
                    "nullable": true
                  },
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "title": "Connection address",
                    "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                  },
                  "referrer": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "title": "Referrer address",
                    "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                  },
                  "ip": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "ipv4"
                      },
                      {
                        "type": "string",
                        "format": "ipv6"
                      }
                    ],
                    "title": "Connection IP Address",
                    "description": "Connection IP Address."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of the connection record",
                    "description": "Creation time of the connection record."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "citizen",
                  "id",
                  "channel",
                  "external_user",
                  "href",
                  "referrer",
                  "ip",
                  "created_at"
                ],
                "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "body",
                "files"
              ],
              "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
      },
      "description": "Create an inquiry comment.\n\nCreate an {@link IShoppingSaleInquiryComment inquiry comment} of a\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\ncreate an inquiry comment to your own {@link IShoppingSale sale}'s inquiry.\nOtherwise, you can create an inquiry comment to every inquiries of the sales."
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/sales/{saleId}/questions/{inquiryId}/comments",
      "name": "shoppings_admins_sales_questions_comments_patchBySaleidAndInquiryid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of the comments with pagination and searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "writer": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "administrator"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "channel": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "code": {
                                  "type": "string",
                                  "title": "Identifier code",
                                  "description": "Identifier code."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of the channel",
                                  "description": "Name of the channel."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "code",
                                "name"
                              ],
                              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                            },
                            "external_user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "citizen": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "title": "Primary Key",
                                      "description": "Primary Key."
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "Creation time of record",
                                      "description": "Creation time of record."
                                    },
                                    "mobile": {
                                      "type": "string",
                                      "pattern": "^[0-9]*$",
                                      "title": "Mobile number",
                                      "description": "Mobile number."
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen activation info.",
                                  "title": "Citizen activation info",
                                  "nullable": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                                },
                                "application": {
                                  "type": "string",
                                  "title": "Identifier code of the external service",
                                  "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                                },
                                "uid": {
                                  "type": "string",
                                  "title": "Identifier key of external user from the external system",
                                  "description": "Identifier key of external user from the external system."
                                },
                                "nickname": {
                                  "type": "string",
                                  "title": "Nickname of external user in the external system",
                                  "description": "Nickname of external user in the external system."
                                },
                                "data": {
                                  "description": "Additional information about external user from the external\nsystem."
                                }
                              },
                              "required": [
                                "id",
                                "citizen",
                                "created_at",
                                "application",
                                "uid",
                                "nickname",
                                "data"
                              ],
                              "description": "External user information.\n\nWhen the customer has come frome an external service.",
                              "title": "External user information",
                              "nullable": true
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "title": "Connection address",
                              "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                            },
                            "referrer": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true,
                              "title": "Referrer address",
                              "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                            },
                            "ip": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "format": "ipv4"
                                },
                                {
                                  "type": "string",
                                  "format": "ipv6"
                                }
                              ],
                              "title": "Connection IP Address",
                              "description": "Connection IP Address."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of the connection record",
                              "description": "Creation time of the connection record."
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "external_user",
                            "href",
                            "referrer",
                            "ip",
                            "created_at"
                          ],
                          "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "customer",
                        "citizen",
                        "id",
                        "created_at"
                      ],
                      "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "seller"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "channel": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "code": {
                                  "type": "string",
                                  "title": "Identifier code",
                                  "description": "Identifier code."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of the channel",
                                  "description": "Name of the channel."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "code",
                                "name"
                              ],
                              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                            },
                            "external_user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "citizen": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "title": "Primary Key",
                                      "description": "Primary Key."
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "Creation time of record",
                                      "description": "Creation time of record."
                                    },
                                    "mobile": {
                                      "type": "string",
                                      "pattern": "^[0-9]*$",
                                      "title": "Mobile number",
                                      "description": "Mobile number."
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen activation info.",
                                  "title": "Citizen activation info",
                                  "nullable": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                                },
                                "application": {
                                  "type": "string",
                                  "title": "Identifier code of the external service",
                                  "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                                },
                                "uid": {
                                  "type": "string",
                                  "title": "Identifier key of external user from the external system",
                                  "description": "Identifier key of external user from the external system."
                                },
                                "nickname": {
                                  "type": "string",
                                  "title": "Nickname of external user in the external system",
                                  "description": "Nickname of external user in the external system."
                                },
                                "data": {
                                  "description": "Additional information about external user from the external\nsystem."
                                }
                              },
                              "required": [
                                "id",
                                "citizen",
                                "created_at",
                                "application",
                                "uid",
                                "nickname",
                                "data"
                              ],
                              "description": "External user information.\n\nWhen the customer has come frome an external service.",
                              "title": "External user information",
                              "nullable": true
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "title": "Connection address",
                              "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                            },
                            "referrer": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true,
                              "title": "Referrer address",
                              "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                            },
                            "ip": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "format": "ipv4"
                                },
                                {
                                  "type": "string",
                                  "format": "ipv6"
                                }
                              ],
                              "title": "Connection IP Address",
                              "description": "Connection IP Address."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of the connection record",
                              "description": "Creation time of the connection record."
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "external_user",
                            "href",
                            "referrer",
                            "ip",
                            "created_at"
                          ],
                          "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "customer",
                        "citizen",
                        "id",
                        "created_at"
                      ],
                      "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "customer"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "citizen": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "mobile": {
                                  "type": "string",
                                  "pattern": "^[0-9]*$",
                                  "title": "Mobile number",
                                  "description": "Mobile number."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                              "title": "Citizen information",
                              "nullable": true
                            },
                            "seller": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation tmie of record",
                                  "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                                }
                              },
                              "required": [
                                "id",
                                "created_at"
                              ],
                              "description": "Seller information.\n\nIf the member also signed up as a seller.",
                              "title": "Seller information",
                              "nullable": true
                            },
                            "administrator": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                                }
                              },
                              "required": [
                                "id",
                                "created_at"
                              ],
                              "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                              "title": "Administrator information",
                              "nullable": true
                            },
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "citizen",
                            "seller",
                            "administrator",
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Membership information.\n\nIf the customer has joined as a member.",
                          "title": "Membership information",
                          "nullable": true
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "channel": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "code": {
                              "type": "string",
                              "title": "Identifier code",
                              "description": "Identifier code."
                            },
                            "name": {
                              "type": "string",
                              "title": "Name of the channel",
                              "description": "Name of the channel."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "code",
                            "name"
                          ],
                          "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                        },
                        "external_user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "citizen": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "mobile": {
                                  "type": "string",
                                  "pattern": "^[0-9]*$",
                                  "title": "Mobile number",
                                  "description": "Mobile number."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen activation info.",
                              "title": "Citizen activation info",
                              "nullable": true
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                            },
                            "application": {
                              "type": "string",
                              "title": "Identifier code of the external service",
                              "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                            },
                            "uid": {
                              "type": "string",
                              "title": "Identifier key of external user from the external system",
                              "description": "Identifier key of external user from the external system."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname of external user in the external system",
                              "description": "Nickname of external user in the external system."
                            },
                            "data": {
                              "description": "Additional information about external user from the external\nsystem."
                            }
                          },
                          "required": [
                            "id",
                            "citizen",
                            "created_at",
                            "application",
                            "uid",
                            "nickname",
                            "data"
                          ],
                          "description": "External user information.\n\nWhen the customer has come frome an external service.",
                          "title": "External user information",
                          "nullable": true
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "title": "Connection address",
                          "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                        },
                        "referrer": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true,
                          "title": "Referrer address",
                          "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                        },
                        "ip": {
                          "oneOf": [
                            {
                              "type": "string",
                              "format": "ipv4"
                            },
                            {
                              "type": "string",
                              "format": "ipv6"
                            }
                          ],
                          "title": "Connection IP Address",
                          "description": "Connection IP Address."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of the connection record",
                          "description": "Creation time of the connection record."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "citizen",
                        "id",
                        "channel",
                        "external_user",
                        "href",
                        "referrer",
                        "ip",
                        "created_at"
                      ],
                      "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                    }
                  ]
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "parent_id": {
                  "type": "string",
                  "format": "uuid",
                  "nullable": true,
                  "title": "Parent comment's ID",
                  "description": "Parent comment's ID."
                },
                "snapshots": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of snapshot record",
                        "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                      },
                      "format": {
                        "type": "string",
                        "enum": [
                          "html",
                          "md",
                          "txt"
                        ]
                      },
                      "body": {
                        "type": "string",
                        "title": "Content body of comment",
                        "description": "Content body of comment."
                      },
                      "files": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 255,
                              "title": "File name, except extension",
                              "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                            },
                            "extension": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 8,
                              "nullable": true,
                              "title": "Extension",
                              "description": "Extension.\n\nPossible to omit like `README` case."
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "title": "URL path of the real file",
                              "description": "URL path of the real file."
                            }
                          },
                          "required": [
                            "name",
                            "extension",
                            "url"
                          ]
                        },
                        "title": "List of attachment files",
                        "description": "List of attachment files."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "format",
                      "body",
                      "files"
                    ],
                    "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
                  },
                  "minItems": 1,
                  "title": "List of snapshot contents",
                  "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of comment",
                  "description": "Creation time of comment."
                }
              },
              "required": [
                "writer",
                "id",
                "parent_id",
                "snapshots",
                "created_at"
              ],
              "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every inquiry comments.\n\nList up every {@link IShoppingSaleInquiryComment inquiry comments} of a\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}\nwith {@link IPage pagination}.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingSaleInquiryComment.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleInquiryComment.IRequest.sort sort condition}.\n\nBy the way, if you're a {@link IShoppingSeller seller}, you can only access\nto the your own {@link IShoppingSale sale}'s inquiries. Otherwise, you\ncan access to every inquiries of the sales."
    },
    {
      "method": "get",
      "path": "/shoppings/admins/sales/{saleId}/questions/{inquiryId}/comments/{id}",
      "name": "shoppings_admins_sales_questions_comments_getBySaleidAndInquiryidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry comment's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "administrator"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "seller"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "customer"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                        "title": "Citizen information",
                        "nullable": true
                      },
                      "seller": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Seller information.\n\nIf the member also signed up as a seller.",
                        "title": "Seller information",
                        "nullable": true
                      },
                      "administrator": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                        "title": "Administrator information",
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "citizen",
                      "seller",
                      "administrator",
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Membership information.\n\nIf the customer has joined as a member.",
                    "title": "Membership information",
                    "nullable": true
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "channel": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "code": {
                        "type": "string",
                        "title": "Identifier code",
                        "description": "Identifier code."
                      },
                      "name": {
                        "type": "string",
                        "title": "Name of the channel",
                        "description": "Name of the channel."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "code",
                      "name"
                    ],
                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                  },
                  "external_user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen activation info.",
                        "title": "Citizen activation info",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                      },
                      "application": {
                        "type": "string",
                        "title": "Identifier code of the external service",
                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                      },
                      "uid": {
                        "type": "string",
                        "title": "Identifier key of external user from the external system",
                        "description": "Identifier key of external user from the external system."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname of external user in the external system",
                        "description": "Nickname of external user in the external system."
                      },
                      "data": {
                        "description": "Additional information about external user from the external\nsystem."
                      }
                    },
                    "required": [
                      "id",
                      "citizen",
                      "created_at",
                      "application",
                      "uid",
                      "nickname",
                      "data"
                    ],
                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                    "title": "External user information",
                    "nullable": true
                  },
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "title": "Connection address",
                    "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                  },
                  "referrer": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "title": "Referrer address",
                    "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                  },
                  "ip": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "ipv4"
                      },
                      {
                        "type": "string",
                        "format": "ipv6"
                      }
                    ],
                    "title": "Connection IP Address",
                    "description": "Connection IP Address."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of the connection record",
                    "description": "Creation time of the connection record."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "citizen",
                  "id",
                  "channel",
                  "external_user",
                  "href",
                  "referrer",
                  "ip",
                  "created_at"
                ],
                "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "body",
                "files"
              ],
              "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
      },
      "description": "Get an inquiry comment info.\n\nGet a detailed {@link IShoppingSaleInquiryComment inquiry comment}\ninformation of a {@link IShoppingSaleQuestion question} or\n{@link IShoppingSaleReview review}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s inquiry comment.\nOtherwise, you can access to every inquiry comments of the sales."
    },
    {
      "method": "put",
      "path": "/shoppings/admins/sales/{saleId}/questions/{inquiryId}/comments/{id}",
      "name": "shoppings_admins_sales_questions_comments_putBySaleidAndInquiryidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry comment's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "body",
                "files"
              ],
              "description": "Creation information of the comment."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
          },
          "format": {
            "type": "string",
            "enum": [
              "html",
              "md",
              "txt"
            ]
          },
          "body": {
            "type": "string",
            "title": "Content body of comment",
            "description": "Content body of comment."
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "title": "File name, except extension",
                  "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                },
                "extension": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 8,
                  "nullable": true,
                  "title": "Extension",
                  "description": "Extension.\n\nPossible to omit like `README` case."
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "title": "URL path of the real file",
                  "description": "URL path of the real file."
                }
              },
              "required": [
                "name",
                "extension",
                "url"
              ]
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "body",
          "files"
        ],
        "description": "Snapshot content of the comment."
      },
      "description": "Update an inquiry comment.\n\nUpdate an {@link IShoppingSaleInquiryComment inquiry comment} to a specific\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}.\n\nBy the way, as is the general policy of this shopping mall regarding\ncomments, modifying a comment does not actually change the existing content.\nModified content is accumulated and recorded in the existing comment record\nas a new {@link IShoppingSaleInquiryComment.ISnapshot snapshot}. And this\nis made public to everyone, who can read this inquiry comment.\n\nThis is to prevent customers or sellers from modifying their comments and\nmanipulating the circumstances due to the nature of e-commerce, where\ndisputes easily arise. That is, to preserve evidence."
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/sales/{saleId}/questions",
      "name": "shoppings_admins_sales_questions_patchBySaleid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "answered": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "title": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "title_or_body": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at",
                      "-nickname",
                      "-answered_at",
                      "-title",
                      "-updated_at",
                      "+nickname",
                      "+answered_at",
                      "+title",
                      "+updated_at"
                    ]
                  },
                  "title": "Sorting conditions",
                  "description": "Sorting conditions."
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of summarized informations with pagination searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "secret": {
                  "type": "boolean",
                  "title": "Whether the question article is secret or not",
                  "description": "Whether the question article is secret or not.\n\nIf secret article, only the writer customer and related seller can see\nthe detailed content."
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "customer"
                      ],
                      "title": "Discriminant for the type of customer",
                      "description": "Discriminant for the type of customer."
                    },
                    "member": {
                      "type": "object",
                      "properties": {
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "seller": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\nIf the member also signed up as a seller.",
                          "title": "Seller information",
                          "nullable": true
                        },
                        "administrator": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                          "title": "Administrator information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname that uniquely identifies the member",
                          "description": "Nickname that uniquely identifies the member."
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "value": {
                                "type": "string",
                                "format": "email",
                                "title": "Email address value",
                                "description": "Email address value."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "created_at"
                            ],
                            "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                          },
                          "title": "List of emails",
                          "description": "List of emails."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                        }
                      },
                      "required": [
                        "citizen",
                        "seller",
                        "administrator",
                        "id",
                        "nickname",
                        "emails",
                        "created_at"
                      ],
                      "description": "Membership information.\n\nIf the customer has joined as a member.",
                      "title": "Membership information",
                      "nullable": true
                    },
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                      "title": "Citizen information",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "code": {
                          "type": "string",
                          "title": "Identifier code",
                          "description": "Identifier code."
                        },
                        "name": {
                          "type": "string",
                          "title": "Name of the channel",
                          "description": "Name of the channel."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ],
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                    },
                    "external_user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen activation info.",
                          "title": "Citizen activation info",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                        },
                        "application": {
                          "type": "string",
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                        },
                        "uid": {
                          "type": "string",
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system."
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "application",
                        "uid",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "title": "External user information",
                      "nullable": true
                    },
                    "href": {
                      "type": "string",
                      "format": "uri",
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                    },
                    "referrer": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true,
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                    },
                    "ip": {
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ],
                      "title": "Connection IP Address",
                      "description": "Connection IP Address."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record."
                    }
                  },
                  "required": [
                    "type",
                    "member",
                    "citizen",
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ],
                  "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                },
                "answer": {
                  "type": "object",
                  "properties": {
                    "seller": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "id",
                        "created_at"
                      ],
                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the last snapshot",
                      "description": "Title of the last snapshot."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the article",
                      "description": "Creation time of the article."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Modification time of the article",
                      "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                    }
                  },
                  "required": [
                    "seller",
                    "id",
                    "title",
                    "created_at",
                    "updated_at"
                  ],
                  "title": "Formal answer for the inquiry by the seller",
                  "description": "Formal answer for the inquiry by the seller.",
                  "nullable": true
                },
                "read_by_seller": {
                  "type": "boolean",
                  "title": "Whether the seller has viewed the inquiry or not",
                  "description": "Whether the seller has viewed the inquiry or not."
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the last snapshot",
                  "description": "Title of the last snapshot."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the article",
                  "description": "Creation time of the article."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Modification time of the article",
                  "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                }
              },
              "required": [
                "secret",
                "customer",
                "answer",
                "read_by_seller",
                "id",
                "title",
                "created_at",
                "updated_at"
              ],
              "description": "Summarized information of the question."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every summarized questions.\n\nList up every {@link IShoppingSaleQuestion.ISummary summarized questions} of a\n{@link IShoppingSale sale}.\n\nAs you can see, returned questions are summarized, not detailed. If you want\nto get the detailed information of a question, use {@link adridges } function\nor {@link at } function for each article.\n\nAlso, returned question has {@link IShoppingSaleQuestion.ISummary.answer }\nproperty which means the formal answer from the {@link IShoppingSeller }.\nAdditionally, returned question has another special property\n{@link IShoppingSaleQuestion.ISummary.secret } with masking to other\nprincple properties, and it means only related actors can {@link at read}\nthe question.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s questions. Otherwise,\nyou can access to every questions of the sales.\n\nBy the way, if you want, you can limit the result by configuring\n{@link IShoppingSaleQuestion.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleQuestion.IRequest.sort sort condition}."
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/sales/{saleId}/questions/abridges",
      "name": "shoppings_admins_sales_questions_abridges_patchBySaleid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "answered": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "title": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "title_or_body": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at",
                      "-nickname",
                      "-answered_at",
                      "-title",
                      "-updated_at",
                      "+nickname",
                      "+answered_at",
                      "+title",
                      "+updated_at"
                    ]
                  },
                  "title": "Sorting conditions",
                  "description": "Sorting conditions."
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of summarized informations with pagination searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "secret": {
                  "type": "boolean",
                  "title": "Whether the question article is secret or not",
                  "description": "Whether the question article is secret or not.\n\nIf secret article, only the writer customer and related seller can see\nthe detailed content."
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "customer"
                      ],
                      "title": "Discriminant for the type of customer",
                      "description": "Discriminant for the type of customer."
                    },
                    "member": {
                      "type": "object",
                      "properties": {
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "seller": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\nIf the member also signed up as a seller.",
                          "title": "Seller information",
                          "nullable": true
                        },
                        "administrator": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                          "title": "Administrator information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname that uniquely identifies the member",
                          "description": "Nickname that uniquely identifies the member."
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "value": {
                                "type": "string",
                                "format": "email",
                                "title": "Email address value",
                                "description": "Email address value."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "created_at"
                            ],
                            "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                          },
                          "title": "List of emails",
                          "description": "List of emails."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                        }
                      },
                      "required": [
                        "citizen",
                        "seller",
                        "administrator",
                        "id",
                        "nickname",
                        "emails",
                        "created_at"
                      ],
                      "description": "Membership information.\n\nIf the customer has joined as a member.",
                      "title": "Membership information",
                      "nullable": true
                    },
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                      "title": "Citizen information",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "code": {
                          "type": "string",
                          "title": "Identifier code",
                          "description": "Identifier code."
                        },
                        "name": {
                          "type": "string",
                          "title": "Name of the channel",
                          "description": "Name of the channel."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ],
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                    },
                    "external_user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen activation info.",
                          "title": "Citizen activation info",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                        },
                        "application": {
                          "type": "string",
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                        },
                        "uid": {
                          "type": "string",
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system."
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "application",
                        "uid",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "title": "External user information",
                      "nullable": true
                    },
                    "href": {
                      "type": "string",
                      "format": "uri",
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                    },
                    "referrer": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true,
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                    },
                    "ip": {
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ],
                      "title": "Connection IP Address",
                      "description": "Connection IP Address."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record."
                    }
                  },
                  "required": [
                    "type",
                    "member",
                    "citizen",
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ],
                  "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                },
                "answer": {
                  "type": "object",
                  "properties": {
                    "seller": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "id",
                        "created_at"
                      ],
                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the last snapshot",
                      "description": "Title of the last snapshot."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the article",
                      "description": "Creation time of the article."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Modification time of the article",
                      "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "html",
                        "md",
                        "txt"
                      ]
                    },
                    "body": {
                      "type": "string",
                      "title": "Content body of article",
                      "description": "Content body of article."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "title": "File name, except extension",
                            "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                          },
                          "extension": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8,
                            "nullable": true,
                            "title": "Extension",
                            "description": "Extension.\n\nPossible to omit like `README` case."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "title": "URL path of the real file",
                            "description": "URL path of the real file."
                          }
                        },
                        "required": [
                          "name",
                          "extension",
                          "url"
                        ]
                      },
                      "title": "List of attachment files",
                      "description": "List of attachment files."
                    }
                  },
                  "required": [
                    "seller",
                    "id",
                    "title",
                    "created_at",
                    "updated_at",
                    "format",
                    "body",
                    "files"
                  ],
                  "title": "Formal answer for the inquiry by the seller",
                  "description": "Formal answer for the inquiry by the seller.",
                  "nullable": true
                },
                "read_by_seller": {
                  "type": "boolean",
                  "title": "Whether the seller has viewed the inquiry or not",
                  "description": "Whether the seller has viewed the inquiry or not."
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the last snapshot",
                  "description": "Title of the last snapshot."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the article",
                  "description": "Creation time of the article."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Modification time of the article",
                  "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "secret",
                "customer",
                "answer",
                "read_by_seller",
                "id",
                "title",
                "created_at",
                "updated_at",
                "format",
                "body",
                "files"
              ],
              "description": "Abridged information of the question."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every abridged questions.\n\nList up every {@link IShoppingSaleQuestion.IAbridge abridged questions} of\na {@link IShoppingSale sale}.\n\nAs you can see, returned questions are abridged, not detailed. If you want\nto get the detailed information of a question, use {@link at } function\nfor each article.\n\nAlso, returned question has {@link IShoppingSaleQuestion.IAridge.answer }\nproperty which means the formal answer from the {@link IShoppingSeller }.\nAdditionally, returned question has another special property\n{@link IShoppingSaleQuestion.IAridge.secret } with masking to other\nprincple properties, and it means only related actors can {@link at read}\nthe question.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s questions. Otherwise,\nyou can access to every questions of the sales.\n\nBy the way, if you want, you can limit the result by configuring\n{@link IShoppingSaleQuestion.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleQuestion.IRequest.sort sort condition}."
    },
    {
      "method": "get",
      "path": "/shoppings/admins/sales/{saleId}/questions/{id}",
      "name": "shoppings_admins_sales_questions_getBySaleidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target question's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "boolean",
            "title": "Whether the question article is secret or not",
            "description": "Whether the question article is secret or not.\n\nIf secret article, only the writer customer and related seller can see\nthe detailed content."
          },
          "type": {
            "type": "string",
            "enum": [
              "question"
            ],
            "title": "Type of the derived inquiry",
            "description": "Type of the derived inquiry.\n\n- `question`: {@link IShoppingSaleQuestion }\n- `review`: {@link IShoppingSaleReview }"
          },
          "customer": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer"
                ],
                "title": "Discriminant for the type of customer",
                "description": "Discriminant for the type of customer."
              },
              "member": {
                "type": "object",
                "properties": {
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "seller": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation tmie of record",
                        "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Seller information.\n\nIf the member also signed up as a seller.",
                    "title": "Seller information",
                    "nullable": true
                  },
                  "administrator": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                    "title": "Administrator information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname that uniquely identifies the member",
                    "description": "Nickname that uniquely identifies the member."
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "value": {
                          "type": "string",
                          "format": "email",
                          "title": "Email address value",
                          "description": "Email address value."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        }
                      },
                      "required": [
                        "id",
                        "value",
                        "created_at"
                      ],
                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                    },
                    "title": "List of emails",
                    "description": "List of emails."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                  }
                },
                "required": [
                  "citizen",
                  "seller",
                  "administrator",
                  "id",
                  "nickname",
                  "emails",
                  "created_at"
                ],
                "description": "Membership information.\n\nIf the customer has joined as a member.",
                "title": "Membership information",
                "nullable": true
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                "title": "Citizen information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "type",
              "member",
              "citizen",
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
          },
          "answer": {
            "type": "object",
            "properties": {
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "snapshots": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of snapshot record",
                      "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "html",
                        "md",
                        "txt"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of article",
                      "description": "Title of article."
                    },
                    "body": {
                      "type": "string",
                      "title": "Content body of article",
                      "description": "Content body of article."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "title": "File name, except extension",
                            "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                          },
                          "extension": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8,
                            "nullable": true,
                            "title": "Extension",
                            "description": "Extension.\n\nPossible to omit like `README` case."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "title": "URL path of the real file",
                            "description": "URL path of the real file."
                          }
                        },
                        "required": [
                          "name",
                          "extension",
                          "url"
                        ]
                      },
                      "title": "List of attachment files",
                      "description": "List of attachment files."
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "format",
                    "title",
                    "body",
                    "files"
                  ],
                  "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
                },
                "minItems": 1,
                "title": "List of snapshot contents",
                "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of article",
                "description": "Creation time of article."
              }
            },
            "required": [
              "seller",
              "id",
              "snapshots",
              "created_at"
            ],
            "description": "Formal answer for the inquiry by the seller.",
            "title": "Formal answer for the inquiry by the seller",
            "nullable": true
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "Whether the seller has viewed the inquiry or not",
            "description": "Whether the seller has viewed the inquiry or not."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "secret",
          "type",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "Question about sale snapshot.\n\n`IShoppingSaleQuestion` is a subtype entity of {@link IShoppingSaleInquiry },\nand is used when a {@link IShoppingCustomer customer} wants to ask something\nabout a {@link IShoppingSale sale} ({@link IShoppingSaleSnapshot snapshot} at\nthe time) registered by the {@link IShoppingSeller seller}.\n\nAnd, like most shopping malls, `IShoppingSaleQuestion` also provides\na {@link secret } attribute, allowing you to create a \"secret message\" that can\nonly be viewed by the seller and the customer who wrote the question."
      },
      "description": "Get a question info.\n\nGet a detailed {@link IShoppingSaleQuestion question} information of a\n{@link IShoppingSale sale}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s question. Otherwise\nyou are a {@link IShoppingCustomer customer}, you can access to every\nquestions of the sales except the {@link IShoppingSaleQuestion.secret }\nvalue is `false`."
    },
    {
      "method": "post",
      "path": "/shoppings/admins/sales/{saleId}/reviews/{inquiryId}/comments",
      "name": "shoppings_admins_sales_reviews_comments_postBySaleidAndInquiryid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "body",
                "files"
              ],
              "description": "Creation information of the comment."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "administrator"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "seller"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "customer"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                        "title": "Citizen information",
                        "nullable": true
                      },
                      "seller": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Seller information.\n\nIf the member also signed up as a seller.",
                        "title": "Seller information",
                        "nullable": true
                      },
                      "administrator": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                        "title": "Administrator information",
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "citizen",
                      "seller",
                      "administrator",
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Membership information.\n\nIf the customer has joined as a member.",
                    "title": "Membership information",
                    "nullable": true
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "channel": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "code": {
                        "type": "string",
                        "title": "Identifier code",
                        "description": "Identifier code."
                      },
                      "name": {
                        "type": "string",
                        "title": "Name of the channel",
                        "description": "Name of the channel."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "code",
                      "name"
                    ],
                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                  },
                  "external_user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen activation info.",
                        "title": "Citizen activation info",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                      },
                      "application": {
                        "type": "string",
                        "title": "Identifier code of the external service",
                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                      },
                      "uid": {
                        "type": "string",
                        "title": "Identifier key of external user from the external system",
                        "description": "Identifier key of external user from the external system."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname of external user in the external system",
                        "description": "Nickname of external user in the external system."
                      },
                      "data": {
                        "description": "Additional information about external user from the external\nsystem."
                      }
                    },
                    "required": [
                      "id",
                      "citizen",
                      "created_at",
                      "application",
                      "uid",
                      "nickname",
                      "data"
                    ],
                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                    "title": "External user information",
                    "nullable": true
                  },
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "title": "Connection address",
                    "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                  },
                  "referrer": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "title": "Referrer address",
                    "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                  },
                  "ip": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "ipv4"
                      },
                      {
                        "type": "string",
                        "format": "ipv6"
                      }
                    ],
                    "title": "Connection IP Address",
                    "description": "Connection IP Address."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of the connection record",
                    "description": "Creation time of the connection record."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "citizen",
                  "id",
                  "channel",
                  "external_user",
                  "href",
                  "referrer",
                  "ip",
                  "created_at"
                ],
                "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "body",
                "files"
              ],
              "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
      },
      "description": "Create an inquiry comment.\n\nCreate an {@link IShoppingSaleInquiryComment inquiry comment} of a\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\ncreate an inquiry comment to your own {@link IShoppingSale sale}'s inquiry.\nOtherwise, you can create an inquiry comment to every inquiries of the sales."
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/sales/{saleId}/reviews/{inquiryId}/comments",
      "name": "shoppings_admins_sales_reviews_comments_patchBySaleidAndInquiryid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of the comments with pagination and searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "writer": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "administrator"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "channel": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "code": {
                                  "type": "string",
                                  "title": "Identifier code",
                                  "description": "Identifier code."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of the channel",
                                  "description": "Name of the channel."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "code",
                                "name"
                              ],
                              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                            },
                            "external_user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "citizen": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "title": "Primary Key",
                                      "description": "Primary Key."
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "Creation time of record",
                                      "description": "Creation time of record."
                                    },
                                    "mobile": {
                                      "type": "string",
                                      "pattern": "^[0-9]*$",
                                      "title": "Mobile number",
                                      "description": "Mobile number."
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen activation info.",
                                  "title": "Citizen activation info",
                                  "nullable": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                                },
                                "application": {
                                  "type": "string",
                                  "title": "Identifier code of the external service",
                                  "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                                },
                                "uid": {
                                  "type": "string",
                                  "title": "Identifier key of external user from the external system",
                                  "description": "Identifier key of external user from the external system."
                                },
                                "nickname": {
                                  "type": "string",
                                  "title": "Nickname of external user in the external system",
                                  "description": "Nickname of external user in the external system."
                                },
                                "data": {
                                  "description": "Additional information about external user from the external\nsystem."
                                }
                              },
                              "required": [
                                "id",
                                "citizen",
                                "created_at",
                                "application",
                                "uid",
                                "nickname",
                                "data"
                              ],
                              "description": "External user information.\n\nWhen the customer has come frome an external service.",
                              "title": "External user information",
                              "nullable": true
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "title": "Connection address",
                              "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                            },
                            "referrer": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true,
                              "title": "Referrer address",
                              "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                            },
                            "ip": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "format": "ipv4"
                                },
                                {
                                  "type": "string",
                                  "format": "ipv6"
                                }
                              ],
                              "title": "Connection IP Address",
                              "description": "Connection IP Address."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of the connection record",
                              "description": "Creation time of the connection record."
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "external_user",
                            "href",
                            "referrer",
                            "ip",
                            "created_at"
                          ],
                          "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "customer",
                        "citizen",
                        "id",
                        "created_at"
                      ],
                      "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "seller"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "channel": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "code": {
                                  "type": "string",
                                  "title": "Identifier code",
                                  "description": "Identifier code."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of the channel",
                                  "description": "Name of the channel."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "code",
                                "name"
                              ],
                              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                            },
                            "external_user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "citizen": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "title": "Primary Key",
                                      "description": "Primary Key."
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "Creation time of record",
                                      "description": "Creation time of record."
                                    },
                                    "mobile": {
                                      "type": "string",
                                      "pattern": "^[0-9]*$",
                                      "title": "Mobile number",
                                      "description": "Mobile number."
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen activation info.",
                                  "title": "Citizen activation info",
                                  "nullable": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                                },
                                "application": {
                                  "type": "string",
                                  "title": "Identifier code of the external service",
                                  "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                                },
                                "uid": {
                                  "type": "string",
                                  "title": "Identifier key of external user from the external system",
                                  "description": "Identifier key of external user from the external system."
                                },
                                "nickname": {
                                  "type": "string",
                                  "title": "Nickname of external user in the external system",
                                  "description": "Nickname of external user in the external system."
                                },
                                "data": {
                                  "description": "Additional information about external user from the external\nsystem."
                                }
                              },
                              "required": [
                                "id",
                                "citizen",
                                "created_at",
                                "application",
                                "uid",
                                "nickname",
                                "data"
                              ],
                              "description": "External user information.\n\nWhen the customer has come frome an external service.",
                              "title": "External user information",
                              "nullable": true
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "title": "Connection address",
                              "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                            },
                            "referrer": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true,
                              "title": "Referrer address",
                              "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                            },
                            "ip": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "format": "ipv4"
                                },
                                {
                                  "type": "string",
                                  "format": "ipv6"
                                }
                              ],
                              "title": "Connection IP Address",
                              "description": "Connection IP Address."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of the connection record",
                              "description": "Creation time of the connection record."
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "external_user",
                            "href",
                            "referrer",
                            "ip",
                            "created_at"
                          ],
                          "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "customer",
                        "citizen",
                        "id",
                        "created_at"
                      ],
                      "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "customer"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "citizen": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "mobile": {
                                  "type": "string",
                                  "pattern": "^[0-9]*$",
                                  "title": "Mobile number",
                                  "description": "Mobile number."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                              "title": "Citizen information",
                              "nullable": true
                            },
                            "seller": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation tmie of record",
                                  "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                                }
                              },
                              "required": [
                                "id",
                                "created_at"
                              ],
                              "description": "Seller information.\n\nIf the member also signed up as a seller.",
                              "title": "Seller information",
                              "nullable": true
                            },
                            "administrator": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                                }
                              },
                              "required": [
                                "id",
                                "created_at"
                              ],
                              "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                              "title": "Administrator information",
                              "nullable": true
                            },
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "citizen",
                            "seller",
                            "administrator",
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Membership information.\n\nIf the customer has joined as a member.",
                          "title": "Membership information",
                          "nullable": true
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "channel": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "code": {
                              "type": "string",
                              "title": "Identifier code",
                              "description": "Identifier code."
                            },
                            "name": {
                              "type": "string",
                              "title": "Name of the channel",
                              "description": "Name of the channel."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "code",
                            "name"
                          ],
                          "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                        },
                        "external_user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "citizen": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "mobile": {
                                  "type": "string",
                                  "pattern": "^[0-9]*$",
                                  "title": "Mobile number",
                                  "description": "Mobile number."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen activation info.",
                              "title": "Citizen activation info",
                              "nullable": true
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                            },
                            "application": {
                              "type": "string",
                              "title": "Identifier code of the external service",
                              "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                            },
                            "uid": {
                              "type": "string",
                              "title": "Identifier key of external user from the external system",
                              "description": "Identifier key of external user from the external system."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname of external user in the external system",
                              "description": "Nickname of external user in the external system."
                            },
                            "data": {
                              "description": "Additional information about external user from the external\nsystem."
                            }
                          },
                          "required": [
                            "id",
                            "citizen",
                            "created_at",
                            "application",
                            "uid",
                            "nickname",
                            "data"
                          ],
                          "description": "External user information.\n\nWhen the customer has come frome an external service.",
                          "title": "External user information",
                          "nullable": true
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "title": "Connection address",
                          "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                        },
                        "referrer": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true,
                          "title": "Referrer address",
                          "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                        },
                        "ip": {
                          "oneOf": [
                            {
                              "type": "string",
                              "format": "ipv4"
                            },
                            {
                              "type": "string",
                              "format": "ipv6"
                            }
                          ],
                          "title": "Connection IP Address",
                          "description": "Connection IP Address."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of the connection record",
                          "description": "Creation time of the connection record."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "citizen",
                        "id",
                        "channel",
                        "external_user",
                        "href",
                        "referrer",
                        "ip",
                        "created_at"
                      ],
                      "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                    }
                  ]
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "parent_id": {
                  "type": "string",
                  "format": "uuid",
                  "nullable": true,
                  "title": "Parent comment's ID",
                  "description": "Parent comment's ID."
                },
                "snapshots": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of snapshot record",
                        "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                      },
                      "format": {
                        "type": "string",
                        "enum": [
                          "html",
                          "md",
                          "txt"
                        ]
                      },
                      "body": {
                        "type": "string",
                        "title": "Content body of comment",
                        "description": "Content body of comment."
                      },
                      "files": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 255,
                              "title": "File name, except extension",
                              "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                            },
                            "extension": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 8,
                              "nullable": true,
                              "title": "Extension",
                              "description": "Extension.\n\nPossible to omit like `README` case."
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "title": "URL path of the real file",
                              "description": "URL path of the real file."
                            }
                          },
                          "required": [
                            "name",
                            "extension",
                            "url"
                          ]
                        },
                        "title": "List of attachment files",
                        "description": "List of attachment files."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "format",
                      "body",
                      "files"
                    ],
                    "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
                  },
                  "minItems": 1,
                  "title": "List of snapshot contents",
                  "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of comment",
                  "description": "Creation time of comment."
                }
              },
              "required": [
                "writer",
                "id",
                "parent_id",
                "snapshots",
                "created_at"
              ],
              "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every inquiry comments.\n\nList up every {@link IShoppingSaleInquiryComment inquiry comments} of a\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}\nwith {@link IPage pagination}.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingSaleInquiryComment.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleInquiryComment.IRequest.sort sort condition}.\n\nBy the way, if you're a {@link IShoppingSeller seller}, you can only access\nto the your own {@link IShoppingSale sale}'s inquiries. Otherwise, you\ncan access to every inquiries of the sales."
    },
    {
      "method": "get",
      "path": "/shoppings/admins/sales/{saleId}/reviews/{inquiryId}/comments/{id}",
      "name": "shoppings_admins_sales_reviews_comments_getBySaleidAndInquiryidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry comment's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "administrator"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "seller"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "customer"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                        "title": "Citizen information",
                        "nullable": true
                      },
                      "seller": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Seller information.\n\nIf the member also signed up as a seller.",
                        "title": "Seller information",
                        "nullable": true
                      },
                      "administrator": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                        "title": "Administrator information",
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "citizen",
                      "seller",
                      "administrator",
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Membership information.\n\nIf the customer has joined as a member.",
                    "title": "Membership information",
                    "nullable": true
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "channel": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "code": {
                        "type": "string",
                        "title": "Identifier code",
                        "description": "Identifier code."
                      },
                      "name": {
                        "type": "string",
                        "title": "Name of the channel",
                        "description": "Name of the channel."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "code",
                      "name"
                    ],
                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                  },
                  "external_user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen activation info.",
                        "title": "Citizen activation info",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                      },
                      "application": {
                        "type": "string",
                        "title": "Identifier code of the external service",
                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                      },
                      "uid": {
                        "type": "string",
                        "title": "Identifier key of external user from the external system",
                        "description": "Identifier key of external user from the external system."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname of external user in the external system",
                        "description": "Nickname of external user in the external system."
                      },
                      "data": {
                        "description": "Additional information about external user from the external\nsystem."
                      }
                    },
                    "required": [
                      "id",
                      "citizen",
                      "created_at",
                      "application",
                      "uid",
                      "nickname",
                      "data"
                    ],
                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                    "title": "External user information",
                    "nullable": true
                  },
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "title": "Connection address",
                    "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                  },
                  "referrer": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "title": "Referrer address",
                    "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                  },
                  "ip": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "ipv4"
                      },
                      {
                        "type": "string",
                        "format": "ipv6"
                      }
                    ],
                    "title": "Connection IP Address",
                    "description": "Connection IP Address."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of the connection record",
                    "description": "Creation time of the connection record."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "citizen",
                  "id",
                  "channel",
                  "external_user",
                  "href",
                  "referrer",
                  "ip",
                  "created_at"
                ],
                "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "body",
                "files"
              ],
              "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
      },
      "description": "Get an inquiry comment info.\n\nGet a detailed {@link IShoppingSaleInquiryComment inquiry comment}\ninformation of a {@link IShoppingSaleQuestion question} or\n{@link IShoppingSaleReview review}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s inquiry comment.\nOtherwise, you can access to every inquiry comments of the sales."
    },
    {
      "method": "put",
      "path": "/shoppings/admins/sales/{saleId}/reviews/{inquiryId}/comments/{id}",
      "name": "shoppings_admins_sales_reviews_comments_putBySaleidAndInquiryidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry comment's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "body",
                "files"
              ],
              "description": "Creation information of the comment."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
          },
          "format": {
            "type": "string",
            "enum": [
              "html",
              "md",
              "txt"
            ]
          },
          "body": {
            "type": "string",
            "title": "Content body of comment",
            "description": "Content body of comment."
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "title": "File name, except extension",
                  "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                },
                "extension": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 8,
                  "nullable": true,
                  "title": "Extension",
                  "description": "Extension.\n\nPossible to omit like `README` case."
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "title": "URL path of the real file",
                  "description": "URL path of the real file."
                }
              },
              "required": [
                "name",
                "extension",
                "url"
              ]
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "body",
          "files"
        ],
        "description": "Snapshot content of the comment."
      },
      "description": "Update an inquiry comment.\n\nUpdate an {@link IShoppingSaleInquiryComment inquiry comment} to a specific\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}.\n\nBy the way, as is the general policy of this shopping mall regarding\ncomments, modifying a comment does not actually change the existing content.\nModified content is accumulated and recorded in the existing comment record\nas a new {@link IShoppingSaleInquiryComment.ISnapshot snapshot}. And this\nis made public to everyone, who can read this inquiry comment.\n\nThis is to prevent customers or sellers from modifying their comments and\nmanipulating the circumstances due to the nature of e-commerce, where\ndisputes easily arise. That is, to preserve evidence."
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/sales/{saleId}/reviews",
      "name": "shoppings_admins_sales_reviews_patchBySaleid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "answered": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "title": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "title_or_body": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "minimum": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maximum": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at",
                      "-nickname",
                      "-answered_at",
                      "-title",
                      "-updated_at",
                      "+nickname",
                      "+answered_at",
                      "+title",
                      "+updated_at",
                      "-score",
                      "+score"
                    ]
                  },
                  "title": "Sorting conditions",
                  "description": "Sorting conditions."
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of summarized informations with pagination searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "number",
                  "title": "Score of the review",
                  "description": "Score of the review."
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "customer"
                      ],
                      "title": "Discriminant for the type of customer",
                      "description": "Discriminant for the type of customer."
                    },
                    "member": {
                      "type": "object",
                      "properties": {
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "seller": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\nIf the member also signed up as a seller.",
                          "title": "Seller information",
                          "nullable": true
                        },
                        "administrator": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                          "title": "Administrator information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname that uniquely identifies the member",
                          "description": "Nickname that uniquely identifies the member."
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "value": {
                                "type": "string",
                                "format": "email",
                                "title": "Email address value",
                                "description": "Email address value."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "created_at"
                            ],
                            "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                          },
                          "title": "List of emails",
                          "description": "List of emails."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                        }
                      },
                      "required": [
                        "citizen",
                        "seller",
                        "administrator",
                        "id",
                        "nickname",
                        "emails",
                        "created_at"
                      ],
                      "description": "Membership information.\n\nIf the customer has joined as a member.",
                      "title": "Membership information",
                      "nullable": true
                    },
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                      "title": "Citizen information",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "code": {
                          "type": "string",
                          "title": "Identifier code",
                          "description": "Identifier code."
                        },
                        "name": {
                          "type": "string",
                          "title": "Name of the channel",
                          "description": "Name of the channel."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ],
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                    },
                    "external_user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen activation info.",
                          "title": "Citizen activation info",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                        },
                        "application": {
                          "type": "string",
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                        },
                        "uid": {
                          "type": "string",
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system."
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "application",
                        "uid",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "title": "External user information",
                      "nullable": true
                    },
                    "href": {
                      "type": "string",
                      "format": "uri",
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                    },
                    "referrer": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true,
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                    },
                    "ip": {
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ],
                      "title": "Connection IP Address",
                      "description": "Connection IP Address."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record."
                    }
                  },
                  "required": [
                    "type",
                    "member",
                    "citizen",
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ],
                  "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                },
                "answer": {
                  "type": "object",
                  "properties": {
                    "seller": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "id",
                        "created_at"
                      ],
                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the last snapshot",
                      "description": "Title of the last snapshot."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the article",
                      "description": "Creation time of the article."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Modification time of the article",
                      "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                    }
                  },
                  "required": [
                    "seller",
                    "id",
                    "title",
                    "created_at",
                    "updated_at"
                  ],
                  "title": "Formal answer for the inquiry by the seller",
                  "description": "Formal answer for the inquiry by the seller.",
                  "nullable": true
                },
                "read_by_seller": {
                  "type": "boolean",
                  "title": "Whether the seller has viewed the inquiry or not",
                  "description": "Whether the seller has viewed the inquiry or not."
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the last snapshot",
                  "description": "Title of the last snapshot."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the article",
                  "description": "Creation time of the article."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Modification time of the article",
                  "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                }
              },
              "required": [
                "score",
                "customer",
                "answer",
                "read_by_seller",
                "id",
                "title",
                "created_at",
                "updated_at"
              ],
              "description": "Summarized information of the review."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every summarized reviews.\n\nList up every {@link IShoppingSaleReview.ISummary summarized reviews} of a\n{@link IShoppingSale sale}.\n\nAs you can see, returned reviews are summarized, not detailed. If you want\nto get the detailed information of a review, use {@link adridges } function\nor {@link at } function for each article.\n\nAlso, returned review has {@link IShoppingSaleReview.ISummary.answer }\nproperty which means the formal answer from the {@link IShoppingSeller }.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s reviews. Otherwise,\nyou can access to every reviews of the sales.\n\nBy the way, if you want, you can limit the result by configuring\n{@link IShoppingSaleReview.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleReview.IRequest.sort sort condition}."
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/sales/{saleId}/reviews/abridges",
      "name": "shoppings_admins_sales_reviews_abridges_patchBySaleid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "answered": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "title": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "title_or_body": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "minimum": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maximum": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at",
                      "-nickname",
                      "-answered_at",
                      "-title",
                      "-updated_at",
                      "+nickname",
                      "+answered_at",
                      "+title",
                      "+updated_at",
                      "-score",
                      "+score"
                    ]
                  },
                  "title": "Sorting conditions",
                  "description": "Sorting conditions."
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of summarized informations with pagination searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "title": "Score of the review",
                  "description": "Score of the review."
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "customer"
                      ],
                      "title": "Discriminant for the type of customer",
                      "description": "Discriminant for the type of customer."
                    },
                    "member": {
                      "type": "object",
                      "properties": {
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "seller": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\nIf the member also signed up as a seller.",
                          "title": "Seller information",
                          "nullable": true
                        },
                        "administrator": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                          "title": "Administrator information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname that uniquely identifies the member",
                          "description": "Nickname that uniquely identifies the member."
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "value": {
                                "type": "string",
                                "format": "email",
                                "title": "Email address value",
                                "description": "Email address value."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "created_at"
                            ],
                            "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                          },
                          "title": "List of emails",
                          "description": "List of emails."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                        }
                      },
                      "required": [
                        "citizen",
                        "seller",
                        "administrator",
                        "id",
                        "nickname",
                        "emails",
                        "created_at"
                      ],
                      "description": "Membership information.\n\nIf the customer has joined as a member.",
                      "title": "Membership information",
                      "nullable": true
                    },
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                      "title": "Citizen information",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "code": {
                          "type": "string",
                          "title": "Identifier code",
                          "description": "Identifier code."
                        },
                        "name": {
                          "type": "string",
                          "title": "Name of the channel",
                          "description": "Name of the channel."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ],
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                    },
                    "external_user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen activation info.",
                          "title": "Citizen activation info",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                        },
                        "application": {
                          "type": "string",
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                        },
                        "uid": {
                          "type": "string",
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system."
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "application",
                        "uid",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "title": "External user information",
                      "nullable": true
                    },
                    "href": {
                      "type": "string",
                      "format": "uri",
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                    },
                    "referrer": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true,
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                    },
                    "ip": {
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ],
                      "title": "Connection IP Address",
                      "description": "Connection IP Address."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record."
                    }
                  },
                  "required": [
                    "type",
                    "member",
                    "citizen",
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ],
                  "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                },
                "answer": {
                  "type": "object",
                  "properties": {
                    "seller": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "id",
                        "created_at"
                      ],
                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the last snapshot",
                      "description": "Title of the last snapshot."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the article",
                      "description": "Creation time of the article."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Modification time of the article",
                      "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "html",
                        "md",
                        "txt"
                      ]
                    },
                    "body": {
                      "type": "string",
                      "title": "Content body of article",
                      "description": "Content body of article."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "title": "File name, except extension",
                            "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                          },
                          "extension": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8,
                            "nullable": true,
                            "title": "Extension",
                            "description": "Extension.\n\nPossible to omit like `README` case."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "title": "URL path of the real file",
                            "description": "URL path of the real file."
                          }
                        },
                        "required": [
                          "name",
                          "extension",
                          "url"
                        ]
                      },
                      "title": "List of attachment files",
                      "description": "List of attachment files."
                    }
                  },
                  "required": [
                    "seller",
                    "id",
                    "title",
                    "created_at",
                    "updated_at",
                    "format",
                    "body",
                    "files"
                  ],
                  "title": "Formal answer for the inquiry by the seller",
                  "description": "Formal answer for the inquiry by the seller.",
                  "nullable": true
                },
                "read_by_seller": {
                  "type": "boolean",
                  "title": "Whether the seller has viewed the inquiry or not",
                  "description": "Whether the seller has viewed the inquiry or not."
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the last snapshot",
                  "description": "Title of the last snapshot."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the article",
                  "description": "Creation time of the article."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Modification time of the article",
                  "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "score",
                "customer",
                "answer",
                "read_by_seller",
                "id",
                "title",
                "created_at",
                "updated_at",
                "format",
                "body",
                "files"
              ],
              "description": "Abridged information of the review."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every abridged reviews.\n\nList up every {@link IShoppingSaleReview.IAbridge abridged reviews} of\na {@link IShoppingSale sale}.\n\nAs you can see, returned reviews are abridged, not detailed. If you want\nto get the detailed information of a review, use {@link at } function\nfor each article.\n\nAlso, returned review has {@link IShoppingSaleReview.IAridge.answer }\nproperty which means the formal answer from the {@link IShoppingSeller }.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s reviews. Otherwise,\nyou can access to every reviews of the sales.\n\nBy the way, if you want, you can limit the result by configuring\n{@link IShoppingSaleReview.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleReview.IRequest.sort sort condition}."
    },
    {
      "method": "get",
      "path": "/shoppings/admins/sales/{saleId}/reviews/{id}",
      "name": "shoppings_admins_sales_reviews_getBySaleidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target review's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "review"
            ],
            "title": "Type of the derived inquiry",
            "description": "Type of the derived inquiry.\n\n- `question`: {@link IShoppingSaleQuestion }\n- `review`: {@link IShoppingSaleReview }"
          },
          "customer": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer"
                ],
                "title": "Discriminant for the type of customer",
                "description": "Discriminant for the type of customer."
              },
              "member": {
                "type": "object",
                "properties": {
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "seller": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation tmie of record",
                        "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Seller information.\n\nIf the member also signed up as a seller.",
                    "title": "Seller information",
                    "nullable": true
                  },
                  "administrator": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                    "title": "Administrator information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname that uniquely identifies the member",
                    "description": "Nickname that uniquely identifies the member."
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "value": {
                          "type": "string",
                          "format": "email",
                          "title": "Email address value",
                          "description": "Email address value."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        }
                      },
                      "required": [
                        "id",
                        "value",
                        "created_at"
                      ],
                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                    },
                    "title": "List of emails",
                    "description": "List of emails."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                  }
                },
                "required": [
                  "citizen",
                  "seller",
                  "administrator",
                  "id",
                  "nickname",
                  "emails",
                  "created_at"
                ],
                "description": "Membership information.\n\nIf the customer has joined as a member.",
                "title": "Membership information",
                "nullable": true
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                "title": "Citizen information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "type",
              "member",
              "citizen",
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
          },
          "answer": {
            "type": "object",
            "properties": {
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "snapshots": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of snapshot record",
                      "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "html",
                        "md",
                        "txt"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of article",
                      "description": "Title of article."
                    },
                    "body": {
                      "type": "string",
                      "title": "Content body of article",
                      "description": "Content body of article."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "title": "File name, except extension",
                            "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                          },
                          "extension": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8,
                            "nullable": true,
                            "title": "Extension",
                            "description": "Extension.\n\nPossible to omit like `README` case."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "title": "URL path of the real file",
                            "description": "URL path of the real file."
                          }
                        },
                        "required": [
                          "name",
                          "extension",
                          "url"
                        ]
                      },
                      "title": "List of attachment files",
                      "description": "List of attachment files."
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "format",
                    "title",
                    "body",
                    "files"
                  ],
                  "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
                },
                "minItems": 1,
                "title": "List of snapshot contents",
                "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of article",
                "description": "Creation time of article."
              }
            },
            "required": [
              "seller",
              "id",
              "snapshots",
              "created_at"
            ],
            "description": "Formal answer for the inquiry by the seller.",
            "title": "Formal answer for the inquiry by the seller",
            "nullable": true
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "Whether the seller has viewed the inquiry or not",
            "description": "Whether the seller has viewed the inquiry or not."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "title": "Score of the review",
                  "description": "Score of the review."
                },
                "id": {
                  "type": "string",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "score",
                "id",
                "created_at",
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Snapshot content of the review article."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "type",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "Reviews for sale snapshots.\n\n`IShoppingSaleReview` is a subtype entity of {@link IShoppingSaleInquiry },\nand is used when a {@link IShoppingCustomer customer} purchases a\n{@link IShoppingSale sale} ({@link IShoppingSaleSnapshot snapshot} at the time)\nregistered by the {@link IShoppingSeller seller} as a product and leaves a\nreview and rating for it.\n\nFor reference, `IShoppingSaleReview` and\n{@link IShoppingOrderGod shopping_order_goods} have a logarithmic relationship\nof N: 1, but this does not mean that customers can continue to write reviews\nfor the same product indefinitely. Wouldn't there be restrictions, such as\nif you write a review once, you can write an additional review a month later?"
      },
      "description": "Get a review info.\n\nGet a detailed {@link IShoppingSaleReview review} information of a\n{@link IShoppingSale sale}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s review. Otherwise\nyou are a {@link IShoppingCustomer customer}, you can access to every\nreviews of the sales."
    },
    {
      "method": "put",
      "path": "/shoppings/admins/systematic/channels/{channelCode}/categories/{id}",
      "name": "shoppings_admins_systematic_channels_categories_putByChannelcodeAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "channelCode": {
              "type": "string",
              "description": "Belonged channel's "
            },
            "id": {
              "type": "string",
              "description": "Target category's "
            },
            "body": {
              "type": "object",
              "properties": {
                "parent_id": {
                  "type": "string",
                  "format": "uuid",
                  "nullable": true,
                  "title": "Parent category's ID",
                  "description": "Parent category's ID."
                },
                "name": {
                  "type": "string",
                  "title": "Representative name of the category",
                  "description": "Representative name of the category.\n\nThe name must be unique within the parent category. If no parent exists,\nthen the name must be unique within the channel between no parent\ncategories."
                }
              },
              "required": [
                "parent_id",
                "name"
              ],
              "description": "Creation information of the category."
            }
          }
        }
      ],
      "description": "Update a category.\n\nUpdate a {@link IShoppingChannelCategory category}'s name. If required,\nit is possible to change the parent category by its ID. Of course, detaching\nfrom the parent category so that becoming the root category is also possible."
    },
    {
      "method": "delete",
      "path": "/shoppings/admins/systematic/channels/{channelCode}/categories/merge",
      "name": "shoppings_admins_systematic_channels_categories_merge_eraseByChannelcode",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "channelCode": {
              "type": "string",
              "description": "Belonged channel's "
            },
            "body": {
              "type": "object",
              "properties": {
                "keep": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Target record to keep after merging",
                  "description": "Target record to keep after merging.\n\nAfter merge process, {@link absorbed } records would be merged into\nthis {@link keep } record."
                },
                "absorbed": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "To be absorbed to {@link keep } after merging",
                  "description": "To be absorbed to {@link keep } after merging."
                }
              },
              "required": [
                "keep",
                "absorbed"
              ],
              "description": "Record Merge DTO.\n\n`IRecordMerge` is a structure for merging records.\n\nThe `merge` means that merging multiple {@link IRecordMerge.absorbed }\nrecords into {@link IRecordMerge.keep } instead of deleting\n{@link IRecordMerge.absorbed } records.\n\nIf there're some dependent tables of the target `table` having\nunique constraint on foriegn key column, such dependent tables\nalso perform the merge process, too.\n\nOf course, if there're another dependent tables under those\ndependents, they also perform the merge process recursively as well.\nSuch recursive merge process still works for self-recursive\n(tree-structured) tables."
            }
          }
        }
      ],
      "description": "Merge multiple categories into one.\n\nIn this shopping mall system, it is not possible to delete a\n{@link IShoppingChannelCategory category}, because it is a systematic\nentity affecting to all other core entities like\n{@link IShoppingSale sales}. Instead of deleting, you can merge multiple\ncategories into one.\n\nIf you specify a category to absorb others, then all of other categories\nwill be merged into the specified one. Also, subsidiary entities of\ncategories also be merged and their references also be merged cascadingly."
    },
    {
      "method": "post",
      "path": "/shoppings/admins/systematic/channels",
      "name": "shoppings_admins_systematic_channels_post",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "title": "Identifier code",
                  "description": "Identifier code."
                },
                "name": {
                  "type": "string",
                  "title": "Name of the channel",
                  "description": "Name of the channel."
                }
              },
              "required": [
                "code",
                "name"
              ],
              "description": "Creation information of the channel."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of record",
            "description": "Creation time of record."
          },
          "code": {
            "type": "string",
            "title": "Identifier code",
            "description": "Identifier code."
          },
          "name": {
            "type": "string",
            "title": "Name of the channel",
            "description": "Name of the channel."
          }
        },
        "required": [
          "id",
          "created_at",
          "code",
          "name"
        ],
        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
      },
      "description": "Create a new channel.\n\nCreate a new {@link IShoppingChannel channel} with given code and name.\n\nAs channel means an individual market,\n{@link IShoppingAdministrator administrator} should perform this action\nonly when a new application being registered."
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/systematic/channels",
      "name": "shoppings_admins_systematic_channels_patch",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-channel.code",
                      "-channel.name",
                      "-channel.created_at",
                      "+channel.code",
                      "+channel.name",
                      "+channel.created_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of the channels with pagination and searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of record",
                  "description": "Creation time of record."
                },
                "code": {
                  "type": "string",
                  "title": "Identifier code",
                  "description": "Identifier code."
                },
                "name": {
                  "type": "string",
                  "title": "Name of the channel",
                  "description": "Name of the channel."
                }
              },
              "required": [
                "id",
                "created_at",
                "code",
                "name"
              ],
              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every channels.\n\nList up every {@link IShoppingChannel channels} with pagination.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingChannel.IRequest.search search condition} in the request\nbody. Also, it is possible to customize sequence order of records by\nconfiguring {@link IShoppingChannel.IRequest.sort sort condition}."
    },
    {
      "method": "put",
      "path": "/shoppings/admins/systematic/channels/{id}",
      "name": "shoppings_admins_systematic_channels_putById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target channel's "
            },
            "body": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name of the channel",
                  "description": "Name of the channel."
                }
              },
              "required": [
                "name"
              ],
              "description": "Updating information of the channel."
            }
          }
        }
      ],
      "description": "Update a channel.\n\nUpdate a {@link IShoppingChannel channel}'s name.\n\nNote that, it is not possible to change the channel's code. If you want to\nto do it forcibly, then {@link create } new one and {@link merge } with it."
    },
    {
      "method": "delete",
      "path": "/shoppings/admins/systematic/channels/merge",
      "name": "shoppings_admins_systematic_channels_merge_erase",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "keep": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Target record to keep after merging",
                  "description": "Target record to keep after merging.\n\nAfter merge process, {@link absorbed } records would be merged into\nthis {@link keep } record."
                },
                "absorbed": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "To be absorbed to {@link keep } after merging",
                  "description": "To be absorbed to {@link keep } after merging."
                }
              },
              "required": [
                "keep",
                "absorbed"
              ],
              "description": "Record Merge DTO.\n\n`IRecordMerge` is a structure for merging records.\n\nThe `merge` means that merging multiple {@link IRecordMerge.absorbed }\nrecords into {@link IRecordMerge.keep } instead of deleting\n{@link IRecordMerge.absorbed } records.\n\nIf there're some dependent tables of the target `table` having\nunique constraint on foriegn key column, such dependent tables\nalso perform the merge process, too.\n\nOf course, if there're another dependent tables under those\ndependents, they also perform the merge process recursively as well.\nSuch recursive merge process still works for self-recursive\n(tree-structured) tables."
            }
          }
        }
      ],
      "description": "Merge multiple channels into one.\n\nIn this shopping mall system, it is not possible to delete a\n{@link IShoppingChannel channel}, because it is a systematic entity\naffecting to all other core entities like customers, members and\nsales. Instead of deleting, you can merge multiple channels into one.\n\nIf you specify a channel to absorb others, then all of other channels\nwill be merged into the specified one. Also, subsidiary entities of\nchannels also be merged and their references also be merged cascadingly."
    },
    {
      "method": "post",
      "path": "/shoppings/admins/systematic/sections",
      "name": "shoppings_admins_systematic_sections_post",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "title": "Identifier code",
                  "description": "Identifier code."
                },
                "name": {
                  "type": "string",
                  "title": "Representative name of the section",
                  "description": "Representative name of the section."
                }
              },
              "required": [
                "code",
                "name"
              ],
              "description": "Creation information of the section."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "code": {
            "type": "string",
            "title": "Identifier code",
            "description": "Identifier code."
          },
          "name": {
            "type": "string",
            "title": "Representative name of the section",
            "description": "Representative name of the section."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of record",
            "description": "Creation time of record."
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "created_at"
        ],
        "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future."
      },
      "description": "Create a new section.\n\nCreate a new {@link IShoppingSection section} with given code and name.\n\nAs section means a spatial unit of a market that handling different type\nof products with other section, {@link IShoppingAdministrator administrator}\nshould perform this action only when a new section being required."
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/systematic/sections",
      "name": "shoppings_admins_systematic_sections_patch",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-section.code",
                      "-section.name",
                      "-section.created_at",
                      "+section.code",
                      "+section.name",
                      "+section.created_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of the sections with pagination and searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "code": {
                  "type": "string",
                  "title": "Identifier code",
                  "description": "Identifier code."
                },
                "name": {
                  "type": "string",
                  "title": "Representative name of the section",
                  "description": "Representative name of the section."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of record",
                  "description": "Creation time of record."
                }
              },
              "required": [
                "id",
                "code",
                "name",
                "created_at"
              ],
              "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every sections.\n\nList up every {@link IShoppingSection sections} with pagination.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingSection.IRequest.search search condition} in the request\nbody. Also, it is possible to customize sequence order of records by\nconfiguring {@link IShoppingSection.IRequest.sort sort condition}."
    },
    {
      "method": "get",
      "path": "/shoppings/admins/systematic/sections/{id}",
      "name": "shoppings_admins_systematic_sections_getById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target section's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "code": {
            "type": "string",
            "title": "Identifier code",
            "description": "Identifier code."
          },
          "name": {
            "type": "string",
            "title": "Representative name of the section",
            "description": "Representative name of the section."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of record",
            "description": "Creation time of record."
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "created_at"
        ],
        "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future."
      },
      "description": "Get a section info.\n\nGet a detailed {@link IShoppingSection section} information."
    },
    {
      "method": "put",
      "path": "/shoppings/admins/systematic/sections/{id}",
      "name": "shoppings_admins_systematic_sections_putById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target section's "
            },
            "body": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Representative name of the section",
                  "description": "Representative name of the section."
                }
              },
              "required": [
                "name"
              ],
              "description": "Updating information of the section."
            }
          }
        }
      ],
      "description": "Update a section.\n\nUpdate a {@link IShoppingSection section}'s name.\n\nNote that, it is not possible to change the section's code. If you want to\nto do it forcibly, then {@link create } new one and {@link merge } with it."
    },
    {
      "method": "delete",
      "path": "/shoppings/admins/systematic/sections/merge",
      "name": "shoppings_admins_systematic_sections_merge_erase",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "keep": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Target record to keep after merging",
                  "description": "Target record to keep after merging.\n\nAfter merge process, {@link absorbed } records would be merged into\nthis {@link keep } record."
                },
                "absorbed": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "To be absorbed to {@link keep } after merging",
                  "description": "To be absorbed to {@link keep } after merging."
                }
              },
              "required": [
                "keep",
                "absorbed"
              ],
              "description": "Record Merge DTO.\n\n`IRecordMerge` is a structure for merging records.\n\nThe `merge` means that merging multiple {@link IRecordMerge.absorbed }\nrecords into {@link IRecordMerge.keep } instead of deleting\n{@link IRecordMerge.absorbed } records.\n\nIf there're some dependent tables of the target `table` having\nunique constraint on foriegn key column, such dependent tables\nalso perform the merge process, too.\n\nOf course, if there're another dependent tables under those\ndependents, they also perform the merge process recursively as well.\nSuch recursive merge process still works for self-recursive\n(tree-structured) tables."
            }
          }
        }
      ],
      "description": "Merge multiple sections into one.\n\nIn this shopping mall system, it is not possible to delete a\n{@link IShoppingSection section}, because it is a systematic entity\naffecting to all other core entities like {@link IShoppingSale sales}.\nInstead of deleting, you can merge multiple sections into one.\n\nIf you specify a section to absorb others, then all of other sections\nwill be merged into the specified one. Also, subsidiary entities of\nsections also be merged and their references also be merged cascadingly."
    },
    {
      "method": "get",
      "path": "/shoppings/admins/systematic/sections/{code}/get",
      "name": "shoppings_admins_systematic_sections_get_getByCode",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Target section's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "code": {
            "type": "string",
            "title": "Identifier code",
            "description": "Identifier code."
          },
          "name": {
            "type": "string",
            "title": "Representative name of the section",
            "description": "Representative name of the section."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of record",
            "description": "Creation time of record."
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "created_at"
        ],
        "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future."
      },
      "description": "Get a section info by its code.\n\nGet a detailed {@link IShoppingSection section} information by its code."
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/authenticate/refresh",
      "name": "shoppings_customers_authenticate_refresh_patch",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "setHeaders": {
            "type": "object",
            "properties": {
              "Authorization": {
                "type": "string"
              }
            },
            "required": [
              "Authorization"
            ]
          },
          "token": {
            "type": "object",
            "properties": {
              "access": {
                "type": "string"
              },
              "refresh": {
                "type": "string"
              },
              "expired_at": {
                "type": "string",
                "format": "date-time"
              },
              "refreshable_until": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "access",
              "refresh",
              "expired_at",
              "refreshable_until"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "customer"
            ],
            "title": "Discriminant for the type of customer",
            "description": "Discriminant for the type of customer."
          },
          "member": {
            "type": "object",
            "properties": {
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                "title": "Citizen information",
                "nullable": true
              },
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\nIf the member also signed up as a seller.",
                "title": "Seller information",
                "nullable": true
              },
              "administrator": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                "title": "Administrator information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname that uniquely identifies the member",
                "description": "Nickname that uniquely identifies the member."
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "value": {
                      "type": "string",
                      "format": "email",
                      "title": "Email address value",
                      "description": "Email address value."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "created_at"
                  ],
                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                },
                "title": "List of emails",
                "description": "List of emails."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
              }
            },
            "required": [
              "citizen",
              "seller",
              "administrator",
              "id",
              "nickname",
              "emails",
              "created_at"
            ],
            "description": "Membership information.\n\nIf the customer has joined as a member.",
            "title": "Membership information",
            "nullable": true
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
            "title": "Citizen information",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "channel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "code": {
                "type": "string",
                "title": "Identifier code",
                "description": "Identifier code."
              },
              "name": {
                "type": "string",
                "title": "Name of the channel",
                "description": "Name of the channel."
              }
            },
            "required": [
              "id",
              "created_at",
              "code",
              "name"
            ],
            "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
          },
          "external_user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen activation info.",
                "title": "Citizen activation info",
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
              },
              "application": {
                "type": "string",
                "title": "Identifier code of the external service",
                "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
              },
              "uid": {
                "type": "string",
                "title": "Identifier key of external user from the external system",
                "description": "Identifier key of external user from the external system."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname of external user in the external system",
                "description": "Nickname of external user in the external system."
              },
              "data": {
                "description": "Additional information about external user from the external\nsystem."
              }
            },
            "required": [
              "id",
              "citizen",
              "created_at",
              "application",
              "uid",
              "nickname",
              "data"
            ],
            "description": "External user information.\n\nWhen the customer has come frome an external service.",
            "title": "External user information",
            "nullable": true
          },
          "href": {
            "type": "string",
            "format": "uri",
            "title": "Connection address",
            "description": "Connection address.\n\nSame with {@link window.location.href } of client."
          },
          "referrer": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "title": "Referrer address",
            "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ],
            "title": "Connection IP Address",
            "description": "Connection IP Address."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the connection record",
            "description": "Creation time of the connection record."
          }
        },
        "required": [
          "setHeaders",
          "token",
          "type",
          "member",
          "citizen",
          "id",
          "channel",
          "external_user",
          "href",
          "referrer",
          "ip",
          "created_at"
        ]
      },
      "description": "Refresh the authentication token.\n\nCreate a new {@link IShoppingCustomer.IToken.access access token} of a\n{@link IShoppingCustomer customer} with the pre-issued\n{@link IShoppingCustomer.IToken.refresh refresh} token.\n\nNote that, this function is available until the\n{@link IShoppingCustomer.IToken.refreshable_until } value."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/authenticate",
      "name": "shoppings_customers_authenticate_get",
      "parameters": [
        {
          "type": "object",
          "properties": {}
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "customer"
            ],
            "title": "Discriminant for the type of customer",
            "description": "Discriminant for the type of customer."
          },
          "member": {
            "type": "object",
            "properties": {
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                "title": "Citizen information",
                "nullable": true
              },
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\nIf the member also signed up as a seller.",
                "title": "Seller information",
                "nullable": true
              },
              "administrator": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                "title": "Administrator information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname that uniquely identifies the member",
                "description": "Nickname that uniquely identifies the member."
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "value": {
                      "type": "string",
                      "format": "email",
                      "title": "Email address value",
                      "description": "Email address value."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "created_at"
                  ],
                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                },
                "title": "List of emails",
                "description": "List of emails."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
              }
            },
            "required": [
              "citizen",
              "seller",
              "administrator",
              "id",
              "nickname",
              "emails",
              "created_at"
            ],
            "description": "Membership information.\n\nIf the customer has joined as a member.",
            "title": "Membership information",
            "nullable": true
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
            "title": "Citizen information",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "channel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "code": {
                "type": "string",
                "title": "Identifier code",
                "description": "Identifier code."
              },
              "name": {
                "type": "string",
                "title": "Name of the channel",
                "description": "Name of the channel."
              }
            },
            "required": [
              "id",
              "created_at",
              "code",
              "name"
            ],
            "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
          },
          "external_user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen activation info.",
                "title": "Citizen activation info",
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
              },
              "application": {
                "type": "string",
                "title": "Identifier code of the external service",
                "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
              },
              "uid": {
                "type": "string",
                "title": "Identifier key of external user from the external system",
                "description": "Identifier key of external user from the external system."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname of external user in the external system",
                "description": "Nickname of external user in the external system."
              },
              "data": {
                "description": "Additional information about external user from the external\nsystem."
              }
            },
            "required": [
              "id",
              "citizen",
              "created_at",
              "application",
              "uid",
              "nickname",
              "data"
            ],
            "description": "External user information.\n\nWhen the customer has come frome an external service.",
            "title": "External user information",
            "nullable": true
          },
          "href": {
            "type": "string",
            "format": "uri",
            "title": "Connection address",
            "description": "Connection address.\n\nSame with {@link window.location.href } of client."
          },
          "referrer": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "title": "Referrer address",
            "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ],
            "title": "Connection IP Address",
            "description": "Connection IP Address."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the connection record",
            "description": "Creation time of the connection record."
          }
        },
        "required": [
          "type",
          "member",
          "citizen",
          "id",
          "channel",
          "external_user",
          "href",
          "referrer",
          "ip",
          "created_at"
        ],
        "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
      },
      "description": "Get current customer info.\n\nGet current {@link IShoppingCustomer customer} information from the\n{@link IShoppingCustomer.IToken.access access token}."
    },
    {
      "method": "post",
      "path": "/shoppings/customers/authenticate",
      "name": "shoppings_customers_authenticate_post",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "channel_code": {
                  "type": "string"
                },
                "external_user": {
                  "type": "object",
                  "properties": {
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen activation info.",
                      "title": "Citizen activation info",
                      "nullable": true
                    },
                    "application": {
                      "type": "string",
                      "title": "Identifier code of the external service",
                      "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                    },
                    "uid": {
                      "type": "string",
                      "title": "Identifier key of external user from the external system",
                      "description": "Identifier key of external user from the external system."
                    },
                    "nickname": {
                      "type": "string",
                      "title": "Nickname of external user in the external system",
                      "description": "Nickname of external user in the external system."
                    },
                    "password": {
                      "type": "string",
                      "title": "Password of external user from the external system",
                      "description": "Password of external user from the external system.\n\nThis is a password issued to the user by an external service,\nand is by no means the actual user password. However, for\n{@link IShoppingCustomer customers} who entered the same\napplication and code as the current external system user, this is\nto determine whether to view this as a correct external system\nuser or a violation."
                    },
                    "data": {
                      "description": "Additional information about external user from the external\nsystem."
                    }
                  },
                  "required": [
                    "citizen",
                    "application",
                    "uid",
                    "nickname",
                    "password",
                    "data"
                  ],
                  "nullable": true
                },
                "href": {
                  "type": "string",
                  "format": "uri"
                },
                "referrer": {
                  "type": "string",
                  "format": "uri",
                  "nullable": true
                },
                "ip": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "ipv4"
                    },
                    {
                      "type": "string",
                      "format": "ipv6"
                    }
                  ]
                }
              },
              "required": [
                "channel_code",
                "external_user",
                "href",
                "referrer"
              ]
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "setHeaders": {
            "type": "object",
            "properties": {
              "Authorization": {
                "type": "string"
              }
            },
            "required": [
              "Authorization"
            ]
          },
          "token": {
            "type": "object",
            "properties": {
              "access": {
                "type": "string"
              },
              "refresh": {
                "type": "string"
              },
              "expired_at": {
                "type": "string",
                "format": "date-time"
              },
              "refreshable_until": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "access",
              "refresh",
              "expired_at",
              "refreshable_until"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "customer"
            ],
            "title": "Discriminant for the type of customer",
            "description": "Discriminant for the type of customer."
          },
          "member": {
            "type": "object",
            "properties": {
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                "title": "Citizen information",
                "nullable": true
              },
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\nIf the member also signed up as a seller.",
                "title": "Seller information",
                "nullable": true
              },
              "administrator": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                "title": "Administrator information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname that uniquely identifies the member",
                "description": "Nickname that uniquely identifies the member."
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "value": {
                      "type": "string",
                      "format": "email",
                      "title": "Email address value",
                      "description": "Email address value."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "created_at"
                  ],
                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                },
                "title": "List of emails",
                "description": "List of emails."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
              }
            },
            "required": [
              "citizen",
              "seller",
              "administrator",
              "id",
              "nickname",
              "emails",
              "created_at"
            ],
            "description": "Membership information.\n\nIf the customer has joined as a member.",
            "title": "Membership information",
            "nullable": true
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
            "title": "Citizen information",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "channel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "code": {
                "type": "string",
                "title": "Identifier code",
                "description": "Identifier code."
              },
              "name": {
                "type": "string",
                "title": "Name of the channel",
                "description": "Name of the channel."
              }
            },
            "required": [
              "id",
              "created_at",
              "code",
              "name"
            ],
            "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
          },
          "external_user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen activation info.",
                "title": "Citizen activation info",
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
              },
              "application": {
                "type": "string",
                "title": "Identifier code of the external service",
                "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
              },
              "uid": {
                "type": "string",
                "title": "Identifier key of external user from the external system",
                "description": "Identifier key of external user from the external system."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname of external user in the external system",
                "description": "Nickname of external user in the external system."
              },
              "data": {
                "description": "Additional information about external user from the external\nsystem."
              }
            },
            "required": [
              "id",
              "citizen",
              "created_at",
              "application",
              "uid",
              "nickname",
              "data"
            ],
            "description": "External user information.\n\nWhen the customer has come frome an external service.",
            "title": "External user information",
            "nullable": true
          },
          "href": {
            "type": "string",
            "format": "uri",
            "title": "Connection address",
            "description": "Connection address.\n\nSame with {@link window.location.href } of client."
          },
          "referrer": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "title": "Referrer address",
            "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ],
            "title": "Connection IP Address",
            "description": "Connection IP Address."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the connection record",
            "description": "Creation time of the connection record."
          }
        },
        "required": [
          "setHeaders",
          "token",
          "type",
          "member",
          "citizen",
          "id",
          "channel",
          "external_user",
          "href",
          "referrer",
          "ip",
          "created_at"
        ]
      },
      "description": "Create a new customer record.\n\nThis shopping mall system defines everyone participating in this market as\na \"customer\". And the customer records are not archived based on individual\n{@link IShoppingCitizen people}, but based on the unit of connection.\nTherefore, even if it is the same person, a new {@link IShoppingCustomer }\nrecord is created every time a connection is made.\n\nTherefore, all Client Applications that access this service must first call\nthis function, report the customer's inflow path to the server, and create\nan {@link IShoppingCustomer.IToken.access access token}. If you skip this\nfunction call, all the other API functions would be prohibited. There is no\nexception, even if you want to {@link activate } your citizenship or\n{@link login } with your {@link IShoppingMember member account}. Before\nauthenticating yourself or logging in, be sure to call this function first.\nThis also applies when an {@link IShoppingAdministrator administrator} or\n{@link IShoppingSeller seller} logs in.\n\nAlso, the authentication token has an\n{@link IShoppingCustomer.IToken.expired_at expiration time}\nand cannot be used permanently. For reference, the authentication token is\nvalid for 3 hours, and if you want to maintain customer authentication even\nafter 3 hours, you must call the {@link refresh } function."
    },
    {
      "method": "post",
      "path": "/shoppings/customers/authenticate/join",
      "name": "shoppings_customers_authenticate_join_post",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "nickname": {
                  "type": "string",
                  "title": "Nickname that uniquely identifies the member",
                  "description": "Nickname that uniquely identifies the member."
                },
                "citizen": {
                  "type": "object",
                  "properties": {
                    "mobile": {
                      "type": "string",
                      "pattern": "^[0-9]*$",
                      "title": "Mobile number",
                      "description": "Mobile number."
                    },
                    "name": {
                      "type": "string",
                      "title": "Real name, or equivalent nickname",
                      "description": "Real name, or equivalent nickname."
                    }
                  },
                  "required": [
                    "mobile",
                    "name"
                  ],
                  "description": "Citizen information.",
                  "title": "Citizen information",
                  "nullable": true
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "title": "Email address of member",
                  "description": "Email address of member.\n\nIf the member has multiple email addresses, just use one of them."
                },
                "password": {
                  "type": "string",
                  "title": "Password of the member account",
                  "description": "Password of the member account."
                }
              },
              "required": [
                "nickname",
                "citizen",
                "email",
                "password"
              ],
              "description": "Joining request info."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "customer"
            ],
            "title": "Discriminant for the type of customer",
            "description": "Discriminant for the type of customer."
          },
          "member": {
            "type": "object",
            "properties": {
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                "title": "Citizen information",
                "nullable": true
              },
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\nIf the member also signed up as a seller.",
                "title": "Seller information",
                "nullable": true
              },
              "administrator": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                "title": "Administrator information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname that uniquely identifies the member",
                "description": "Nickname that uniquely identifies the member."
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "value": {
                      "type": "string",
                      "format": "email",
                      "title": "Email address value",
                      "description": "Email address value."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "created_at"
                  ],
                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                },
                "title": "List of emails",
                "description": "List of emails."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
              }
            },
            "required": [
              "citizen",
              "seller",
              "administrator",
              "id",
              "nickname",
              "emails",
              "created_at"
            ],
            "description": "Membership information.\n\nIf the customer has joined as a member.",
            "title": "Membership information",
            "nullable": true
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
            "title": "Citizen information",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "channel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "code": {
                "type": "string",
                "title": "Identifier code",
                "description": "Identifier code."
              },
              "name": {
                "type": "string",
                "title": "Name of the channel",
                "description": "Name of the channel."
              }
            },
            "required": [
              "id",
              "created_at",
              "code",
              "name"
            ],
            "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
          },
          "external_user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen activation info.",
                "title": "Citizen activation info",
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
              },
              "application": {
                "type": "string",
                "title": "Identifier code of the external service",
                "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
              },
              "uid": {
                "type": "string",
                "title": "Identifier key of external user from the external system",
                "description": "Identifier key of external user from the external system."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname of external user in the external system",
                "description": "Nickname of external user in the external system."
              },
              "data": {
                "description": "Additional information about external user from the external\nsystem."
              }
            },
            "required": [
              "id",
              "citizen",
              "created_at",
              "application",
              "uid",
              "nickname",
              "data"
            ],
            "description": "External user information.\n\nWhen the customer has come frome an external service.",
            "title": "External user information",
            "nullable": true
          },
          "href": {
            "type": "string",
            "format": "uri",
            "title": "Connection address",
            "description": "Connection address.\n\nSame with {@link window.location.href } of client."
          },
          "referrer": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "title": "Referrer address",
            "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ],
            "title": "Connection IP Address",
            "description": "Connection IP Address."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the connection record",
            "description": "Creation time of the connection record."
          }
        },
        "required": [
          "type",
          "member",
          "citizen",
          "id",
          "channel",
          "external_user",
          "href",
          "referrer",
          "ip",
          "created_at"
        ],
        "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
      },
      "description": "Join membership.\n\n{@link IShoppingCustomer Customer} signs up for\n{@link IShoppingMember membership} of current shopping mall system.\n\nIf you've performed the {@link IShoppingCitizen citizenship}\n{@link activate activation} too, then you can skip the {@link activate }\nfunction calling everytime you log in from now on. Also, if the person had\n{@link IShoppingOrder purchased} with {@link activate } and {@link external }\nfunction calling, you can also access to the order history too. In other\nwords, activity details prior to membership registration can also be\naccessed with continuity.\n\nFor reference, as described in the {@link create } function, before calling\nthis `join` function, you must first create a customer record and token by\ncalling the {@link create } function."
    },
    {
      "method": "put",
      "path": "/shoppings/customers/authenticate/login",
      "name": "shoppings_customers_authenticate_login_put",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "title": "Email address of member",
                  "description": "Email address of member.\n\nIf the member has multiple email addresses, just use one of them."
                },
                "password": {
                  "type": "string",
                  "title": "Password of the member account",
                  "description": "Password of the member account."
                }
              },
              "required": [
                "email",
                "password"
              ],
              "description": "Login request info."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "customer"
            ],
            "title": "Discriminant for the type of customer",
            "description": "Discriminant for the type of customer."
          },
          "member": {
            "type": "object",
            "properties": {
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                "title": "Citizen information",
                "nullable": true
              },
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\nIf the member also signed up as a seller.",
                "title": "Seller information",
                "nullable": true
              },
              "administrator": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                "title": "Administrator information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname that uniquely identifies the member",
                "description": "Nickname that uniquely identifies the member."
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "value": {
                      "type": "string",
                      "format": "email",
                      "title": "Email address value",
                      "description": "Email address value."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "created_at"
                  ],
                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                },
                "title": "List of emails",
                "description": "List of emails."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
              }
            },
            "required": [
              "citizen",
              "seller",
              "administrator",
              "id",
              "nickname",
              "emails",
              "created_at"
            ],
            "description": "Membership information.\n\nIf the customer has joined as a member.",
            "title": "Membership information",
            "nullable": true
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
            "title": "Citizen information",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "channel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "code": {
                "type": "string",
                "title": "Identifier code",
                "description": "Identifier code."
              },
              "name": {
                "type": "string",
                "title": "Name of the channel",
                "description": "Name of the channel."
              }
            },
            "required": [
              "id",
              "created_at",
              "code",
              "name"
            ],
            "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
          },
          "external_user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen activation info.",
                "title": "Citizen activation info",
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
              },
              "application": {
                "type": "string",
                "title": "Identifier code of the external service",
                "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
              },
              "uid": {
                "type": "string",
                "title": "Identifier key of external user from the external system",
                "description": "Identifier key of external user from the external system."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname of external user in the external system",
                "description": "Nickname of external user in the external system."
              },
              "data": {
                "description": "Additional information about external user from the external\nsystem."
              }
            },
            "required": [
              "id",
              "citizen",
              "created_at",
              "application",
              "uid",
              "nickname",
              "data"
            ],
            "description": "External user information.\n\nWhen the customer has come frome an external service.",
            "title": "External user information",
            "nullable": true
          },
          "href": {
            "type": "string",
            "format": "uri",
            "title": "Connection address",
            "description": "Connection address.\n\nSame with {@link window.location.href } of client."
          },
          "referrer": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "title": "Referrer address",
            "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ],
            "title": "Connection IP Address",
            "description": "Connection IP Address."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the connection record",
            "description": "Creation time of the connection record."
          }
        },
        "required": [
          "type",
          "member",
          "citizen",
          "id",
          "channel",
          "external_user",
          "href",
          "referrer",
          "ip",
          "created_at"
        ],
        "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
      },
      "description": "Membership login.\n\n{@link IShoppingCustomer Customer} logs in with his/her\n{@link IShoppingMember membership} account with the email and password.\n\nIf the {@link IShoppingMember member} has previously performed\n{@link activate citizenship activation}, the {@link IShoppingCustomer.citizen }\nvalue would be filled in accordingly. And if the member has also signed up\nas an {@link IShoppingAdministrator administrator} or\n{@link IShoppingSeller seller}, the relevant information is also entered\naccordingly.\n\nFor reference, as described in the {@link create } function, before calling\nthis `login` function, you must first create a customer record and token by\ncalling the {@link create } function."
    },
    {
      "method": "post",
      "path": "/shoppings/customers/authenticate/activate",
      "name": "shoppings_customers_authenticate_activate_post",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "mobile": {
                  "type": "string",
                  "pattern": "^[0-9]*$",
                  "title": "Mobile number",
                  "description": "Mobile number."
                },
                "name": {
                  "type": "string",
                  "title": "Real name, or equivalent nickname",
                  "description": "Real name, or equivalent nickname."
                }
              },
              "required": [
                "mobile",
                "name"
              ],
              "description": "Creation information of citizen verification."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "customer"
            ],
            "title": "Discriminant for the type of customer",
            "description": "Discriminant for the type of customer."
          },
          "member": {
            "type": "object",
            "properties": {
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                "title": "Citizen information",
                "nullable": true
              },
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\nIf the member also signed up as a seller.",
                "title": "Seller information",
                "nullable": true
              },
              "administrator": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                "title": "Administrator information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname that uniquely identifies the member",
                "description": "Nickname that uniquely identifies the member."
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "value": {
                      "type": "string",
                      "format": "email",
                      "title": "Email address value",
                      "description": "Email address value."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "created_at"
                  ],
                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                },
                "title": "List of emails",
                "description": "List of emails."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
              }
            },
            "required": [
              "citizen",
              "seller",
              "administrator",
              "id",
              "nickname",
              "emails",
              "created_at"
            ],
            "description": "Membership information.\n\nIf the customer has joined as a member.",
            "title": "Membership information",
            "nullable": true
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
            "title": "Citizen information",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "channel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "code": {
                "type": "string",
                "title": "Identifier code",
                "description": "Identifier code."
              },
              "name": {
                "type": "string",
                "title": "Name of the channel",
                "description": "Name of the channel."
              }
            },
            "required": [
              "id",
              "created_at",
              "code",
              "name"
            ],
            "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
          },
          "external_user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen activation info.",
                "title": "Citizen activation info",
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
              },
              "application": {
                "type": "string",
                "title": "Identifier code of the external service",
                "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
              },
              "uid": {
                "type": "string",
                "title": "Identifier key of external user from the external system",
                "description": "Identifier key of external user from the external system."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname of external user in the external system",
                "description": "Nickname of external user in the external system."
              },
              "data": {
                "description": "Additional information about external user from the external\nsystem."
              }
            },
            "required": [
              "id",
              "citizen",
              "created_at",
              "application",
              "uid",
              "nickname",
              "data"
            ],
            "description": "External user information.\n\nWhen the customer has come frome an external service.",
            "title": "External user information",
            "nullable": true
          },
          "href": {
            "type": "string",
            "format": "uri",
            "title": "Connection address",
            "description": "Connection address.\n\nSame with {@link window.location.href } of client."
          },
          "referrer": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "title": "Referrer address",
            "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ],
            "title": "Connection IP Address",
            "description": "Connection IP Address."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the connection record",
            "description": "Creation time of the connection record."
          }
        },
        "required": [
          "type",
          "member",
          "citizen",
          "id",
          "channel",
          "external_user",
          "href",
          "referrer",
          "ip",
          "created_at"
        ],
        "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
      },
      "description": "Activate citizenship.\n\n{@link IShoppingCustomer Customer} activates his/her\n{@link IShoppingCitizen citizenship} with mobile number and real name.\n\nIf the custommer already {@link join joined} to the\n{@link IShoppingMember membership}, then you can skip the citizenship\n{@link activation } function calling everytime you log in from now on.\nOf course, such story would be same to the {@link external } function, too.\n\nFor reference, as described in the {@link create } function, before calling\nthis `activate` function, you must first create a customer record and token\nby calling the {@link create } function."
    },
    {
      "method": "post",
      "path": "/shoppings/customers/authenticate/external",
      "name": "shoppings_customers_authenticate_external_post",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "citizen": {
                  "type": "object",
                  "properties": {
                    "mobile": {
                      "type": "string",
                      "pattern": "^[0-9]*$",
                      "title": "Mobile number",
                      "description": "Mobile number."
                    },
                    "name": {
                      "type": "string",
                      "title": "Real name, or equivalent nickname",
                      "description": "Real name, or equivalent nickname."
                    }
                  },
                  "required": [
                    "mobile",
                    "name"
                  ],
                  "description": "Citizen activation info.",
                  "title": "Citizen activation info",
                  "nullable": true
                },
                "application": {
                  "type": "string",
                  "title": "Identifier code of the external service",
                  "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                },
                "uid": {
                  "type": "string",
                  "title": "Identifier key of external user from the external system",
                  "description": "Identifier key of external user from the external system."
                },
                "nickname": {
                  "type": "string",
                  "title": "Nickname of external user in the external system",
                  "description": "Nickname of external user in the external system."
                },
                "password": {
                  "type": "string",
                  "title": "Password of external user from the external system",
                  "description": "Password of external user from the external system.\n\nThis is a password issued to the user by an external service,\nand is by no means the actual user password. However, for\n{@link IShoppingCustomer customers} who entered the same\napplication and code as the current external system user, this is\nto determine whether to view this as a correct external system\nuser or a violation."
                },
                "data": {
                  "description": "Additional information about external user from the external\nsystem."
                }
              },
              "required": [
                "citizen",
                "application",
                "uid",
                "nickname",
                "password",
                "data"
              ],
              "description": "Creation information of external user."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "customer"
            ],
            "title": "Discriminant for the type of customer",
            "description": "Discriminant for the type of customer."
          },
          "member": {
            "type": "object",
            "properties": {
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                "title": "Citizen information",
                "nullable": true
              },
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\nIf the member also signed up as a seller.",
                "title": "Seller information",
                "nullable": true
              },
              "administrator": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                "title": "Administrator information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname that uniquely identifies the member",
                "description": "Nickname that uniquely identifies the member."
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "value": {
                      "type": "string",
                      "format": "email",
                      "title": "Email address value",
                      "description": "Email address value."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "created_at"
                  ],
                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                },
                "title": "List of emails",
                "description": "List of emails."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
              }
            },
            "required": [
              "citizen",
              "seller",
              "administrator",
              "id",
              "nickname",
              "emails",
              "created_at"
            ],
            "description": "Membership information.\n\nIf the customer has joined as a member.",
            "title": "Membership information",
            "nullable": true
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
            "title": "Citizen information",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "channel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "code": {
                "type": "string",
                "title": "Identifier code",
                "description": "Identifier code."
              },
              "name": {
                "type": "string",
                "title": "Name of the channel",
                "description": "Name of the channel."
              }
            },
            "required": [
              "id",
              "created_at",
              "code",
              "name"
            ],
            "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
          },
          "external_user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen activation info.",
                "title": "Citizen activation info",
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
              },
              "application": {
                "type": "string",
                "title": "Identifier code of the external service",
                "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
              },
              "uid": {
                "type": "string",
                "title": "Identifier key of external user from the external system",
                "description": "Identifier key of external user from the external system."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname of external user in the external system",
                "description": "Nickname of external user in the external system."
              },
              "data": {
                "description": "Additional information about external user from the external\nsystem."
              }
            },
            "required": [
              "id",
              "citizen",
              "created_at",
              "application",
              "uid",
              "nickname",
              "data"
            ],
            "description": "External user information.\n\nWhen the customer has come frome an external service.",
            "title": "External user information",
            "nullable": true
          },
          "href": {
            "type": "string",
            "format": "uri",
            "title": "Connection address",
            "description": "Connection address.\n\nSame with {@link window.location.href } of client."
          },
          "referrer": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "title": "Referrer address",
            "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
          },
          "ip": {
            "oneOf": [
              {
                "type": "string",
                "format": "ipv4"
              },
              {
                "type": "string",
                "format": "ipv6"
              }
            ],
            "title": "Connection IP Address",
            "description": "Connection IP Address."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the connection record",
            "description": "Creation time of the connection record."
          }
        },
        "required": [
          "type",
          "member",
          "citizen",
          "id",
          "channel",
          "external_user",
          "href",
          "referrer",
          "ip",
          "created_at"
        ],
        "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
      },
      "description": "Enroll external user info.\n\n{@link IShoppingCustomer Customer} enrolls his/her\n{@link IShoppingExternalUser external user} information from other service.\n\nIt has similar effect with the {@link join membership joining} function,\nso that if you've performed the {@link IShoppingCitizen citizenship}\n{@link activate activation} too, then you can skip the {@link activate }\nfunction calling everytime you call this `external` function with same\ninfo from now on. Also, if the person had\n{@link IShoppingOrder purchased} with {@link activate } and {@link join }\nfunction calling, you can also access to the order history too. In other\nwords, activity details prior to external server registration can also be\naccessed with continuity.\n\nFor reference, as described in the {@link create } function, before calling\nthis `external` function, you must first create a customer record and token\nby calling the {@link create } function."
    },
    {
      "method": "put",
      "path": "/shoppings/customers/authenticate/password/change",
      "name": "shoppings_customers_authenticate_password_change_put",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "oldbie": {
                  "type": "string",
                  "title": "Current password",
                  "description": "Current password."
                },
                "newbie": {
                  "type": "string",
                  "title": "The new password to change",
                  "description": "The new password to change."
                }
              },
              "required": [
                "oldbie",
                "newbie"
              ],
              "description": "Request info of password change."
            }
          }
        }
      ],
      "description": "Change password.\n\nChange password of {@link IShoppingMember member} with the current password.\n\nThe reason why the current password is required is for security."
    },
    {
      "method": "post",
      "path": "/shoppings/customers/deposits/charges",
      "name": "shoppings_customers_deposits_charges_post",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "customer": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer"
                ],
                "title": "Discriminant for the type of customer",
                "description": "Discriminant for the type of customer."
              },
              "member": {
                "type": "object",
                "properties": {
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "seller": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation tmie of record",
                        "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Seller information.\n\nIf the member also signed up as a seller.",
                    "title": "Seller information",
                    "nullable": true
                  },
                  "administrator": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                    "title": "Administrator information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname that uniquely identifies the member",
                    "description": "Nickname that uniquely identifies the member."
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "value": {
                          "type": "string",
                          "format": "email",
                          "title": "Email address value",
                          "description": "Email address value."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        }
                      },
                      "required": [
                        "id",
                        "value",
                        "created_at"
                      ],
                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                    },
                    "title": "List of emails",
                    "description": "List of emails."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                  }
                },
                "required": [
                  "citizen",
                  "seller",
                  "administrator",
                  "id",
                  "nickname",
                  "emails",
                  "created_at"
                ],
                "description": "Membership information.\n\nIf the customer has joined as a member.",
                "title": "Membership information",
                "nullable": true
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                "title": "Citizen information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "type",
              "member",
              "citizen",
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
          },
          "publish": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "paid_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "cancelled_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            },
            "required": [
              "id",
              "created_at",
              "paid_at",
              "cancelled_at"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "customer",
          "publish",
          "created_at",
          "value"
        ]
      },
      "description": "Create a new deposit charge application.\n\nCreate a new {@link IShoppingDepositCharge deposit charge application}.\n\nBy the way, this function does not mean completion the deposit charge, but\nmeans just {@link IShoppingCustomer customer} is appling the deposit charge.\nThe deposit charge be completed only when customer\n{@link IShoppingDepositChargePublish.publish pay} the deposit charge."
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/deposits/charges",
      "name": "shoppings_customers_deposits_charges_patch",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "minimum": {
                      "type": "number"
                    },
                    "maximum": {
                      "type": "number"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "published",
                        "payed",
                        "cancelled"
                      ]
                    },
                    "publish": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "to": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "payment": {
                          "type": "object",
                          "properties": {
                            "from": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "to": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "state"
                  ]
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at",
                      "-value",
                      "-publish.created_at",
                      "-publish.paid_at",
                      "+value",
                      "+publish.created_at",
                      "+publish.paid_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              }
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "customer"
                      ],
                      "title": "Discriminant for the type of customer",
                      "description": "Discriminant for the type of customer."
                    },
                    "member": {
                      "type": "object",
                      "properties": {
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "seller": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\nIf the member also signed up as a seller.",
                          "title": "Seller information",
                          "nullable": true
                        },
                        "administrator": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                          "title": "Administrator information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname that uniquely identifies the member",
                          "description": "Nickname that uniquely identifies the member."
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "value": {
                                "type": "string",
                                "format": "email",
                                "title": "Email address value",
                                "description": "Email address value."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "created_at"
                            ],
                            "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                          },
                          "title": "List of emails",
                          "description": "List of emails."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                        }
                      },
                      "required": [
                        "citizen",
                        "seller",
                        "administrator",
                        "id",
                        "nickname",
                        "emails",
                        "created_at"
                      ],
                      "description": "Membership information.\n\nIf the customer has joined as a member.",
                      "title": "Membership information",
                      "nullable": true
                    },
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                      "title": "Citizen information",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "code": {
                          "type": "string",
                          "title": "Identifier code",
                          "description": "Identifier code."
                        },
                        "name": {
                          "type": "string",
                          "title": "Name of the channel",
                          "description": "Name of the channel."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ],
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                    },
                    "external_user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen activation info.",
                          "title": "Citizen activation info",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                        },
                        "application": {
                          "type": "string",
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                        },
                        "uid": {
                          "type": "string",
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system."
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "application",
                        "uid",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "title": "External user information",
                      "nullable": true
                    },
                    "href": {
                      "type": "string",
                      "format": "uri",
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                    },
                    "referrer": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true,
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                    },
                    "ip": {
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ],
                      "title": "Connection IP Address",
                      "description": "Connection IP Address."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record."
                    }
                  },
                  "required": [
                    "type",
                    "member",
                    "citizen",
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ],
                  "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                },
                "publish": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "paid_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "cancelled_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "paid_at",
                    "cancelled_at"
                  ],
                  "nullable": true
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "customer",
                "publish",
                "created_at",
                "value"
              ]
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every deposit charges.\n\nList up every {@link IShoppingDepositCharge deposit charges} of the\n{@link IShoppingCustomer customer} with {@link IPage pagination}.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingDepositCharge.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingDepositCharge.IRequest.sort sort condition}."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/deposits/charges/{id}",
      "name": "shoppings_customers_deposits_charges_getById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Target deposit charge's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "customer": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer"
                ],
                "title": "Discriminant for the type of customer",
                "description": "Discriminant for the type of customer."
              },
              "member": {
                "type": "object",
                "properties": {
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "seller": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation tmie of record",
                        "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Seller information.\n\nIf the member also signed up as a seller.",
                    "title": "Seller information",
                    "nullable": true
                  },
                  "administrator": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                    "title": "Administrator information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname that uniquely identifies the member",
                    "description": "Nickname that uniquely identifies the member."
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "value": {
                          "type": "string",
                          "format": "email",
                          "title": "Email address value",
                          "description": "Email address value."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        }
                      },
                      "required": [
                        "id",
                        "value",
                        "created_at"
                      ],
                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                    },
                    "title": "List of emails",
                    "description": "List of emails."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                  }
                },
                "required": [
                  "citizen",
                  "seller",
                  "administrator",
                  "id",
                  "nickname",
                  "emails",
                  "created_at"
                ],
                "description": "Membership information.\n\nIf the customer has joined as a member.",
                "title": "Membership information",
                "nullable": true
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                "title": "Citizen information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "type",
              "member",
              "citizen",
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
          },
          "publish": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "paid_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "cancelled_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            },
            "required": [
              "id",
              "created_at",
              "paid_at",
              "cancelled_at"
            ],
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "customer",
          "publish",
          "created_at",
          "value"
        ]
      },
      "description": "Get a deposit charge info.\n\nGet a {@link IShoppingDepositCharge deposit charge} information."
    },
    {
      "method": "put",
      "path": "/shoppings/customers/deposits/charges/{id}",
      "name": "shoppings_customers_deposits_charges_putById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Target deposit charge's "
            },
            "body": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      ],
      "description": "Update a deposit charge application.\n\nUpdate value of a {@link IShoppingDepositCharge deposit charge application}\nthat has been applied by the {@link IShoppingCustomer }.\n\nIf the charge has been {@link IShoppingDepositChargePublish published},\nthen it is not possible to update the deposit charge. Only 410 gone exception\nwould be thrown."
    },
    {
      "method": "delete",
      "path": "/shoppings/customers/deposits/charges/{id}",
      "name": "shoppings_customers_deposits_charges_eraseById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Target deposit charge's "
            }
          }
        }
      ],
      "description": "Erase a deposit charge application.\n\nErase a {@link IShoppingDepositCharge deposit charge application} that has been\napplied by the {@link IShoppingCustomer }.\n\nIf the charge has been {@link IShoppingDepositChargePublish published}, then\nit is not possible to erase the deposit charge. In that case, you've to cancel\nthe payment by calling the {@link publish.cancel } function."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/deposits/charges/{chargeId}/publish/able",
      "name": "shoppings_customers_deposits_charges_publish_able_getByChargeid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "chargeId": {
              "type": "string",
              "format": "uuid",
              "description": "Target charge's "
            }
          }
        }
      ],
      "output": {
        "type": "boolean"
      },
      "description": "Check publishable.\n\nTest whether the {@link IShoppingDepositCharge charge} is publishable or not.\n\nIf the charge has not been {@link IShoppingDepositChargePublish published} and\nnot deleted yet, then it is possible to publish the charge"
    },
    {
      "method": "post",
      "path": "/shoppings/customers/deposits/charges/{chargeId}/publish",
      "name": "shoppings_customers_deposits_charges_publish_postByChargeid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "chargeId": {
              "type": "string",
              "format": "uuid",
              "description": "Target charge's "
            },
            "body": {
              "type": "object",
              "properties": {
                "vendor": {
                  "type": "string"
                },
                "uid": {
                  "type": "string"
                }
              },
              "required": [
                "vendor",
                "uid"
              ]
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "paid_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelled_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "created_at",
          "paid_at",
          "cancelled_at"
        ]
      },
      "description": "Publish a charge.\n\n{@link IShoppingDepositChargePublish Publish} a\n{@link IShoppingDepositCharge charge} that has been applied by the\n{@link IShoppingCustomer } with payment information gotten from the\npayment vendor system.\n\nAlso, the payment time can be different with the publish time. For example,\nif the payment method is manual bank account transfer, then the payment\nwould be delayed until the customer actually transfer the money. In that\ncase, {@link IShoppingDepositChargePublish.paid_at } would be `null` value,\nso that you have to check it after calling this publish function."
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/deposits/histories",
      "name": "shoppings_customers_deposits_histories_patch",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "deposit": {
                      "type": "object",
                      "properties": {
                        "source": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "direction": {
                          "type": "number",
                          "enum": [
                            -1,
                            1
                          ]
                        }
                      }
                    },
                    "citizen_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "minimum": {
                      "type": "number",
                      "minimum": 0
                    },
                    "maximum": {
                      "type": "number",
                      "minimum": 0
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-deposit.source",
                      "-deposit.code",
                      "-deposit.direction",
                      "+deposit.source",
                      "+deposit.code",
                      "+deposit.direction",
                      "-history.value",
                      "-history.created_at",
                      "+history.value",
                      "+history.created_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              }
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "citizen": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    },
                    "mobile": {
                      "type": "string",
                      "pattern": "^[0-9]*$",
                      "title": "Mobile number",
                      "description": "Mobile number."
                    },
                    "name": {
                      "type": "string",
                      "title": "Real name, or equivalent nickname",
                      "description": "Real name, or equivalent nickname."
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "mobile",
                    "name"
                  ],
                  "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                },
                "deposit": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "code": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "direction": {
                      "type": "number",
                      "enum": [
                        1,
                        -1
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "code",
                    "source",
                    "direction"
                  ]
                },
                "source_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "value": {
                  "type": "number"
                },
                "balance": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "citizen",
                "deposit",
                "source_id",
                "value",
                "balance",
                "created_at"
              ]
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every deposit histories.\n\nList up every {@link IShoppingDepositHistory deposit histories} of the\n{@link IShoppingCustomer customer} with {@link IPage pagination}.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingDepositHistory.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingDepositHistory.IRequest.sort sort condition}."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/deposits/histories/{id}",
      "name": "shoppings_customers_deposits_histories_getById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": ""
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
          },
          "deposit": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "code": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "direction": {
                "type": "number",
                "enum": [
                  1,
                  -1
                ]
              }
            },
            "required": [
              "id",
              "created_at",
              "code",
              "source",
              "direction"
            ]
          },
          "source_id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "number"
          },
          "balance": {
            "type": "number"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "citizen",
          "deposit",
          "source_id",
          "value",
          "balance",
          "created_at"
        ]
      },
      "description": "Get a deposit history info.\n\nGet a {@link IShoppingDepositHistory deposit history} information."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/deposits/histories/balance",
      "name": "shoppings_customers_deposits_histories_balance_get",
      "parameters": [
        {
          "type": "object",
          "properties": {}
        }
      ],
      "output": {
        "type": "number"
      },
      "description": "Get balance of the deposit.\n\nGet current balance of the deposit of the {@link IShoppingCustomer customer}."
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/mileages/histories",
      "name": "shoppings_customers_mileages_histories_patch",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "mileage": {
                      "type": "object",
                      "properties": {
                        "source": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "direction": {
                          "type": "number",
                          "enum": [
                            -1,
                            1
                          ]
                        }
                      }
                    },
                    "citizen_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "minimum": {
                      "type": "number",
                      "minimum": 0
                    },
                    "maximum": {
                      "type": "number",
                      "minimum": 0
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-mileage.source",
                      "-mileage.code",
                      "-mileage.direction",
                      "+mileage.source",
                      "+mileage.code",
                      "+mileage.direction",
                      "-history.value",
                      "-history.created_at",
                      "+history.value",
                      "+history.created_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              }
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "citizen": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    },
                    "mobile": {
                      "type": "string",
                      "pattern": "^[0-9]*$",
                      "title": "Mobile number",
                      "description": "Mobile number."
                    },
                    "name": {
                      "type": "string",
                      "title": "Real name, or equivalent nickname",
                      "description": "Real name, or equivalent nickname."
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "mobile",
                    "name"
                  ],
                  "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                },
                "mileage": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "value": {
                      "type": "number",
                      "nullable": true
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "code": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "direction": {
                      "type": "number",
                      "enum": [
                        1,
                        -1
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "created_at",
                    "code",
                    "source",
                    "direction"
                  ]
                },
                "source_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "value": {
                  "type": "number"
                },
                "balance": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "id",
                "citizen",
                "mileage",
                "source_id",
                "value",
                "balance",
                "created_at"
              ]
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every mileage histories.\n\nList up every {@link IShoppingMileageHistory mileage histories} of the\n{@link IShoppingCustomer customer} with {@link IPage pagination}.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingMileageHistory.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingMileageHistory.IRequest.sort sort condition}."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/mileages/histories/{id}",
      "name": "shoppings_customers_mileages_histories_getById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target mileage history's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
          },
          "mileage": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "value": {
                "type": "number",
                "nullable": true
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "code": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "direction": {
                "type": "number",
                "enum": [
                  1,
                  -1
                ]
              }
            },
            "required": [
              "id",
              "value",
              "created_at",
              "code",
              "source",
              "direction"
            ]
          },
          "source_id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "number"
          },
          "balance": {
            "type": "number"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "citizen",
          "mileage",
          "source_id",
          "value",
          "balance",
          "created_at"
        ]
      },
      "description": "Get a mileage history info.\n\nGet a {@link IShoppingMileageHistory mileage history} information."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/mileages/histories/balance",
      "name": "shoppings_customers_mileages_histories_balance_get",
      "parameters": [
        {
          "type": "object",
          "properties": {}
        }
      ],
      "output": {
        "type": "number"
      },
      "description": "Get balance of the mileage.\n\nGet current balance of the mileage of the {@link IShoppingCustomer customer}."
    },
    {
      "method": "put",
      "path": "/shoppings/customers/carts/{cartId}/commodities/{id}",
      "name": "shoppings_customers_carts_commodities_putByCartidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "cartId": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "Belonged cart's ID"
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target commodity's "
            },
            "body": {
              "type": "object",
              "properties": {
                "volume": {
                  "type": "integer",
                  "minimum": 1,
                  "title": "Volume of the commodity to purchase",
                  "description": "Volume of the commodity to purchase.\n\nA value indicating how many sets would be multiplied to the children\n{@link IShoppingSaleUnitStock.IInvert.quantity } values."
                }
              },
              "required": [
                "volume"
              ],
              "description": "Update information of a shopping cart commodity."
            }
          }
        }
      ],
      "description": "Update a commodity (volume).\n\nUpdate a {@link IShoppingCartCommodity commodity}'s volume in the\nshopping cart.\n\nIf the *cartId* is different with the belonged cart's ID, then 404 not\nfound exception would be thrown. Otherwise, the *cartId* has `null` value,\nsuch dependency checking would be skipped, but still ownership would be\nvalidated.\n\nAlso, if target {@link IShoppingSale sale} has been suspended or\n{@link IShoppingSaleUnitStockInventory out of stock} suddenly, then 410\ngone error would be thrown, either."
    },
    {
      "method": "delete",
      "path": "/shoppings/customers/carts/{cartId}/commodities/{id}",
      "name": "shoppings_customers_carts_commodities_eraseByCartidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "cartId": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "Belonged cart's ID"
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target commodity's "
            }
          }
        }
      ],
      "description": "Erase a commodity.\n\nErase a {@link IShoppingCartCommodity commodity} from the shopping cart.\n\nIf the commodity is on an {@link IShoppingOrder order} process, it is not\npossible to erase it. Instead, if the order has been\n{@link IShoppingOrderPublish published}, then it would not be appread in\nthe shopping cart more. If the order be erased, then you also can continue\nerasinng the commodity, neither."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/carts/{cartId}/commodities/{id}/replica",
      "name": "shoppings_customers_carts_commodities_replica_getByCartidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "cartId": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "description": "Belonged cart's ID"
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target commodity's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "sale_id": {
            "type": "string",
            "format": "uuid",
            "title": "Target sale's {@link IShoppingSale.id }",
            "description": "Target sale's {@link IShoppingSale.id }."
          },
          "stocks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "unit_id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Target unit's {@link IShoppingSaleUnit.id }",
                  "description": "Target unit's {@link IShoppingSaleUnit.id }."
                },
                "stock_id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Target stock's {@link IShoppingSaleUnitStock.id }",
                  "description": "Target stock's {@link IShoppingSaleUnitStock.id }.\n\nIt must be matched with the {@link choices } property."
                },
                "choices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "option_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Target option's {@link IShoppingSaleUnitOption.id }",
                        "description": "Target option's {@link IShoppingSaleUnitOption.id }."
                      },
                      "candidate_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "title": "Target candidate's {@link IShoppingSaleUnitOptionCandidate.id }",
                        "description": "Target candidate's {@link IShoppingSaleUnitOptionCandidate.id }.\n\nWhen target option's type is `select`, then this attribute is not\n`null` but has a value."
                      },
                      "value": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          }
                        ],
                        "title": "Written value about the option",
                        "description": "Written value about the option.\n\nWhen target option's type is not `select`, but an atomic type value\nlike `boolean`, `number` or `string`, then this attribute is not\n`null` but has the matched atomic value."
                      }
                    },
                    "required": [
                      "option_id",
                      "candidate_id",
                      "value"
                    ],
                    "description": "Creation information of the choice for each option.\n\nWhen record being created, its corresponding structure would be\n{@link IShoppingSaleUnitStockChoice.IInvert }."
                  },
                  "title": "Creation information of the choices for each option",
                  "description": "Creation information of the choices for each option."
                },
                "quantity": {
                  "type": "integer",
                  "minimum": 1,
                  "title": "Quantity of the stock to purchase",
                  "description": "Quantity of the stock to purchase.\n\nThis value is multiplied by the {@link IShoppingCartCommodity.volume }."
                }
              },
              "required": [
                "unit_id",
                "stock_id",
                "choices",
                "quantity"
              ],
              "description": "Creation information of the commodity stock of shopping cart.\n\nWhen record being created, its corresponding structure would be\n{@link IShoppingSaleSnapshotUnit.IInvert } and\n{@link IShoppingSaleSnapshotUnitStock.IInvert }."
            },
            "minItems": 1,
            "title": "List of the stocks to be purchased",
            "description": "List of the stocks to be purchased."
          },
          "volume": {
            "type": "integer",
            "minimum": 1,
            "title": "Volume of the commodity to purchase",
            "description": "Volume of the commodity to purchase.\n\nA value indicating how many sets would be multiplied to the children\n{@link IShoppingSaleUnitStock.IInvert.quantity } values."
          },
          "accumulate": {
            "type": "boolean",
            "title": "Whether to accumulate the volume or not",
            "description": "Whether to accumulate the volume or not.\n\nIf this attribute is not `false` and there's same commodity that\ncomposed with same stocks and options, then the volume will be\naccumulated to the existed one.\n\nOtherwise, duplicated commodity would be newly created."
          }
        },
        "required": [
          "sale_id",
          "stocks",
          "volume"
        ],
        "description": "Creation information of a shopping cart commodity."
      },
      "description": "Get replica of a commodity.\n\nGet a {@link IShoppingCartCommodity.ICreate } typed info of the target\ncommodity for replication.\n\nBy the way, if the *cartId* is different with the belonged cart's ID,\nthen 404 not found exception would be thrown. Otherwise, the *cartId*\nhas `null` value, such dependency checking would be skipped, but still\nownership would be validated.\n\nAlso, if target {@link IShoppingSale sale} has been suspended or\n{@link IShoppingSaleUnitStockInventory out of stock} suddenly,\nthen 410 gone error would be thrown, either."
    },
    {
      "method": "delete",
      "path": "/shoppings/customers/orders/{id}",
      "name": "shoppings_customers_orders_eraseById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target order's "
            }
          }
        }
      ],
      "description": "Erase an order application.\n\nErase an order application that has been applied by the\n{@link IShoppingCustomer }.\n\nIf the order has been {@link IShoppingOrderPublish published}, then it is\nnot possible to erase the order. In that case, you've to cancel the\npayment by calling the {@link publish.cancel } function."
    },
    {
      "method": "put",
      "path": "/shoppings/customers/orders/{orderId}/goods/{id}/confirm",
      "name": "shoppings_customers_orders_goods_confirm_putByOrderidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "orderId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged order's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target good's "
            }
          }
        }
      ],
      "description": "Confirm an order good.\n\nConfirm an {@link IShoppingOrderGood order good} that has been\ncompleted {@link IShoppingDelivery delivering} to the\n{@link IShoppingCustomer customer}.\n\nIn other words, belonged {@link IShoppingOrder order} must be\n{@link IShoppingPublish.paid_at published, paid} and delivery of\nthe good must be {@link IShoppingDeliveryJourney arrived} to the\ncustomer. If not, 428 unprocessable entity error would be thrown."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/orders/{orderId}/publish/able",
      "name": "shoppings_customers_orders_publish_able_getByOrderid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "orderId": {
              "type": "string",
              "format": "uuid",
              "description": "Target order's "
            }
          }
        }
      ],
      "output": {
        "type": "boolean"
      },
      "description": "Check publishable.\n\nTest whether the {@link IShoppingOrder order} is publishable or not.\n\nIf the order has not been {@link IShoppingOrderPublish published} and\nnot deleted yet, then it is possible to publish the order. Even thouogh\ntarget {@link IShoppingSale sale} is suspended or\n{@link IShoppingSaleUnitStockInventory out of stock}, it is still possible\nto publish because the order already has been applied."
    },
    {
      "method": "post",
      "path": "/shoppings/customers/orders/{orderId}/publish",
      "name": "shoppings_customers_orders_publish_postByOrderid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "orderId": {
              "type": "string",
              "format": "uuid",
              "description": "Target order's "
            },
            "body": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "cash"
                      ]
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number to contact",
                          "description": "Mobile number to contact."
                        },
                        "name": {
                          "type": "string",
                          "title": "Representative name of the address",
                          "description": "Representative name of the address.\n\nSometimes be receiver's name, and sometimes be place name."
                        },
                        "country": {
                          "type": "string",
                          "title": "Country name",
                          "description": "Country name."
                        },
                        "province": {
                          "type": "string",
                          "title": "Province name",
                          "description": "Province name."
                        },
                        "city": {
                          "type": "string",
                          "title": "City name",
                          "description": "City name."
                        },
                        "department": {
                          "type": "string",
                          "title": "Department name",
                          "description": "Department name."
                        },
                        "possession": {
                          "type": "string",
                          "title": "Detailed address containing street name, building number, and room number",
                          "description": "Detailed address containing street name, building number, and room number."
                        },
                        "zip_code": {
                          "type": "string",
                          "title": "Zip code, or postal code",
                          "description": "Zip code, or postal code."
                        },
                        "special_note": {
                          "type": "string",
                          "nullable": true,
                          "title": "Special description if required",
                          "description": "Special description if required."
                        }
                      },
                      "required": [
                        "mobile",
                        "name",
                        "country",
                        "province",
                        "city",
                        "department",
                        "possession",
                        "zip_code",
                        "special_note"
                      ]
                    },
                    "vendor": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "address",
                    "vendor",
                    "uid"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "zero"
                      ]
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number to contact",
                          "description": "Mobile number to contact."
                        },
                        "name": {
                          "type": "string",
                          "title": "Representative name of the address",
                          "description": "Representative name of the address.\n\nSometimes be receiver's name, and sometimes be place name."
                        },
                        "country": {
                          "type": "string",
                          "title": "Country name",
                          "description": "Country name."
                        },
                        "province": {
                          "type": "string",
                          "title": "Province name",
                          "description": "Province name."
                        },
                        "city": {
                          "type": "string",
                          "title": "City name",
                          "description": "City name."
                        },
                        "department": {
                          "type": "string",
                          "title": "Department name",
                          "description": "Department name."
                        },
                        "possession": {
                          "type": "string",
                          "title": "Detailed address containing street name, building number, and room number",
                          "description": "Detailed address containing street name, building number, and room number."
                        },
                        "zip_code": {
                          "type": "string",
                          "title": "Zip code, or postal code",
                          "description": "Zip code, or postal code."
                        },
                        "special_note": {
                          "type": "string",
                          "nullable": true,
                          "title": "Special description if required",
                          "description": "Special description if required."
                        }
                      },
                      "required": [
                        "mobile",
                        "name",
                        "country",
                        "province",
                        "city",
                        "department",
                        "possession",
                        "zip_code",
                        "special_note"
                      ]
                    }
                  },
                  "required": [
                    "type",
                    "address"
                  ]
                }
              ]
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "deliveries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "seller": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation tmie of record",
                      "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                    }
                  },
                  "required": [
                    "id",
                    "created_at"
                  ],
                  "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                },
                "journeys": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the record",
                        "description": "Creation time of the record."
                      },
                      "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Deletion time of the record",
                        "description": "Deletion time of the record."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "preparing",
                          "manufacturing",
                          "shipping",
                          "delivering"
                        ]
                      },
                      "title": {
                        "type": "string",
                        "nullable": true,
                        "title": "Title of journey",
                        "description": "Title of journey."
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "title": "Description of journey",
                        "description": "Description of journey."
                      },
                      "started_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Start time of the journey",
                        "description": "Start time of the journey."
                      },
                      "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Completion time of the journey",
                        "description": "Completion time of the journey."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "deleted_at",
                      "type",
                      "title",
                      "description",
                      "started_at",
                      "completed_at"
                    ],
                    "description": "Journey of delivery.\n\n`IShoppingDeliveryJourney` is a subsidiary entity of {@link IShoppingDelivery },\ndescribing each journey of the delivery. For reference, the word journey\nmeans each step of the delivery process, such as preparing, shipping, and\ndelivering {@link IShoppingOrderGood goods} to the\n{@link IShoppingCustomer customer}."
                  },
                  "title": "List of journeys of the delivery",
                  "description": "List of journeys of the delivery."
                },
                "pieces": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "publish_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Target order's {@link IShoppingOrderPublish.id }",
                        "description": "Target order's {@link IShoppingOrderPublish.id }."
                      },
                      "good_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Target good's {@link IShoppingOrderGood.id }",
                        "description": "Target good's {@link IShoppingOrderGood.id }."
                      },
                      "stock_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Target stock's {@link IShoppingSaleUnitStock.id }",
                        "description": "Target stock's {@link IShoppingSaleUnitStock.id }."
                      },
                      "quantity": {
                        "type": "number",
                        "minimum": 0,
                        "title": "Quantity of the stock",
                        "description": "Quantity of the stock.\n\nIt can be precision value to express splitted shipping."
                      }
                    },
                    "required": [
                      "id",
                      "publish_id",
                      "good_id",
                      "stock_id",
                      "quantity"
                    ],
                    "description": "Which stocks are delivered.\n\n`IShoppingDeliveryPiece` is a subsidiary entity of {@link IShoppingDelivery },\ndescribing how much quantity is delivered for each\n{@link IShoppingSaleUnitStock stock} in {@link IShoppingOrder }.\n\nFor reference, as an order can be delivered in multiple times due to volume\nor weight problem, it is possible to have multiple `IShoppingDeliveryPiece`\nrecords for a single stock."
                  },
                  "minItems": 1,
                  "title": "List of pieces of the delivery",
                  "description": "List of pieces of the delivery."
                },
                "shippers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "company": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "mobile": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "company",
                      "name",
                      "mobile"
                    ]
                  },
                  "title": "List of shippers of the delivery",
                  "description": "List of shippers of the delivery."
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "none",
                    "underway",
                    "preparing",
                    "manufacturing",
                    "shipping",
                    "delivering",
                    "arrived"
                  ],
                  "description": "State of delivery\n\n- `none`: No delivery or journey record\n- `underway`: Some pieces are over preparing, but others are not\n- `preparing`: At least preparing\n- `manufacturing`: At least manufacturing\n- `shipping`: At least shipping\n- `delivering`: At least delivering\n- `arrived`: Every pieces are arrived"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the record",
                  "description": "Creation time of the record."
                }
              },
              "required": [
                "id",
                "seller",
                "journeys",
                "pieces",
                "shippers",
                "state",
                "created_at"
              ],
              "description": "Delivery information.\n\nWhen delivering {@link IShoppingOrderGood goods} to\n{@link IShoppingCustomer customer}, {@link IShoppingSeller seller} can deliver\nmultiple {@link IShoppingSaleUnitStock stocks}, goods at once. Also, it is\npossible to deliver a stock or good in multiple times due to physical restriction\nlike volume or weight problem.\n\nAs you can see from above, the relationship between delivery with\n{@link IShoppingOrder order} (or {@link IShoppingOrderGood good}) is not 1: 1 or\nN: 1, but M: N. Entity `IShoppingDelivery` has been designed to represent such\nrelationship, by referencing target stocks or goods through subsidiary entity\n{@link IShoppingDeliveryPiece }.\n\nAlso, delivery does not end with only one step. It has multiple processes like\nmanufacturing, planning, shipping and delivering. Those steps are represented by\nanother subsidiary entity {@link IShoppingDeliveryJourney }."
            },
            "title": "List of deliveries",
            "description": "List of deliveries.\n\nAn {@link IShoppingOrder order} can be delivered in multiple times.\nOf course, the opposite case is also possible, that a\n{@link IShoppingDelivery delivery} can be composed of multiple orders."
          },
          "state": {
            "type": "string",
            "enum": [
              "none",
              "underway",
              "preparing",
              "manufacturing",
              "shipping",
              "delivering",
              "arrived"
            ],
            "description": "State of delivery\n\n- `none`: No delivery or journey record\n- `underway`: Some pieces are over preparing, but others are not\n- `preparing`: At least preparing\n- `manufacturing`: At least manufacturing\n- `shipping`: At least shipping\n- `delivering`: At least delivering\n- `arrived`: Every pieces are arrived"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the record",
            "description": "Creation time of the record."
          },
          "paid_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Time when the order was paid",
            "description": "Time when the order was paid."
          },
          "cancelled_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Time when the payment was cancelled",
            "description": "Time when the payment was cancelled."
          },
          "address": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number to contact",
                "description": "Mobile number to contact."
              },
              "name": {
                "type": "string",
                "title": "Representative name of the address",
                "description": "Representative name of the address.\n\nSometimes be receiver's name, and sometimes be place name."
              },
              "country": {
                "type": "string",
                "title": "Country name",
                "description": "Country name."
              },
              "province": {
                "type": "string",
                "title": "Province name",
                "description": "Province name."
              },
              "city": {
                "type": "string",
                "title": "City name",
                "description": "City name."
              },
              "department": {
                "type": "string",
                "title": "Department name",
                "description": "Department name."
              },
              "possession": {
                "type": "string",
                "title": "Detailed address containing street name, building number, and room number",
                "description": "Detailed address containing street name, building number, and room number."
              },
              "zip_code": {
                "type": "string",
                "title": "Zip code, or postal code",
                "description": "Zip code, or postal code."
              },
              "special_note": {
                "type": "string",
                "nullable": true,
                "title": "Special description if required",
                "description": "Special description if required."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name",
              "country",
              "province",
              "city",
              "department",
              "possession",
              "zip_code",
              "special_note"
            ],
            "description": "The address information."
          }
        },
        "required": [
          "deliveries",
          "state",
          "id",
          "created_at",
          "paid_at",
          "cancelled_at",
          "address"
        ],
        "description": "Order completion and payment information.\n\n`IShoppingOrderPublish` is an entity that embodies the series of processes\nin which a {@link IShoppingCustomer customer} pays for his or her\n{@link IShoppingOrder order}, thereby completing the order. And only after\nthe order is {@link paid_at completed}, can the {@link IShoppingSeller seller}\nrecognize that the customer has purchased his product.\n\nBy the way, please note that just because the `IShoppingOrderPublish` record\nexists, it does not mean that the payment has been completed. Of course, with\n\"credit cards\" and \"Google Pay\", payment application and payment occur at the\nsame time. However, there are some cases where payment is made after the\npayment application, such as \"bank transfer\" or \"virtual account payment\".\nTherefore, to see the completion of payment, be sure to check the\n{@link paid_at } property.\n\nIn addition, even after payment has been made, there may be cases where it is\nsuddenly cancelled, so please be aware of this as well."
      },
      "description": "Publish an order.\n\n{@link IShoppingOrderPublish Publish} an {@link IShoppingOrder order} that\nhas been applied by the {@link IShoppingCustomer } with\n{@link IShoppingAddress address} to delivery and payment information gotten\nfrom the payment vendor system.\n\nIf the order has been discounted for entire order price, then no need\nto send payment vendor info. Instead, only address info is required.\n\nAlso, the payment time can be different with the publish time. For example,\nif the payment method is manual bank account transfer, then the payment\nwould be delayed until the customer actually transfer the money. In that\ncase, {@link IShoppingOrderPublish.paid_at } would be `null` value, so\nthat you have to check it after calling this publish function."
    },
    {
      "method": "delete",
      "path": "/shoppings/customers/orders/{orderId}/publish",
      "name": "shoppings_customers_orders_publish_eraseByOrderid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "orderId": {
              "type": "string",
              "format": "uuid",
              "description": "Target order's "
            }
          }
        }
      ],
      "description": "Cancel the publish (payment).\n\nCancel payment of an {@link IShoppingOrder order} that has been\n{@link IShoppingOrderPublish published}.\n\nIf target publish's payment method is manual bank account transfer,\nthen it would be cancelled directly. If not, then payment cancel\nrequest would be sent to the payment vendor system."
    },
    {
      "method": "post",
      "path": "/shoppings/customers/sales/{saleId}/questions/{inquiryId}/comments",
      "name": "shoppings_customers_sales_questions_comments_postBySaleidAndInquiryid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "body",
                "files"
              ],
              "description": "Creation information of the comment."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "administrator"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "seller"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "customer"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                        "title": "Citizen information",
                        "nullable": true
                      },
                      "seller": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Seller information.\n\nIf the member also signed up as a seller.",
                        "title": "Seller information",
                        "nullable": true
                      },
                      "administrator": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                        "title": "Administrator information",
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "citizen",
                      "seller",
                      "administrator",
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Membership information.\n\nIf the customer has joined as a member.",
                    "title": "Membership information",
                    "nullable": true
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "channel": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "code": {
                        "type": "string",
                        "title": "Identifier code",
                        "description": "Identifier code."
                      },
                      "name": {
                        "type": "string",
                        "title": "Name of the channel",
                        "description": "Name of the channel."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "code",
                      "name"
                    ],
                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                  },
                  "external_user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen activation info.",
                        "title": "Citizen activation info",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                      },
                      "application": {
                        "type": "string",
                        "title": "Identifier code of the external service",
                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                      },
                      "uid": {
                        "type": "string",
                        "title": "Identifier key of external user from the external system",
                        "description": "Identifier key of external user from the external system."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname of external user in the external system",
                        "description": "Nickname of external user in the external system."
                      },
                      "data": {
                        "description": "Additional information about external user from the external\nsystem."
                      }
                    },
                    "required": [
                      "id",
                      "citizen",
                      "created_at",
                      "application",
                      "uid",
                      "nickname",
                      "data"
                    ],
                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                    "title": "External user information",
                    "nullable": true
                  },
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "title": "Connection address",
                    "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                  },
                  "referrer": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "title": "Referrer address",
                    "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                  },
                  "ip": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "ipv4"
                      },
                      {
                        "type": "string",
                        "format": "ipv6"
                      }
                    ],
                    "title": "Connection IP Address",
                    "description": "Connection IP Address."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of the connection record",
                    "description": "Creation time of the connection record."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "citizen",
                  "id",
                  "channel",
                  "external_user",
                  "href",
                  "referrer",
                  "ip",
                  "created_at"
                ],
                "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "body",
                "files"
              ],
              "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
      },
      "description": "Create an inquiry comment.\n\nCreate an {@link IShoppingSaleInquiryComment inquiry comment} of a\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\ncreate an inquiry comment to your own {@link IShoppingSale sale}'s inquiry.\nOtherwise, you can create an inquiry comment to every inquiries of the sales."
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/sales/{saleId}/questions/{inquiryId}/comments",
      "name": "shoppings_customers_sales_questions_comments_patchBySaleidAndInquiryid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of the comments with pagination and searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "writer": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "administrator"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "channel": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "code": {
                                  "type": "string",
                                  "title": "Identifier code",
                                  "description": "Identifier code."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of the channel",
                                  "description": "Name of the channel."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "code",
                                "name"
                              ],
                              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                            },
                            "external_user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "citizen": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "title": "Primary Key",
                                      "description": "Primary Key."
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "Creation time of record",
                                      "description": "Creation time of record."
                                    },
                                    "mobile": {
                                      "type": "string",
                                      "pattern": "^[0-9]*$",
                                      "title": "Mobile number",
                                      "description": "Mobile number."
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen activation info.",
                                  "title": "Citizen activation info",
                                  "nullable": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                                },
                                "application": {
                                  "type": "string",
                                  "title": "Identifier code of the external service",
                                  "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                                },
                                "uid": {
                                  "type": "string",
                                  "title": "Identifier key of external user from the external system",
                                  "description": "Identifier key of external user from the external system."
                                },
                                "nickname": {
                                  "type": "string",
                                  "title": "Nickname of external user in the external system",
                                  "description": "Nickname of external user in the external system."
                                },
                                "data": {
                                  "description": "Additional information about external user from the external\nsystem."
                                }
                              },
                              "required": [
                                "id",
                                "citizen",
                                "created_at",
                                "application",
                                "uid",
                                "nickname",
                                "data"
                              ],
                              "description": "External user information.\n\nWhen the customer has come frome an external service.",
                              "title": "External user information",
                              "nullable": true
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "title": "Connection address",
                              "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                            },
                            "referrer": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true,
                              "title": "Referrer address",
                              "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                            },
                            "ip": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "format": "ipv4"
                                },
                                {
                                  "type": "string",
                                  "format": "ipv6"
                                }
                              ],
                              "title": "Connection IP Address",
                              "description": "Connection IP Address."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of the connection record",
                              "description": "Creation time of the connection record."
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "external_user",
                            "href",
                            "referrer",
                            "ip",
                            "created_at"
                          ],
                          "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "customer",
                        "citizen",
                        "id",
                        "created_at"
                      ],
                      "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "seller"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "channel": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "code": {
                                  "type": "string",
                                  "title": "Identifier code",
                                  "description": "Identifier code."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of the channel",
                                  "description": "Name of the channel."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "code",
                                "name"
                              ],
                              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                            },
                            "external_user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "citizen": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "title": "Primary Key",
                                      "description": "Primary Key."
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "Creation time of record",
                                      "description": "Creation time of record."
                                    },
                                    "mobile": {
                                      "type": "string",
                                      "pattern": "^[0-9]*$",
                                      "title": "Mobile number",
                                      "description": "Mobile number."
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen activation info.",
                                  "title": "Citizen activation info",
                                  "nullable": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                                },
                                "application": {
                                  "type": "string",
                                  "title": "Identifier code of the external service",
                                  "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                                },
                                "uid": {
                                  "type": "string",
                                  "title": "Identifier key of external user from the external system",
                                  "description": "Identifier key of external user from the external system."
                                },
                                "nickname": {
                                  "type": "string",
                                  "title": "Nickname of external user in the external system",
                                  "description": "Nickname of external user in the external system."
                                },
                                "data": {
                                  "description": "Additional information about external user from the external\nsystem."
                                }
                              },
                              "required": [
                                "id",
                                "citizen",
                                "created_at",
                                "application",
                                "uid",
                                "nickname",
                                "data"
                              ],
                              "description": "External user information.\n\nWhen the customer has come frome an external service.",
                              "title": "External user information",
                              "nullable": true
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "title": "Connection address",
                              "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                            },
                            "referrer": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true,
                              "title": "Referrer address",
                              "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                            },
                            "ip": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "format": "ipv4"
                                },
                                {
                                  "type": "string",
                                  "format": "ipv6"
                                }
                              ],
                              "title": "Connection IP Address",
                              "description": "Connection IP Address."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of the connection record",
                              "description": "Creation time of the connection record."
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "external_user",
                            "href",
                            "referrer",
                            "ip",
                            "created_at"
                          ],
                          "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "customer",
                        "citizen",
                        "id",
                        "created_at"
                      ],
                      "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "customer"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "citizen": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "mobile": {
                                  "type": "string",
                                  "pattern": "^[0-9]*$",
                                  "title": "Mobile number",
                                  "description": "Mobile number."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                              "title": "Citizen information",
                              "nullable": true
                            },
                            "seller": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation tmie of record",
                                  "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                                }
                              },
                              "required": [
                                "id",
                                "created_at"
                              ],
                              "description": "Seller information.\n\nIf the member also signed up as a seller.",
                              "title": "Seller information",
                              "nullable": true
                            },
                            "administrator": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                                }
                              },
                              "required": [
                                "id",
                                "created_at"
                              ],
                              "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                              "title": "Administrator information",
                              "nullable": true
                            },
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "citizen",
                            "seller",
                            "administrator",
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Membership information.\n\nIf the customer has joined as a member.",
                          "title": "Membership information",
                          "nullable": true
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "channel": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "code": {
                              "type": "string",
                              "title": "Identifier code",
                              "description": "Identifier code."
                            },
                            "name": {
                              "type": "string",
                              "title": "Name of the channel",
                              "description": "Name of the channel."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "code",
                            "name"
                          ],
                          "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                        },
                        "external_user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "citizen": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "mobile": {
                                  "type": "string",
                                  "pattern": "^[0-9]*$",
                                  "title": "Mobile number",
                                  "description": "Mobile number."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen activation info.",
                              "title": "Citizen activation info",
                              "nullable": true
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                            },
                            "application": {
                              "type": "string",
                              "title": "Identifier code of the external service",
                              "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                            },
                            "uid": {
                              "type": "string",
                              "title": "Identifier key of external user from the external system",
                              "description": "Identifier key of external user from the external system."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname of external user in the external system",
                              "description": "Nickname of external user in the external system."
                            },
                            "data": {
                              "description": "Additional information about external user from the external\nsystem."
                            }
                          },
                          "required": [
                            "id",
                            "citizen",
                            "created_at",
                            "application",
                            "uid",
                            "nickname",
                            "data"
                          ],
                          "description": "External user information.\n\nWhen the customer has come frome an external service.",
                          "title": "External user information",
                          "nullable": true
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "title": "Connection address",
                          "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                        },
                        "referrer": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true,
                          "title": "Referrer address",
                          "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                        },
                        "ip": {
                          "oneOf": [
                            {
                              "type": "string",
                              "format": "ipv4"
                            },
                            {
                              "type": "string",
                              "format": "ipv6"
                            }
                          ],
                          "title": "Connection IP Address",
                          "description": "Connection IP Address."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of the connection record",
                          "description": "Creation time of the connection record."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "citizen",
                        "id",
                        "channel",
                        "external_user",
                        "href",
                        "referrer",
                        "ip",
                        "created_at"
                      ],
                      "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                    }
                  ]
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "parent_id": {
                  "type": "string",
                  "format": "uuid",
                  "nullable": true,
                  "title": "Parent comment's ID",
                  "description": "Parent comment's ID."
                },
                "snapshots": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of snapshot record",
                        "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                      },
                      "format": {
                        "type": "string",
                        "enum": [
                          "html",
                          "md",
                          "txt"
                        ]
                      },
                      "body": {
                        "type": "string",
                        "title": "Content body of comment",
                        "description": "Content body of comment."
                      },
                      "files": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 255,
                              "title": "File name, except extension",
                              "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                            },
                            "extension": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 8,
                              "nullable": true,
                              "title": "Extension",
                              "description": "Extension.\n\nPossible to omit like `README` case."
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "title": "URL path of the real file",
                              "description": "URL path of the real file."
                            }
                          },
                          "required": [
                            "name",
                            "extension",
                            "url"
                          ]
                        },
                        "title": "List of attachment files",
                        "description": "List of attachment files."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "format",
                      "body",
                      "files"
                    ],
                    "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
                  },
                  "minItems": 1,
                  "title": "List of snapshot contents",
                  "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of comment",
                  "description": "Creation time of comment."
                }
              },
              "required": [
                "writer",
                "id",
                "parent_id",
                "snapshots",
                "created_at"
              ],
              "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every inquiry comments.\n\nList up every {@link IShoppingSaleInquiryComment inquiry comments} of a\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}\nwith {@link IPage pagination}.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingSaleInquiryComment.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleInquiryComment.IRequest.sort sort condition}.\n\nBy the way, if you're a {@link IShoppingSeller seller}, you can only access\nto the your own {@link IShoppingSale sale}'s inquiries. Otherwise, you\ncan access to every inquiries of the sales."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/sales/{saleId}/questions/{inquiryId}/comments/{id}",
      "name": "shoppings_customers_sales_questions_comments_getBySaleidAndInquiryidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry comment's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "administrator"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "seller"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "customer"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                        "title": "Citizen information",
                        "nullable": true
                      },
                      "seller": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Seller information.\n\nIf the member also signed up as a seller.",
                        "title": "Seller information",
                        "nullable": true
                      },
                      "administrator": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                        "title": "Administrator information",
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "citizen",
                      "seller",
                      "administrator",
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Membership information.\n\nIf the customer has joined as a member.",
                    "title": "Membership information",
                    "nullable": true
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "channel": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "code": {
                        "type": "string",
                        "title": "Identifier code",
                        "description": "Identifier code."
                      },
                      "name": {
                        "type": "string",
                        "title": "Name of the channel",
                        "description": "Name of the channel."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "code",
                      "name"
                    ],
                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                  },
                  "external_user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen activation info.",
                        "title": "Citizen activation info",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                      },
                      "application": {
                        "type": "string",
                        "title": "Identifier code of the external service",
                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                      },
                      "uid": {
                        "type": "string",
                        "title": "Identifier key of external user from the external system",
                        "description": "Identifier key of external user from the external system."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname of external user in the external system",
                        "description": "Nickname of external user in the external system."
                      },
                      "data": {
                        "description": "Additional information about external user from the external\nsystem."
                      }
                    },
                    "required": [
                      "id",
                      "citizen",
                      "created_at",
                      "application",
                      "uid",
                      "nickname",
                      "data"
                    ],
                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                    "title": "External user information",
                    "nullable": true
                  },
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "title": "Connection address",
                    "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                  },
                  "referrer": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "title": "Referrer address",
                    "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                  },
                  "ip": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "ipv4"
                      },
                      {
                        "type": "string",
                        "format": "ipv6"
                      }
                    ],
                    "title": "Connection IP Address",
                    "description": "Connection IP Address."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of the connection record",
                    "description": "Creation time of the connection record."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "citizen",
                  "id",
                  "channel",
                  "external_user",
                  "href",
                  "referrer",
                  "ip",
                  "created_at"
                ],
                "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "body",
                "files"
              ],
              "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
      },
      "description": "Get an inquiry comment info.\n\nGet a detailed {@link IShoppingSaleInquiryComment inquiry comment}\ninformation of a {@link IShoppingSaleQuestion question} or\n{@link IShoppingSaleReview review}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s inquiry comment.\nOtherwise, you can access to every inquiry comments of the sales."
    },
    {
      "method": "put",
      "path": "/shoppings/customers/sales/{saleId}/questions/{inquiryId}/comments/{id}",
      "name": "shoppings_customers_sales_questions_comments_putBySaleidAndInquiryidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry comment's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "body",
                "files"
              ],
              "description": "Creation information of the comment."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
          },
          "format": {
            "type": "string",
            "enum": [
              "html",
              "md",
              "txt"
            ]
          },
          "body": {
            "type": "string",
            "title": "Content body of comment",
            "description": "Content body of comment."
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "title": "File name, except extension",
                  "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                },
                "extension": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 8,
                  "nullable": true,
                  "title": "Extension",
                  "description": "Extension.\n\nPossible to omit like `README` case."
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "title": "URL path of the real file",
                  "description": "URL path of the real file."
                }
              },
              "required": [
                "name",
                "extension",
                "url"
              ]
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "body",
          "files"
        ],
        "description": "Snapshot content of the comment."
      },
      "description": "Update an inquiry comment.\n\nUpdate an {@link IShoppingSaleInquiryComment inquiry comment} to a specific\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}.\n\nBy the way, as is the general policy of this shopping mall regarding\ncomments, modifying a comment does not actually change the existing content.\nModified content is accumulated and recorded in the existing comment record\nas a new {@link IShoppingSaleInquiryComment.ISnapshot snapshot}. And this\nis made public to everyone, who can read this inquiry comment.\n\nThis is to prevent customers or sellers from modifying their comments and\nmanipulating the circumstances due to the nature of e-commerce, where\ndisputes easily arise. That is, to preserve evidence."
    },
    {
      "method": "post",
      "path": "/shoppings/customers/sales/{saleId}/questions",
      "name": "shoppings_customers_sales_questions_postBySaleid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "secret": {
                  "type": "boolean",
                  "title": "Whether the question article is secret or not",
                  "description": "Whether the question article is secret or not.\n\nIf secret article, only the writer customer and related seller can see\nthe detailed content."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "secret",
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Creation information of the question."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "boolean",
            "title": "Whether the question article is secret or not",
            "description": "Whether the question article is secret or not.\n\nIf secret article, only the writer customer and related seller can see\nthe detailed content."
          },
          "type": {
            "type": "string",
            "enum": [
              "question"
            ],
            "title": "Type of the derived inquiry",
            "description": "Type of the derived inquiry.\n\n- `question`: {@link IShoppingSaleQuestion }\n- `review`: {@link IShoppingSaleReview }"
          },
          "customer": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer"
                ],
                "title": "Discriminant for the type of customer",
                "description": "Discriminant for the type of customer."
              },
              "member": {
                "type": "object",
                "properties": {
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "seller": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation tmie of record",
                        "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Seller information.\n\nIf the member also signed up as a seller.",
                    "title": "Seller information",
                    "nullable": true
                  },
                  "administrator": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                    "title": "Administrator information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname that uniquely identifies the member",
                    "description": "Nickname that uniquely identifies the member."
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "value": {
                          "type": "string",
                          "format": "email",
                          "title": "Email address value",
                          "description": "Email address value."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        }
                      },
                      "required": [
                        "id",
                        "value",
                        "created_at"
                      ],
                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                    },
                    "title": "List of emails",
                    "description": "List of emails."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                  }
                },
                "required": [
                  "citizen",
                  "seller",
                  "administrator",
                  "id",
                  "nickname",
                  "emails",
                  "created_at"
                ],
                "description": "Membership information.\n\nIf the customer has joined as a member.",
                "title": "Membership information",
                "nullable": true
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                "title": "Citizen information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "type",
              "member",
              "citizen",
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
          },
          "answer": {
            "type": "object",
            "properties": {
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "snapshots": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of snapshot record",
                      "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "html",
                        "md",
                        "txt"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of article",
                      "description": "Title of article."
                    },
                    "body": {
                      "type": "string",
                      "title": "Content body of article",
                      "description": "Content body of article."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "title": "File name, except extension",
                            "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                          },
                          "extension": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8,
                            "nullable": true,
                            "title": "Extension",
                            "description": "Extension.\n\nPossible to omit like `README` case."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "title": "URL path of the real file",
                            "description": "URL path of the real file."
                          }
                        },
                        "required": [
                          "name",
                          "extension",
                          "url"
                        ]
                      },
                      "title": "List of attachment files",
                      "description": "List of attachment files."
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "format",
                    "title",
                    "body",
                    "files"
                  ],
                  "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
                },
                "minItems": 1,
                "title": "List of snapshot contents",
                "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of article",
                "description": "Creation time of article."
              }
            },
            "required": [
              "seller",
              "id",
              "snapshots",
              "created_at"
            ],
            "description": "Formal answer for the inquiry by the seller.",
            "title": "Formal answer for the inquiry by the seller",
            "nullable": true
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "Whether the seller has viewed the inquiry or not",
            "description": "Whether the seller has viewed the inquiry or not."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "secret",
          "type",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "Question about sale snapshot.\n\n`IShoppingSaleQuestion` is a subtype entity of {@link IShoppingSaleInquiry },\nand is used when a {@link IShoppingCustomer customer} wants to ask something\nabout a {@link IShoppingSale sale} ({@link IShoppingSaleSnapshot snapshot} at\nthe time) registered by the {@link IShoppingSeller seller}.\n\nAnd, like most shopping malls, `IShoppingSaleQuestion` also provides\na {@link secret } attribute, allowing you to create a \"secret message\" that can\nonly be viewed by the seller and the customer who wrote the question."
      },
      "description": "Write a question article.\n\nWhen a {@link IShoppingCustomer customer} wants to ask something about\na specific {@link IShoppingSale sale}, he/she can ask it by writing a\nnew {@link IShoppingSaleQuestion question article}.\n\nIf the customer does not want to reveal his/her identify and question,\nhe/she can write the question as a secret article. In that case, only\nthe customer and the related {@link IShoppingSeller seller} can see\nthe {@link at detailed content}. Also, such secret question's title and\nwriter name would be masked with `*` characters in the\n{@link index pagiation API}."
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/sales/{saleId}/questions",
      "name": "shoppings_customers_sales_questions_patchBySaleid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "answered": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "title": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "title_or_body": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at",
                      "-nickname",
                      "-answered_at",
                      "-title",
                      "-updated_at",
                      "+nickname",
                      "+answered_at",
                      "+title",
                      "+updated_at"
                    ]
                  },
                  "title": "Sorting conditions",
                  "description": "Sorting conditions."
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of summarized informations with pagination searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "secret": {
                  "type": "boolean",
                  "title": "Whether the question article is secret or not",
                  "description": "Whether the question article is secret or not.\n\nIf secret article, only the writer customer and related seller can see\nthe detailed content."
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "customer"
                      ],
                      "title": "Discriminant for the type of customer",
                      "description": "Discriminant for the type of customer."
                    },
                    "member": {
                      "type": "object",
                      "properties": {
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "seller": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\nIf the member also signed up as a seller.",
                          "title": "Seller information",
                          "nullable": true
                        },
                        "administrator": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                          "title": "Administrator information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname that uniquely identifies the member",
                          "description": "Nickname that uniquely identifies the member."
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "value": {
                                "type": "string",
                                "format": "email",
                                "title": "Email address value",
                                "description": "Email address value."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "created_at"
                            ],
                            "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                          },
                          "title": "List of emails",
                          "description": "List of emails."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                        }
                      },
                      "required": [
                        "citizen",
                        "seller",
                        "administrator",
                        "id",
                        "nickname",
                        "emails",
                        "created_at"
                      ],
                      "description": "Membership information.\n\nIf the customer has joined as a member.",
                      "title": "Membership information",
                      "nullable": true
                    },
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                      "title": "Citizen information",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "code": {
                          "type": "string",
                          "title": "Identifier code",
                          "description": "Identifier code."
                        },
                        "name": {
                          "type": "string",
                          "title": "Name of the channel",
                          "description": "Name of the channel."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ],
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                    },
                    "external_user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen activation info.",
                          "title": "Citizen activation info",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                        },
                        "application": {
                          "type": "string",
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                        },
                        "uid": {
                          "type": "string",
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system."
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "application",
                        "uid",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "title": "External user information",
                      "nullable": true
                    },
                    "href": {
                      "type": "string",
                      "format": "uri",
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                    },
                    "referrer": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true,
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                    },
                    "ip": {
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ],
                      "title": "Connection IP Address",
                      "description": "Connection IP Address."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record."
                    }
                  },
                  "required": [
                    "type",
                    "member",
                    "citizen",
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ],
                  "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                },
                "answer": {
                  "type": "object",
                  "properties": {
                    "seller": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "id",
                        "created_at"
                      ],
                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the last snapshot",
                      "description": "Title of the last snapshot."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the article",
                      "description": "Creation time of the article."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Modification time of the article",
                      "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                    }
                  },
                  "required": [
                    "seller",
                    "id",
                    "title",
                    "created_at",
                    "updated_at"
                  ],
                  "title": "Formal answer for the inquiry by the seller",
                  "description": "Formal answer for the inquiry by the seller.",
                  "nullable": true
                },
                "read_by_seller": {
                  "type": "boolean",
                  "title": "Whether the seller has viewed the inquiry or not",
                  "description": "Whether the seller has viewed the inquiry or not."
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the last snapshot",
                  "description": "Title of the last snapshot."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the article",
                  "description": "Creation time of the article."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Modification time of the article",
                  "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                }
              },
              "required": [
                "secret",
                "customer",
                "answer",
                "read_by_seller",
                "id",
                "title",
                "created_at",
                "updated_at"
              ],
              "description": "Summarized information of the question."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every summarized questions.\n\nList up every {@link IShoppingSaleQuestion.ISummary summarized questions} of a\n{@link IShoppingSale sale}.\n\nAs you can see, returned questions are summarized, not detailed. If you want\nto get the detailed information of a question, use {@link adridges } function\nor {@link at } function for each article.\n\nAlso, returned question has {@link IShoppingSaleQuestion.ISummary.answer }\nproperty which means the formal answer from the {@link IShoppingSeller }.\nAdditionally, returned question has another special property\n{@link IShoppingSaleQuestion.ISummary.secret } with masking to other\nprincple properties, and it means only related actors can {@link at read}\nthe question.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s questions. Otherwise,\nyou can access to every questions of the sales.\n\nBy the way, if you want, you can limit the result by configuring\n{@link IShoppingSaleQuestion.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleQuestion.IRequest.sort sort condition}."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/sales/{saleId}/questions/{id}",
      "name": "shoppings_customers_sales_questions_getBySaleidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target question's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "boolean",
            "title": "Whether the question article is secret or not",
            "description": "Whether the question article is secret or not.\n\nIf secret article, only the writer customer and related seller can see\nthe detailed content."
          },
          "type": {
            "type": "string",
            "enum": [
              "question"
            ],
            "title": "Type of the derived inquiry",
            "description": "Type of the derived inquiry.\n\n- `question`: {@link IShoppingSaleQuestion }\n- `review`: {@link IShoppingSaleReview }"
          },
          "customer": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer"
                ],
                "title": "Discriminant for the type of customer",
                "description": "Discriminant for the type of customer."
              },
              "member": {
                "type": "object",
                "properties": {
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "seller": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation tmie of record",
                        "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Seller information.\n\nIf the member also signed up as a seller.",
                    "title": "Seller information",
                    "nullable": true
                  },
                  "administrator": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                    "title": "Administrator information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname that uniquely identifies the member",
                    "description": "Nickname that uniquely identifies the member."
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "value": {
                          "type": "string",
                          "format": "email",
                          "title": "Email address value",
                          "description": "Email address value."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        }
                      },
                      "required": [
                        "id",
                        "value",
                        "created_at"
                      ],
                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                    },
                    "title": "List of emails",
                    "description": "List of emails."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                  }
                },
                "required": [
                  "citizen",
                  "seller",
                  "administrator",
                  "id",
                  "nickname",
                  "emails",
                  "created_at"
                ],
                "description": "Membership information.\n\nIf the customer has joined as a member.",
                "title": "Membership information",
                "nullable": true
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                "title": "Citizen information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "type",
              "member",
              "citizen",
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
          },
          "answer": {
            "type": "object",
            "properties": {
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "snapshots": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of snapshot record",
                      "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "html",
                        "md",
                        "txt"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of article",
                      "description": "Title of article."
                    },
                    "body": {
                      "type": "string",
                      "title": "Content body of article",
                      "description": "Content body of article."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "title": "File name, except extension",
                            "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                          },
                          "extension": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8,
                            "nullable": true,
                            "title": "Extension",
                            "description": "Extension.\n\nPossible to omit like `README` case."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "title": "URL path of the real file",
                            "description": "URL path of the real file."
                          }
                        },
                        "required": [
                          "name",
                          "extension",
                          "url"
                        ]
                      },
                      "title": "List of attachment files",
                      "description": "List of attachment files."
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "format",
                    "title",
                    "body",
                    "files"
                  ],
                  "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
                },
                "minItems": 1,
                "title": "List of snapshot contents",
                "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of article",
                "description": "Creation time of article."
              }
            },
            "required": [
              "seller",
              "id",
              "snapshots",
              "created_at"
            ],
            "description": "Formal answer for the inquiry by the seller.",
            "title": "Formal answer for the inquiry by the seller",
            "nullable": true
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "Whether the seller has viewed the inquiry or not",
            "description": "Whether the seller has viewed the inquiry or not."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "secret",
          "type",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "Question about sale snapshot.\n\n`IShoppingSaleQuestion` is a subtype entity of {@link IShoppingSaleInquiry },\nand is used when a {@link IShoppingCustomer customer} wants to ask something\nabout a {@link IShoppingSale sale} ({@link IShoppingSaleSnapshot snapshot} at\nthe time) registered by the {@link IShoppingSeller seller}.\n\nAnd, like most shopping malls, `IShoppingSaleQuestion` also provides\na {@link secret } attribute, allowing you to create a \"secret message\" that can\nonly be viewed by the seller and the customer who wrote the question."
      },
      "description": "Get a question info.\n\nGet a detailed {@link IShoppingSaleQuestion question} information of a\n{@link IShoppingSale sale}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s question. Otherwise\nyou are a {@link IShoppingCustomer customer}, you can access to every\nquestions of the sales except the {@link IShoppingSaleQuestion.secret }\nvalue is `false`."
    },
    {
      "method": "post",
      "path": "/shoppings/customers/sales/{saleId}/questions/{id}",
      "name": "shoppings_customers_sales_questions_postBySaleidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target question's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Creation information of the article."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
          },
          "format": {
            "type": "string",
            "enum": [
              "html",
              "md",
              "txt"
            ]
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "title": "File name, except extension",
                  "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                },
                "extension": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 8,
                  "nullable": true,
                  "title": "Extension",
                  "description": "Extension.\n\nPossible to omit like `README` case."
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "title": "URL path of the real file",
                  "description": "URL path of the real file."
                }
              },
              "required": [
                "name",
                "extension",
                "url"
              ]
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
      },
      "description": "Update a question.\n\nUpdate a {@link IShoppingSaleQuestion question}'s content.\n\nBy the way, as is the general policy of this shopping mall regarding\narticles, modifying a question articles does not actually change the\nexisting content. Modified content is accumulated and recorded in the\nexisting article record as a new\n{@link IShoppingSaleQuestion.ISnapshot snapshot}. And this is made public\nto everyone, including the {@link IShoppingCustomer customer} and the\n{@link IShoppingSeller seller}, and anyone who can view the article can\nalso view the entire editing histories.\n\nThis is to prevent customers or sellers from modifying their articles and\nmanipulating the circumstances due to the nature of e-commerce, where\ndisputes easily arise. That is, to preserve evidence."
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/sales/{saleId}/questions/abridges",
      "name": "shoppings_customers_sales_questions_abridges_patchBySaleid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "answered": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "title": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "title_or_body": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at",
                      "-nickname",
                      "-answered_at",
                      "-title",
                      "-updated_at",
                      "+nickname",
                      "+answered_at",
                      "+title",
                      "+updated_at"
                    ]
                  },
                  "title": "Sorting conditions",
                  "description": "Sorting conditions."
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of summarized informations with pagination searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "secret": {
                  "type": "boolean",
                  "title": "Whether the question article is secret or not",
                  "description": "Whether the question article is secret or not.\n\nIf secret article, only the writer customer and related seller can see\nthe detailed content."
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "customer"
                      ],
                      "title": "Discriminant for the type of customer",
                      "description": "Discriminant for the type of customer."
                    },
                    "member": {
                      "type": "object",
                      "properties": {
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "seller": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\nIf the member also signed up as a seller.",
                          "title": "Seller information",
                          "nullable": true
                        },
                        "administrator": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                          "title": "Administrator information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname that uniquely identifies the member",
                          "description": "Nickname that uniquely identifies the member."
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "value": {
                                "type": "string",
                                "format": "email",
                                "title": "Email address value",
                                "description": "Email address value."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "created_at"
                            ],
                            "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                          },
                          "title": "List of emails",
                          "description": "List of emails."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                        }
                      },
                      "required": [
                        "citizen",
                        "seller",
                        "administrator",
                        "id",
                        "nickname",
                        "emails",
                        "created_at"
                      ],
                      "description": "Membership information.\n\nIf the customer has joined as a member.",
                      "title": "Membership information",
                      "nullable": true
                    },
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                      "title": "Citizen information",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "code": {
                          "type": "string",
                          "title": "Identifier code",
                          "description": "Identifier code."
                        },
                        "name": {
                          "type": "string",
                          "title": "Name of the channel",
                          "description": "Name of the channel."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ],
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                    },
                    "external_user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen activation info.",
                          "title": "Citizen activation info",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                        },
                        "application": {
                          "type": "string",
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                        },
                        "uid": {
                          "type": "string",
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system."
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "application",
                        "uid",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "title": "External user information",
                      "nullable": true
                    },
                    "href": {
                      "type": "string",
                      "format": "uri",
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                    },
                    "referrer": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true,
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                    },
                    "ip": {
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ],
                      "title": "Connection IP Address",
                      "description": "Connection IP Address."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record."
                    }
                  },
                  "required": [
                    "type",
                    "member",
                    "citizen",
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ],
                  "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                },
                "answer": {
                  "type": "object",
                  "properties": {
                    "seller": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "id",
                        "created_at"
                      ],
                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the last snapshot",
                      "description": "Title of the last snapshot."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the article",
                      "description": "Creation time of the article."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Modification time of the article",
                      "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "html",
                        "md",
                        "txt"
                      ]
                    },
                    "body": {
                      "type": "string",
                      "title": "Content body of article",
                      "description": "Content body of article."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "title": "File name, except extension",
                            "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                          },
                          "extension": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8,
                            "nullable": true,
                            "title": "Extension",
                            "description": "Extension.\n\nPossible to omit like `README` case."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "title": "URL path of the real file",
                            "description": "URL path of the real file."
                          }
                        },
                        "required": [
                          "name",
                          "extension",
                          "url"
                        ]
                      },
                      "title": "List of attachment files",
                      "description": "List of attachment files."
                    }
                  },
                  "required": [
                    "seller",
                    "id",
                    "title",
                    "created_at",
                    "updated_at",
                    "format",
                    "body",
                    "files"
                  ],
                  "title": "Formal answer for the inquiry by the seller",
                  "description": "Formal answer for the inquiry by the seller.",
                  "nullable": true
                },
                "read_by_seller": {
                  "type": "boolean",
                  "title": "Whether the seller has viewed the inquiry or not",
                  "description": "Whether the seller has viewed the inquiry or not."
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the last snapshot",
                  "description": "Title of the last snapshot."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the article",
                  "description": "Creation time of the article."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Modification time of the article",
                  "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "secret",
                "customer",
                "answer",
                "read_by_seller",
                "id",
                "title",
                "created_at",
                "updated_at",
                "format",
                "body",
                "files"
              ],
              "description": "Abridged information of the question."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every abridged questions.\n\nList up every {@link IShoppingSaleQuestion.IAbridge abridged questions} of\na {@link IShoppingSale sale}.\n\nAs you can see, returned questions are abridged, not detailed. If you want\nto get the detailed information of a question, use {@link at } function\nfor each article.\n\nAlso, returned question has {@link IShoppingSaleQuestion.IAridge.answer }\nproperty which means the formal answer from the {@link IShoppingSeller }.\nAdditionally, returned question has another special property\n{@link IShoppingSaleQuestion.IAridge.secret } with masking to other\nprincple properties, and it means only related actors can {@link at read}\nthe question.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s questions. Otherwise,\nyou can access to every questions of the sales.\n\nBy the way, if you want, you can limit the result by configuring\n{@link IShoppingSaleQuestion.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleQuestion.IRequest.sort sort condition}."
    },
    {
      "method": "post",
      "path": "/shoppings/customers/sales/{saleId}/reviews/{inquiryId}/comments",
      "name": "shoppings_customers_sales_reviews_comments_postBySaleidAndInquiryid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "body",
                "files"
              ],
              "description": "Creation information of the comment."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "administrator"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "seller"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "customer"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                        "title": "Citizen information",
                        "nullable": true
                      },
                      "seller": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Seller information.\n\nIf the member also signed up as a seller.",
                        "title": "Seller information",
                        "nullable": true
                      },
                      "administrator": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                        "title": "Administrator information",
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "citizen",
                      "seller",
                      "administrator",
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Membership information.\n\nIf the customer has joined as a member.",
                    "title": "Membership information",
                    "nullable": true
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "channel": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "code": {
                        "type": "string",
                        "title": "Identifier code",
                        "description": "Identifier code."
                      },
                      "name": {
                        "type": "string",
                        "title": "Name of the channel",
                        "description": "Name of the channel."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "code",
                      "name"
                    ],
                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                  },
                  "external_user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen activation info.",
                        "title": "Citizen activation info",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                      },
                      "application": {
                        "type": "string",
                        "title": "Identifier code of the external service",
                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                      },
                      "uid": {
                        "type": "string",
                        "title": "Identifier key of external user from the external system",
                        "description": "Identifier key of external user from the external system."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname of external user in the external system",
                        "description": "Nickname of external user in the external system."
                      },
                      "data": {
                        "description": "Additional information about external user from the external\nsystem."
                      }
                    },
                    "required": [
                      "id",
                      "citizen",
                      "created_at",
                      "application",
                      "uid",
                      "nickname",
                      "data"
                    ],
                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                    "title": "External user information",
                    "nullable": true
                  },
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "title": "Connection address",
                    "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                  },
                  "referrer": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "title": "Referrer address",
                    "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                  },
                  "ip": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "ipv4"
                      },
                      {
                        "type": "string",
                        "format": "ipv6"
                      }
                    ],
                    "title": "Connection IP Address",
                    "description": "Connection IP Address."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of the connection record",
                    "description": "Creation time of the connection record."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "citizen",
                  "id",
                  "channel",
                  "external_user",
                  "href",
                  "referrer",
                  "ip",
                  "created_at"
                ],
                "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "body",
                "files"
              ],
              "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
      },
      "description": "Create an inquiry comment.\n\nCreate an {@link IShoppingSaleInquiryComment inquiry comment} of a\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\ncreate an inquiry comment to your own {@link IShoppingSale sale}'s inquiry.\nOtherwise, you can create an inquiry comment to every inquiries of the sales."
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/sales/{saleId}/reviews/{inquiryId}/comments",
      "name": "shoppings_customers_sales_reviews_comments_patchBySaleidAndInquiryid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of the comments with pagination and searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "writer": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "administrator"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "channel": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "code": {
                                  "type": "string",
                                  "title": "Identifier code",
                                  "description": "Identifier code."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of the channel",
                                  "description": "Name of the channel."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "code",
                                "name"
                              ],
                              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                            },
                            "external_user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "citizen": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "title": "Primary Key",
                                      "description": "Primary Key."
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "Creation time of record",
                                      "description": "Creation time of record."
                                    },
                                    "mobile": {
                                      "type": "string",
                                      "pattern": "^[0-9]*$",
                                      "title": "Mobile number",
                                      "description": "Mobile number."
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen activation info.",
                                  "title": "Citizen activation info",
                                  "nullable": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                                },
                                "application": {
                                  "type": "string",
                                  "title": "Identifier code of the external service",
                                  "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                                },
                                "uid": {
                                  "type": "string",
                                  "title": "Identifier key of external user from the external system",
                                  "description": "Identifier key of external user from the external system."
                                },
                                "nickname": {
                                  "type": "string",
                                  "title": "Nickname of external user in the external system",
                                  "description": "Nickname of external user in the external system."
                                },
                                "data": {
                                  "description": "Additional information about external user from the external\nsystem."
                                }
                              },
                              "required": [
                                "id",
                                "citizen",
                                "created_at",
                                "application",
                                "uid",
                                "nickname",
                                "data"
                              ],
                              "description": "External user information.\n\nWhen the customer has come frome an external service.",
                              "title": "External user information",
                              "nullable": true
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "title": "Connection address",
                              "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                            },
                            "referrer": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true,
                              "title": "Referrer address",
                              "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                            },
                            "ip": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "format": "ipv4"
                                },
                                {
                                  "type": "string",
                                  "format": "ipv6"
                                }
                              ],
                              "title": "Connection IP Address",
                              "description": "Connection IP Address."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of the connection record",
                              "description": "Creation time of the connection record."
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "external_user",
                            "href",
                            "referrer",
                            "ip",
                            "created_at"
                          ],
                          "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "customer",
                        "citizen",
                        "id",
                        "created_at"
                      ],
                      "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "seller"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "channel": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "code": {
                                  "type": "string",
                                  "title": "Identifier code",
                                  "description": "Identifier code."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of the channel",
                                  "description": "Name of the channel."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "code",
                                "name"
                              ],
                              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                            },
                            "external_user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "citizen": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "title": "Primary Key",
                                      "description": "Primary Key."
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "Creation time of record",
                                      "description": "Creation time of record."
                                    },
                                    "mobile": {
                                      "type": "string",
                                      "pattern": "^[0-9]*$",
                                      "title": "Mobile number",
                                      "description": "Mobile number."
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen activation info.",
                                  "title": "Citizen activation info",
                                  "nullable": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                                },
                                "application": {
                                  "type": "string",
                                  "title": "Identifier code of the external service",
                                  "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                                },
                                "uid": {
                                  "type": "string",
                                  "title": "Identifier key of external user from the external system",
                                  "description": "Identifier key of external user from the external system."
                                },
                                "nickname": {
                                  "type": "string",
                                  "title": "Nickname of external user in the external system",
                                  "description": "Nickname of external user in the external system."
                                },
                                "data": {
                                  "description": "Additional information about external user from the external\nsystem."
                                }
                              },
                              "required": [
                                "id",
                                "citizen",
                                "created_at",
                                "application",
                                "uid",
                                "nickname",
                                "data"
                              ],
                              "description": "External user information.\n\nWhen the customer has come frome an external service.",
                              "title": "External user information",
                              "nullable": true
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "title": "Connection address",
                              "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                            },
                            "referrer": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true,
                              "title": "Referrer address",
                              "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                            },
                            "ip": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "format": "ipv4"
                                },
                                {
                                  "type": "string",
                                  "format": "ipv6"
                                }
                              ],
                              "title": "Connection IP Address",
                              "description": "Connection IP Address."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of the connection record",
                              "description": "Creation time of the connection record."
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "external_user",
                            "href",
                            "referrer",
                            "ip",
                            "created_at"
                          ],
                          "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "customer",
                        "citizen",
                        "id",
                        "created_at"
                      ],
                      "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "customer"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "citizen": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "mobile": {
                                  "type": "string",
                                  "pattern": "^[0-9]*$",
                                  "title": "Mobile number",
                                  "description": "Mobile number."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                              "title": "Citizen information",
                              "nullable": true
                            },
                            "seller": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation tmie of record",
                                  "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                                }
                              },
                              "required": [
                                "id",
                                "created_at"
                              ],
                              "description": "Seller information.\n\nIf the member also signed up as a seller.",
                              "title": "Seller information",
                              "nullable": true
                            },
                            "administrator": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                                }
                              },
                              "required": [
                                "id",
                                "created_at"
                              ],
                              "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                              "title": "Administrator information",
                              "nullable": true
                            },
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "citizen",
                            "seller",
                            "administrator",
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Membership information.\n\nIf the customer has joined as a member.",
                          "title": "Membership information",
                          "nullable": true
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "channel": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "code": {
                              "type": "string",
                              "title": "Identifier code",
                              "description": "Identifier code."
                            },
                            "name": {
                              "type": "string",
                              "title": "Name of the channel",
                              "description": "Name of the channel."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "code",
                            "name"
                          ],
                          "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                        },
                        "external_user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "citizen": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "mobile": {
                                  "type": "string",
                                  "pattern": "^[0-9]*$",
                                  "title": "Mobile number",
                                  "description": "Mobile number."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen activation info.",
                              "title": "Citizen activation info",
                              "nullable": true
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                            },
                            "application": {
                              "type": "string",
                              "title": "Identifier code of the external service",
                              "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                            },
                            "uid": {
                              "type": "string",
                              "title": "Identifier key of external user from the external system",
                              "description": "Identifier key of external user from the external system."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname of external user in the external system",
                              "description": "Nickname of external user in the external system."
                            },
                            "data": {
                              "description": "Additional information about external user from the external\nsystem."
                            }
                          },
                          "required": [
                            "id",
                            "citizen",
                            "created_at",
                            "application",
                            "uid",
                            "nickname",
                            "data"
                          ],
                          "description": "External user information.\n\nWhen the customer has come frome an external service.",
                          "title": "External user information",
                          "nullable": true
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "title": "Connection address",
                          "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                        },
                        "referrer": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true,
                          "title": "Referrer address",
                          "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                        },
                        "ip": {
                          "oneOf": [
                            {
                              "type": "string",
                              "format": "ipv4"
                            },
                            {
                              "type": "string",
                              "format": "ipv6"
                            }
                          ],
                          "title": "Connection IP Address",
                          "description": "Connection IP Address."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of the connection record",
                          "description": "Creation time of the connection record."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "citizen",
                        "id",
                        "channel",
                        "external_user",
                        "href",
                        "referrer",
                        "ip",
                        "created_at"
                      ],
                      "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                    }
                  ]
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "parent_id": {
                  "type": "string",
                  "format": "uuid",
                  "nullable": true,
                  "title": "Parent comment's ID",
                  "description": "Parent comment's ID."
                },
                "snapshots": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of snapshot record",
                        "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                      },
                      "format": {
                        "type": "string",
                        "enum": [
                          "html",
                          "md",
                          "txt"
                        ]
                      },
                      "body": {
                        "type": "string",
                        "title": "Content body of comment",
                        "description": "Content body of comment."
                      },
                      "files": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 255,
                              "title": "File name, except extension",
                              "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                            },
                            "extension": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 8,
                              "nullable": true,
                              "title": "Extension",
                              "description": "Extension.\n\nPossible to omit like `README` case."
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "title": "URL path of the real file",
                              "description": "URL path of the real file."
                            }
                          },
                          "required": [
                            "name",
                            "extension",
                            "url"
                          ]
                        },
                        "title": "List of attachment files",
                        "description": "List of attachment files."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "format",
                      "body",
                      "files"
                    ],
                    "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
                  },
                  "minItems": 1,
                  "title": "List of snapshot contents",
                  "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of comment",
                  "description": "Creation time of comment."
                }
              },
              "required": [
                "writer",
                "id",
                "parent_id",
                "snapshots",
                "created_at"
              ],
              "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every inquiry comments.\n\nList up every {@link IShoppingSaleInquiryComment inquiry comments} of a\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}\nwith {@link IPage pagination}.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingSaleInquiryComment.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleInquiryComment.IRequest.sort sort condition}.\n\nBy the way, if you're a {@link IShoppingSeller seller}, you can only access\nto the your own {@link IShoppingSale sale}'s inquiries. Otherwise, you\ncan access to every inquiries of the sales."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/sales/{saleId}/reviews/{inquiryId}/comments/{id}",
      "name": "shoppings_customers_sales_reviews_comments_getBySaleidAndInquiryidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry comment's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "administrator"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "seller"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "customer"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                        "title": "Citizen information",
                        "nullable": true
                      },
                      "seller": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Seller information.\n\nIf the member also signed up as a seller.",
                        "title": "Seller information",
                        "nullable": true
                      },
                      "administrator": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                        "title": "Administrator information",
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "citizen",
                      "seller",
                      "administrator",
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Membership information.\n\nIf the customer has joined as a member.",
                    "title": "Membership information",
                    "nullable": true
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "channel": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "code": {
                        "type": "string",
                        "title": "Identifier code",
                        "description": "Identifier code."
                      },
                      "name": {
                        "type": "string",
                        "title": "Name of the channel",
                        "description": "Name of the channel."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "code",
                      "name"
                    ],
                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                  },
                  "external_user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen activation info.",
                        "title": "Citizen activation info",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                      },
                      "application": {
                        "type": "string",
                        "title": "Identifier code of the external service",
                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                      },
                      "uid": {
                        "type": "string",
                        "title": "Identifier key of external user from the external system",
                        "description": "Identifier key of external user from the external system."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname of external user in the external system",
                        "description": "Nickname of external user in the external system."
                      },
                      "data": {
                        "description": "Additional information about external user from the external\nsystem."
                      }
                    },
                    "required": [
                      "id",
                      "citizen",
                      "created_at",
                      "application",
                      "uid",
                      "nickname",
                      "data"
                    ],
                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                    "title": "External user information",
                    "nullable": true
                  },
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "title": "Connection address",
                    "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                  },
                  "referrer": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "title": "Referrer address",
                    "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                  },
                  "ip": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "ipv4"
                      },
                      {
                        "type": "string",
                        "format": "ipv6"
                      }
                    ],
                    "title": "Connection IP Address",
                    "description": "Connection IP Address."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of the connection record",
                    "description": "Creation time of the connection record."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "citizen",
                  "id",
                  "channel",
                  "external_user",
                  "href",
                  "referrer",
                  "ip",
                  "created_at"
                ],
                "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "body",
                "files"
              ],
              "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
      },
      "description": "Get an inquiry comment info.\n\nGet a detailed {@link IShoppingSaleInquiryComment inquiry comment}\ninformation of a {@link IShoppingSaleQuestion question} or\n{@link IShoppingSaleReview review}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s inquiry comment.\nOtherwise, you can access to every inquiry comments of the sales."
    },
    {
      "method": "put",
      "path": "/shoppings/customers/sales/{saleId}/reviews/{inquiryId}/comments/{id}",
      "name": "shoppings_customers_sales_reviews_comments_putBySaleidAndInquiryidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry comment's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "body",
                "files"
              ],
              "description": "Creation information of the comment."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
          },
          "format": {
            "type": "string",
            "enum": [
              "html",
              "md",
              "txt"
            ]
          },
          "body": {
            "type": "string",
            "title": "Content body of comment",
            "description": "Content body of comment."
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "title": "File name, except extension",
                  "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                },
                "extension": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 8,
                  "nullable": true,
                  "title": "Extension",
                  "description": "Extension.\n\nPossible to omit like `README` case."
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "title": "URL path of the real file",
                  "description": "URL path of the real file."
                }
              },
              "required": [
                "name",
                "extension",
                "url"
              ]
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "body",
          "files"
        ],
        "description": "Snapshot content of the comment."
      },
      "description": "Update an inquiry comment.\n\nUpdate an {@link IShoppingSaleInquiryComment inquiry comment} to a specific\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}.\n\nBy the way, as is the general policy of this shopping mall regarding\ncomments, modifying a comment does not actually change the existing content.\nModified content is accumulated and recorded in the existing comment record\nas a new {@link IShoppingSaleInquiryComment.ISnapshot snapshot}. And this\nis made public to everyone, who can read this inquiry comment.\n\nThis is to prevent customers or sellers from modifying their comments and\nmanipulating the circumstances due to the nature of e-commerce, where\ndisputes easily arise. That is, to preserve evidence."
    },
    {
      "method": "post",
      "path": "/shoppings/customers/sales/{saleId}/reviews",
      "name": "shoppings_customers_sales_reviews_postBySaleid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "good_id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Target good's {@link IShoppingOrderGood.id }",
                  "description": "Target good's {@link IShoppingOrderGood.id }."
                },
                "score": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "title": "Score of the review",
                  "description": "Score of the review."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "good_id",
                "score",
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Creation information of the review."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "review"
            ],
            "title": "Type of the derived inquiry",
            "description": "Type of the derived inquiry.\n\n- `question`: {@link IShoppingSaleQuestion }\n- `review`: {@link IShoppingSaleReview }"
          },
          "customer": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer"
                ],
                "title": "Discriminant for the type of customer",
                "description": "Discriminant for the type of customer."
              },
              "member": {
                "type": "object",
                "properties": {
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "seller": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation tmie of record",
                        "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Seller information.\n\nIf the member also signed up as a seller.",
                    "title": "Seller information",
                    "nullable": true
                  },
                  "administrator": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                    "title": "Administrator information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname that uniquely identifies the member",
                    "description": "Nickname that uniquely identifies the member."
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "value": {
                          "type": "string",
                          "format": "email",
                          "title": "Email address value",
                          "description": "Email address value."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        }
                      },
                      "required": [
                        "id",
                        "value",
                        "created_at"
                      ],
                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                    },
                    "title": "List of emails",
                    "description": "List of emails."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                  }
                },
                "required": [
                  "citizen",
                  "seller",
                  "administrator",
                  "id",
                  "nickname",
                  "emails",
                  "created_at"
                ],
                "description": "Membership information.\n\nIf the customer has joined as a member.",
                "title": "Membership information",
                "nullable": true
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                "title": "Citizen information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "type",
              "member",
              "citizen",
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
          },
          "answer": {
            "type": "object",
            "properties": {
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "snapshots": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of snapshot record",
                      "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "html",
                        "md",
                        "txt"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of article",
                      "description": "Title of article."
                    },
                    "body": {
                      "type": "string",
                      "title": "Content body of article",
                      "description": "Content body of article."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "title": "File name, except extension",
                            "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                          },
                          "extension": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8,
                            "nullable": true,
                            "title": "Extension",
                            "description": "Extension.\n\nPossible to omit like `README` case."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "title": "URL path of the real file",
                            "description": "URL path of the real file."
                          }
                        },
                        "required": [
                          "name",
                          "extension",
                          "url"
                        ]
                      },
                      "title": "List of attachment files",
                      "description": "List of attachment files."
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "format",
                    "title",
                    "body",
                    "files"
                  ],
                  "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
                },
                "minItems": 1,
                "title": "List of snapshot contents",
                "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of article",
                "description": "Creation time of article."
              }
            },
            "required": [
              "seller",
              "id",
              "snapshots",
              "created_at"
            ],
            "description": "Formal answer for the inquiry by the seller.",
            "title": "Formal answer for the inquiry by the seller",
            "nullable": true
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "Whether the seller has viewed the inquiry or not",
            "description": "Whether the seller has viewed the inquiry or not."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "title": "Score of the review",
                  "description": "Score of the review."
                },
                "id": {
                  "type": "string",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "score",
                "id",
                "created_at",
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Snapshot content of the review article."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "type",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "Reviews for sale snapshots.\n\n`IShoppingSaleReview` is a subtype entity of {@link IShoppingSaleInquiry },\nand is used when a {@link IShoppingCustomer customer} purchases a\n{@link IShoppingSale sale} ({@link IShoppingSaleSnapshot snapshot} at the time)\nregistered by the {@link IShoppingSeller seller} as a product and leaves a\nreview and rating for it.\n\nFor reference, `IShoppingSaleReview` and\n{@link IShoppingOrderGod shopping_order_goods} have a logarithmic relationship\nof N: 1, but this does not mean that customers can continue to write reviews\nfor the same product indefinitely. Wouldn't there be restrictions, such as\nif you write a review once, you can write an additional review a month later?"
      },
      "description": "Write a review article.\n\nWhen a {@link IShoppingCustomer customer} has purchased a specific\n{@link IShoppingSale sale} and get {@link IShoppingDelivery delivered} it,\nhe/she can write a {@link IShoppingSaleReview review} article about the sale.\n\nIf try to write a review article without purchasing or the delivery has not\nbeen completed, 428 unprocessable entity error would be thrown. Also, the\ncustomer can write multiple review articles per an order, but the next\narticle can be written after 2 weeks from the previous article. If not,\n428 unprocessable entity error would be thrown, either."
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/sales/{saleId}/reviews",
      "name": "shoppings_customers_sales_reviews_patchBySaleid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "answered": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "title": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "title_or_body": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "minimum": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maximum": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at",
                      "-nickname",
                      "-answered_at",
                      "-title",
                      "-updated_at",
                      "+nickname",
                      "+answered_at",
                      "+title",
                      "+updated_at",
                      "-score",
                      "+score"
                    ]
                  },
                  "title": "Sorting conditions",
                  "description": "Sorting conditions."
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of summarized informations with pagination searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "number",
                  "title": "Score of the review",
                  "description": "Score of the review."
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "customer"
                      ],
                      "title": "Discriminant for the type of customer",
                      "description": "Discriminant for the type of customer."
                    },
                    "member": {
                      "type": "object",
                      "properties": {
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "seller": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\nIf the member also signed up as a seller.",
                          "title": "Seller information",
                          "nullable": true
                        },
                        "administrator": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                          "title": "Administrator information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname that uniquely identifies the member",
                          "description": "Nickname that uniquely identifies the member."
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "value": {
                                "type": "string",
                                "format": "email",
                                "title": "Email address value",
                                "description": "Email address value."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "created_at"
                            ],
                            "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                          },
                          "title": "List of emails",
                          "description": "List of emails."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                        }
                      },
                      "required": [
                        "citizen",
                        "seller",
                        "administrator",
                        "id",
                        "nickname",
                        "emails",
                        "created_at"
                      ],
                      "description": "Membership information.\n\nIf the customer has joined as a member.",
                      "title": "Membership information",
                      "nullable": true
                    },
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                      "title": "Citizen information",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "code": {
                          "type": "string",
                          "title": "Identifier code",
                          "description": "Identifier code."
                        },
                        "name": {
                          "type": "string",
                          "title": "Name of the channel",
                          "description": "Name of the channel."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ],
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                    },
                    "external_user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen activation info.",
                          "title": "Citizen activation info",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                        },
                        "application": {
                          "type": "string",
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                        },
                        "uid": {
                          "type": "string",
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system."
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "application",
                        "uid",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "title": "External user information",
                      "nullable": true
                    },
                    "href": {
                      "type": "string",
                      "format": "uri",
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                    },
                    "referrer": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true,
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                    },
                    "ip": {
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ],
                      "title": "Connection IP Address",
                      "description": "Connection IP Address."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record."
                    }
                  },
                  "required": [
                    "type",
                    "member",
                    "citizen",
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ],
                  "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                },
                "answer": {
                  "type": "object",
                  "properties": {
                    "seller": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "id",
                        "created_at"
                      ],
                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the last snapshot",
                      "description": "Title of the last snapshot."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the article",
                      "description": "Creation time of the article."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Modification time of the article",
                      "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                    }
                  },
                  "required": [
                    "seller",
                    "id",
                    "title",
                    "created_at",
                    "updated_at"
                  ],
                  "title": "Formal answer for the inquiry by the seller",
                  "description": "Formal answer for the inquiry by the seller.",
                  "nullable": true
                },
                "read_by_seller": {
                  "type": "boolean",
                  "title": "Whether the seller has viewed the inquiry or not",
                  "description": "Whether the seller has viewed the inquiry or not."
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the last snapshot",
                  "description": "Title of the last snapshot."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the article",
                  "description": "Creation time of the article."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Modification time of the article",
                  "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                }
              },
              "required": [
                "score",
                "customer",
                "answer",
                "read_by_seller",
                "id",
                "title",
                "created_at",
                "updated_at"
              ],
              "description": "Summarized information of the review."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every summarized reviews.\n\nList up every {@link IShoppingSaleReview.ISummary summarized reviews} of a\n{@link IShoppingSale sale}.\n\nAs you can see, returned reviews are summarized, not detailed. If you want\nto get the detailed information of a review, use {@link adridges } function\nor {@link at } function for each article.\n\nAlso, returned review has {@link IShoppingSaleReview.ISummary.answer }\nproperty which means the formal answer from the {@link IShoppingSeller }.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s reviews. Otherwise,\nyou can access to every reviews of the sales.\n\nBy the way, if you want, you can limit the result by configuring\n{@link IShoppingSaleReview.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleReview.IRequest.sort sort condition}."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/sales/{saleId}/reviews/{id}",
      "name": "shoppings_customers_sales_reviews_getBySaleidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target review's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "review"
            ],
            "title": "Type of the derived inquiry",
            "description": "Type of the derived inquiry.\n\n- `question`: {@link IShoppingSaleQuestion }\n- `review`: {@link IShoppingSaleReview }"
          },
          "customer": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer"
                ],
                "title": "Discriminant for the type of customer",
                "description": "Discriminant for the type of customer."
              },
              "member": {
                "type": "object",
                "properties": {
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "seller": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation tmie of record",
                        "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Seller information.\n\nIf the member also signed up as a seller.",
                    "title": "Seller information",
                    "nullable": true
                  },
                  "administrator": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                    "title": "Administrator information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname that uniquely identifies the member",
                    "description": "Nickname that uniquely identifies the member."
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "value": {
                          "type": "string",
                          "format": "email",
                          "title": "Email address value",
                          "description": "Email address value."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        }
                      },
                      "required": [
                        "id",
                        "value",
                        "created_at"
                      ],
                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                    },
                    "title": "List of emails",
                    "description": "List of emails."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                  }
                },
                "required": [
                  "citizen",
                  "seller",
                  "administrator",
                  "id",
                  "nickname",
                  "emails",
                  "created_at"
                ],
                "description": "Membership information.\n\nIf the customer has joined as a member.",
                "title": "Membership information",
                "nullable": true
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                "title": "Citizen information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "type",
              "member",
              "citizen",
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
          },
          "answer": {
            "type": "object",
            "properties": {
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "snapshots": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of snapshot record",
                      "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "html",
                        "md",
                        "txt"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of article",
                      "description": "Title of article."
                    },
                    "body": {
                      "type": "string",
                      "title": "Content body of article",
                      "description": "Content body of article."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "title": "File name, except extension",
                            "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                          },
                          "extension": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8,
                            "nullable": true,
                            "title": "Extension",
                            "description": "Extension.\n\nPossible to omit like `README` case."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "title": "URL path of the real file",
                            "description": "URL path of the real file."
                          }
                        },
                        "required": [
                          "name",
                          "extension",
                          "url"
                        ]
                      },
                      "title": "List of attachment files",
                      "description": "List of attachment files."
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "format",
                    "title",
                    "body",
                    "files"
                  ],
                  "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
                },
                "minItems": 1,
                "title": "List of snapshot contents",
                "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of article",
                "description": "Creation time of article."
              }
            },
            "required": [
              "seller",
              "id",
              "snapshots",
              "created_at"
            ],
            "description": "Formal answer for the inquiry by the seller.",
            "title": "Formal answer for the inquiry by the seller",
            "nullable": true
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "Whether the seller has viewed the inquiry or not",
            "description": "Whether the seller has viewed the inquiry or not."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "title": "Score of the review",
                  "description": "Score of the review."
                },
                "id": {
                  "type": "string",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "score",
                "id",
                "created_at",
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Snapshot content of the review article."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "type",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "Reviews for sale snapshots.\n\n`IShoppingSaleReview` is a subtype entity of {@link IShoppingSaleInquiry },\nand is used when a {@link IShoppingCustomer customer} purchases a\n{@link IShoppingSale sale} ({@link IShoppingSaleSnapshot snapshot} at the time)\nregistered by the {@link IShoppingSeller seller} as a product and leaves a\nreview and rating for it.\n\nFor reference, `IShoppingSaleReview` and\n{@link IShoppingOrderGod shopping_order_goods} have a logarithmic relationship\nof N: 1, but this does not mean that customers can continue to write reviews\nfor the same product indefinitely. Wouldn't there be restrictions, such as\nif you write a review once, you can write an additional review a month later?"
      },
      "description": "Get a review info.\n\nGet a detailed {@link IShoppingSaleReview review} information of a\n{@link IShoppingSale sale}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s review. Otherwise\nyou are a {@link IShoppingCustomer customer}, you can access to every\nreviews of the sales."
    },
    {
      "method": "post",
      "path": "/shoppings/customers/sales/{saleId}/reviews/{id}",
      "name": "shoppings_customers_sales_reviews_postBySaleidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target review's "
            },
            "body": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "title": "Score of the review",
                  "description": "Score of the review."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "score",
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Updating information of the review."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "title": "Score of the review",
            "description": "Score of the review."
          },
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
          },
          "format": {
            "type": "string",
            "enum": [
              "html",
              "md",
              "txt"
            ]
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "title": "File name, except extension",
                  "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                },
                "extension": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 8,
                  "nullable": true,
                  "title": "Extension",
                  "description": "Extension.\n\nPossible to omit like `README` case."
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "title": "URL path of the real file",
                  "description": "URL path of the real file."
                }
              },
              "required": [
                "name",
                "extension",
                "url"
              ]
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "score",
          "id",
          "created_at",
          "format",
          "title",
          "body",
          "files"
        ],
        "description": "Snapshot content of the review article."
      },
      "description": "Update a review.\n\nUpdadte a {@link IShoppingSaleReview review}'s content and score.\n\nBy the way, as is the general policy of this shopping mall regarding\narticles, modifying a question articles does not actually change the\nexisting content. Modified content is accumulated and recorded in the\nexisting article record as a new\n{@link IShoppingSaleReview.ISnapshot snapshot}. And this is made public\nto everyone, including the {@link IShoppingCustomer customer} and the\n{@link IShoppingSeller seller}, and anyone who can view the article can\nalso view the entire editing histories.\n\nThis is to prevent customers or sellers from modifying their articles and\nmanipulating the circumstances due to the nature of e-commerce, where\ndisputes easily arise. That is, to preserve evidence."
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/sales/{saleId}/reviews/abridges",
      "name": "shoppings_customers_sales_reviews_abridges_patchBySaleid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "answered": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "title": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "title_or_body": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "minimum": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maximum": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at",
                      "-nickname",
                      "-answered_at",
                      "-title",
                      "-updated_at",
                      "+nickname",
                      "+answered_at",
                      "+title",
                      "+updated_at",
                      "-score",
                      "+score"
                    ]
                  },
                  "title": "Sorting conditions",
                  "description": "Sorting conditions."
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of summarized informations with pagination searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "title": "Score of the review",
                  "description": "Score of the review."
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "customer"
                      ],
                      "title": "Discriminant for the type of customer",
                      "description": "Discriminant for the type of customer."
                    },
                    "member": {
                      "type": "object",
                      "properties": {
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "seller": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\nIf the member also signed up as a seller.",
                          "title": "Seller information",
                          "nullable": true
                        },
                        "administrator": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                          "title": "Administrator information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname that uniquely identifies the member",
                          "description": "Nickname that uniquely identifies the member."
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "value": {
                                "type": "string",
                                "format": "email",
                                "title": "Email address value",
                                "description": "Email address value."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "created_at"
                            ],
                            "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                          },
                          "title": "List of emails",
                          "description": "List of emails."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                        }
                      },
                      "required": [
                        "citizen",
                        "seller",
                        "administrator",
                        "id",
                        "nickname",
                        "emails",
                        "created_at"
                      ],
                      "description": "Membership information.\n\nIf the customer has joined as a member.",
                      "title": "Membership information",
                      "nullable": true
                    },
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                      "title": "Citizen information",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "code": {
                          "type": "string",
                          "title": "Identifier code",
                          "description": "Identifier code."
                        },
                        "name": {
                          "type": "string",
                          "title": "Name of the channel",
                          "description": "Name of the channel."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ],
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                    },
                    "external_user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen activation info.",
                          "title": "Citizen activation info",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                        },
                        "application": {
                          "type": "string",
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                        },
                        "uid": {
                          "type": "string",
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system."
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "application",
                        "uid",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "title": "External user information",
                      "nullable": true
                    },
                    "href": {
                      "type": "string",
                      "format": "uri",
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                    },
                    "referrer": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true,
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                    },
                    "ip": {
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ],
                      "title": "Connection IP Address",
                      "description": "Connection IP Address."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record."
                    }
                  },
                  "required": [
                    "type",
                    "member",
                    "citizen",
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ],
                  "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                },
                "answer": {
                  "type": "object",
                  "properties": {
                    "seller": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "id",
                        "created_at"
                      ],
                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the last snapshot",
                      "description": "Title of the last snapshot."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the article",
                      "description": "Creation time of the article."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Modification time of the article",
                      "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "html",
                        "md",
                        "txt"
                      ]
                    },
                    "body": {
                      "type": "string",
                      "title": "Content body of article",
                      "description": "Content body of article."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "title": "File name, except extension",
                            "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                          },
                          "extension": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8,
                            "nullable": true,
                            "title": "Extension",
                            "description": "Extension.\n\nPossible to omit like `README` case."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "title": "URL path of the real file",
                            "description": "URL path of the real file."
                          }
                        },
                        "required": [
                          "name",
                          "extension",
                          "url"
                        ]
                      },
                      "title": "List of attachment files",
                      "description": "List of attachment files."
                    }
                  },
                  "required": [
                    "seller",
                    "id",
                    "title",
                    "created_at",
                    "updated_at",
                    "format",
                    "body",
                    "files"
                  ],
                  "title": "Formal answer for the inquiry by the seller",
                  "description": "Formal answer for the inquiry by the seller.",
                  "nullable": true
                },
                "read_by_seller": {
                  "type": "boolean",
                  "title": "Whether the seller has viewed the inquiry or not",
                  "description": "Whether the seller has viewed the inquiry or not."
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the last snapshot",
                  "description": "Title of the last snapshot."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the article",
                  "description": "Creation time of the article."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Modification time of the article",
                  "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "score",
                "customer",
                "answer",
                "read_by_seller",
                "id",
                "title",
                "created_at",
                "updated_at",
                "format",
                "body",
                "files"
              ],
              "description": "Abridged information of the review."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every abridged reviews.\n\nList up every {@link IShoppingSaleReview.IAbridge abridged reviews} of\na {@link IShoppingSale sale}.\n\nAs you can see, returned reviews are abridged, not detailed. If you want\nto get the detailed information of a review, use {@link at } function\nfor each article.\n\nAlso, returned review has {@link IShoppingSaleReview.IAridge.answer }\nproperty which means the formal answer from the {@link IShoppingSeller }.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s reviews. Otherwise,\nyou can access to every reviews of the sales.\n\nBy the way, if you want, you can limit the result by configuring\n{@link IShoppingSaleReview.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleReview.IRequest.sort sort condition}."
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/systematic/channels",
      "name": "shoppings_customers_systematic_channels_patch",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-channel.code",
                      "-channel.name",
                      "-channel.created_at",
                      "+channel.code",
                      "+channel.name",
                      "+channel.created_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of the channels with pagination and searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of record",
                  "description": "Creation time of record."
                },
                "code": {
                  "type": "string",
                  "title": "Identifier code",
                  "description": "Identifier code."
                },
                "name": {
                  "type": "string",
                  "title": "Name of the channel",
                  "description": "Name of the channel."
                }
              },
              "required": [
                "id",
                "created_at",
                "code",
                "name"
              ],
              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every channels.\n\nList up every {@link IShoppingChannel channels} with pagination.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingChannel.IRequest.search search condition} in the request\nbody. Also, it is possible to customize sequence order of records by\nconfiguring {@link IShoppingChannel.IRequest.sort sort condition}."
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/systematic/sections",
      "name": "shoppings_customers_systematic_sections_patch",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-section.code",
                      "-section.name",
                      "-section.created_at",
                      "+section.code",
                      "+section.name",
                      "+section.created_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of the sections with pagination and searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "code": {
                  "type": "string",
                  "title": "Identifier code",
                  "description": "Identifier code."
                },
                "name": {
                  "type": "string",
                  "title": "Representative name of the section",
                  "description": "Representative name of the section."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of record",
                  "description": "Creation time of record."
                }
              },
              "required": [
                "id",
                "code",
                "name",
                "created_at"
              ],
              "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every sections.\n\nList up every {@link IShoppingSection sections} with pagination.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingSection.IRequest.search search condition} in the request\nbody. Also, it is possible to customize sequence order of records by\nconfiguring {@link IShoppingSection.IRequest.sort sort condition}."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/systematic/sections/{id}",
      "name": "shoppings_customers_systematic_sections_getById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target section's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "code": {
            "type": "string",
            "title": "Identifier code",
            "description": "Identifier code."
          },
          "name": {
            "type": "string",
            "title": "Representative name of the section",
            "description": "Representative name of the section."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of record",
            "description": "Creation time of record."
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "created_at"
        ],
        "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future."
      },
      "description": "Get a section info.\n\nGet a detailed {@link IShoppingSection section} information."
    },
    {
      "method": "get",
      "path": "/shoppings/customers/systematic/sections/{code}/get",
      "name": "shoppings_customers_systematic_sections_get_getByCode",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Target section's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "code": {
            "type": "string",
            "title": "Identifier code",
            "description": "Identifier code."
          },
          "name": {
            "type": "string",
            "title": "Representative name of the section",
            "description": "Representative name of the section."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of record",
            "description": "Creation time of record."
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "created_at"
        ],
        "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future."
      },
      "description": "Get a section info by its code.\n\nGet a detailed {@link IShoppingSection section} information by its code."
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/authenticate",
      "name": "shoppings_sellers_authenticate_get",
      "parameters": [
        {
          "type": "object",
          "properties": {}
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "seller"
            ],
            "title": "Discriminant for the type of customer",
            "description": "Discriminant for the type of customer."
          },
          "member": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname that uniquely identifies the member",
                "description": "Nickname that uniquely identifies the member."
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "value": {
                      "type": "string",
                      "format": "email",
                      "title": "Email address value",
                      "description": "Email address value."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "created_at"
                  ],
                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                },
                "title": "List of emails",
                "description": "List of emails."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
              }
            },
            "required": [
              "id",
              "nickname",
              "emails",
              "created_at"
            ],
            "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
          },
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation tmie of record",
            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
          }
        },
        "required": [
          "type",
          "member",
          "customer",
          "citizen",
          "id",
          "created_at"
        ],
        "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
      },
      "description": "Get seller information.\n\nGet {@link IShoppingSeller.IInvert seller} information of\ncurrent {@link IShoppingCustomer customer}.\n\nIf current {@link IShoppingMember member} is not an seller,\nit throws 403 forbidden exception."
    },
    {
      "method": "post",
      "path": "/shoppings/sellers/authenticate",
      "name": "shoppings_sellers_authenticate_post",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "seller"
            ],
            "title": "Discriminant for the type of customer",
            "description": "Discriminant for the type of customer."
          },
          "member": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname that uniquely identifies the member",
                "description": "Nickname that uniquely identifies the member."
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "value": {
                      "type": "string",
                      "format": "email",
                      "title": "Email address value",
                      "description": "Email address value."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "created_at"
                  ],
                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                },
                "title": "List of emails",
                "description": "List of emails."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
              }
            },
            "required": [
              "id",
              "nickname",
              "emails",
              "created_at"
            ],
            "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
          },
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation tmie of record",
            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
          }
        },
        "required": [
          "type",
          "member",
          "customer",
          "citizen",
          "id",
          "created_at"
        ],
        "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
      },
      "description": "Join as an seller.\n\nJoin as an seller with {@link IShoppingSeller.IJoin joining info}.\n\nThis method is allowed only when the {@link IShoppingCustomer customer} already\nhas joined the {@link IShoppingMember membership}. IF not, he (she) must\naccomplish it before. If not, 403 forbidden exception would be thrown."
    },
    {
      "method": "put",
      "path": "/shoppings/sellers/authenticate/login",
      "name": "shoppings_sellers_authenticate_login_put",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "title": "Email address of member",
                  "description": "Email address of member.\n\nIf the member has multiple email addresses, just use one of them."
                },
                "password": {
                  "type": "string",
                  "title": "Password of the member account",
                  "description": "Password of the member account."
                }
              },
              "required": [
                "email",
                "password"
              ],
              "description": "Login request info."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "seller"
            ],
            "title": "Discriminant for the type of customer",
            "description": "Discriminant for the type of customer."
          },
          "member": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "nickname": {
                "type": "string",
                "title": "Nickname that uniquely identifies the member",
                "description": "Nickname that uniquely identifies the member."
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "value": {
                      "type": "string",
                      "format": "email",
                      "title": "Email address value",
                      "description": "Email address value."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of record",
                      "description": "Creation time of record."
                    }
                  },
                  "required": [
                    "id",
                    "value",
                    "created_at"
                  ],
                  "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                },
                "title": "List of emails",
                "description": "List of emails."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
              }
            },
            "required": [
              "id",
              "nickname",
              "emails",
              "created_at"
            ],
            "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
          },
          "customer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
          },
          "citizen": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of record",
                "description": "Creation time of record."
              },
              "mobile": {
                "type": "string",
                "pattern": "^[0-9]*$",
                "title": "Mobile number",
                "description": "Mobile number."
              },
              "name": {
                "type": "string",
                "title": "Real name, or equivalent nickname",
                "description": "Real name, or equivalent nickname."
              }
            },
            "required": [
              "id",
              "created_at",
              "mobile",
              "name"
            ],
            "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation tmie of record",
            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
          }
        },
        "required": [
          "type",
          "member",
          "customer",
          "citizen",
          "id",
          "created_at"
        ],
        "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
      },
      "description": "Login as an seller.\n\nLogin as an seller with {@link IShoppingSeller.ILogin login info}.\n\nThis method has exactly same effect with\n{@link ShoppingApi.functional.customers.authenticate.login } function, but\nreturned type is a llttle different. The similar function returns\n{@link IShoppingCustomer } type that starting from the customer information, so\nthat you have to access to the seller info through\n`customer.member.seller`. In contrast with that, this method returns\n{@link IShoppingSeller.IInvert } type that starting from the seller\ninfo, so that can access to the customer info through `seller.customer`.\n\nOf course, to use this function, you had to {@link join } as an seller\nbefore. If not, 403 forbidden exception would be thrown,"
    },
    {
      "method": "post",
      "path": "/shoppings/sellers/deliveries",
      "name": "shoppings_sellers_deliveries_post",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "pieces": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "publish_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Target order's {@link IShoppingOrderPublish.id }",
                        "description": "Target order's {@link IShoppingOrderPublish.id }."
                      },
                      "good_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Target good's {@link IShoppingOrderGood.id }",
                        "description": "Target good's {@link IShoppingOrderGood.id }."
                      },
                      "stock_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Target stock's {@link IShoppingSaleUnitStock.id }",
                        "description": "Target stock's {@link IShoppingSaleUnitStock.id }."
                      },
                      "quantity": {
                        "type": "number",
                        "minimum": 0,
                        "title": "Quantity of the stock",
                        "description": "Quantity of the stock.\n\nIt can be precision value to express splitted shipping."
                      }
                    },
                    "required": [
                      "publish_id",
                      "good_id",
                      "stock_id",
                      "quantity"
                    ],
                    "description": "Creation information of the delivery piece."
                  },
                  "minItems": 1,
                  "title": "List of pieces of the delivery",
                  "description": "List of pieces of the delivery."
                },
                "journeys": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "preparing",
                          "manufacturing",
                          "shipping",
                          "delivering"
                        ],
                        "title": "Type of journey",
                        "description": "Type of journey.\n\n- preparing\n- manufacturing\n- shipping\n- delivering"
                      },
                      "title": {
                        "type": "string",
                        "nullable": true,
                        "title": "Title of journey",
                        "description": "Title of journey."
                      },
                      "description": {
                        "type": "string",
                        "nullable": true,
                        "title": "Description of journey",
                        "description": "Description of journey."
                      },
                      "started_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Start time of the journey",
                        "description": "Start time of the journey."
                      },
                      "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Completion time of the journey",
                        "description": "Completion time of the journey."
                      }
                    },
                    "required": [
                      "type",
                      "title",
                      "description",
                      "started_at",
                      "completed_at"
                    ],
                    "description": "Creation information of the delivery journey."
                  },
                  "title": "List of journeys of the delivery",
                  "description": "List of journeys of the delivery.\n\nThis is initial data, and it is also possible to accumulate journey data\nafter the delivery creation."
                },
                "shippers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "company": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "mobile": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "company",
                      "name",
                      "mobile"
                    ]
                  },
                  "title": "List of shippers of the delivery",
                  "description": "List of shippers of the delivery."
                }
              },
              "required": [
                "pieces",
                "journeys",
                "shippers"
              ],
              "description": "Creation information of the delivery."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "seller": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation tmie of record",
                "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
              }
            },
            "required": [
              "id",
              "created_at"
            ],
            "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
          },
          "journeys": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the record",
                  "description": "Creation time of the record."
                },
                "deleted_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "title": "Deletion time of the record",
                  "description": "Deletion time of the record."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "preparing",
                    "manufacturing",
                    "shipping",
                    "delivering"
                  ]
                },
                "title": {
                  "type": "string",
                  "nullable": true,
                  "title": "Title of journey",
                  "description": "Title of journey."
                },
                "description": {
                  "type": "string",
                  "nullable": true,
                  "title": "Description of journey",
                  "description": "Description of journey."
                },
                "started_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "title": "Start time of the journey",
                  "description": "Start time of the journey."
                },
                "completed_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "title": "Completion time of the journey",
                  "description": "Completion time of the journey."
                }
              },
              "required": [
                "id",
                "created_at",
                "deleted_at",
                "type",
                "title",
                "description",
                "started_at",
                "completed_at"
              ],
              "description": "Journey of delivery.\n\n`IShoppingDeliveryJourney` is a subsidiary entity of {@link IShoppingDelivery },\ndescribing each journey of the delivery. For reference, the word journey\nmeans each step of the delivery process, such as preparing, shipping, and\ndelivering {@link IShoppingOrderGood goods} to the\n{@link IShoppingCustomer customer}."
            },
            "title": "List of journeys of the delivery",
            "description": "List of journeys of the delivery."
          },
          "pieces": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "publish_id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Target order's {@link IShoppingOrderPublish.id }",
                  "description": "Target order's {@link IShoppingOrderPublish.id }."
                },
                "good_id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Target good's {@link IShoppingOrderGood.id }",
                  "description": "Target good's {@link IShoppingOrderGood.id }."
                },
                "stock_id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Target stock's {@link IShoppingSaleUnitStock.id }",
                  "description": "Target stock's {@link IShoppingSaleUnitStock.id }."
                },
                "quantity": {
                  "type": "number",
                  "minimum": 0,
                  "title": "Quantity of the stock",
                  "description": "Quantity of the stock.\n\nIt can be precision value to express splitted shipping."
                }
              },
              "required": [
                "id",
                "publish_id",
                "good_id",
                "stock_id",
                "quantity"
              ],
              "description": "Which stocks are delivered.\n\n`IShoppingDeliveryPiece` is a subsidiary entity of {@link IShoppingDelivery },\ndescribing how much quantity is delivered for each\n{@link IShoppingSaleUnitStock stock} in {@link IShoppingOrder }.\n\nFor reference, as an order can be delivered in multiple times due to volume\nor weight problem, it is possible to have multiple `IShoppingDeliveryPiece`\nrecords for a single stock."
            },
            "minItems": 1,
            "title": "List of pieces of the delivery",
            "description": "List of pieces of the delivery."
          },
          "shippers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "company": {
                  "type": "string",
                  "nullable": true
                },
                "name": {
                  "type": "string"
                },
                "mobile": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "created_at",
                "company",
                "name",
                "mobile"
              ]
            },
            "title": "List of shippers of the delivery",
            "description": "List of shippers of the delivery."
          },
          "state": {
            "type": "string",
            "enum": [
              "none",
              "underway",
              "preparing",
              "manufacturing",
              "shipping",
              "delivering",
              "arrived"
            ],
            "description": "State of delivery\n\n- `none`: No delivery or journey record\n- `underway`: Some pieces are over preparing, but others are not\n- `preparing`: At least preparing\n- `manufacturing`: At least manufacturing\n- `shipping`: At least shipping\n- `delivering`: At least delivering\n- `arrived`: Every pieces are arrived"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the record",
            "description": "Creation time of the record."
          }
        },
        "required": [
          "id",
          "seller",
          "journeys",
          "pieces",
          "shippers",
          "state",
          "created_at"
        ],
        "description": "Delivery information.\n\nWhen delivering {@link IShoppingOrderGood goods} to\n{@link IShoppingCustomer customer}, {@link IShoppingSeller seller} can deliver\nmultiple {@link IShoppingSaleUnitStock stocks}, goods at once. Also, it is\npossible to deliver a stock or good in multiple times due to physical restriction\nlike volume or weight problem.\n\nAs you can see from above, the relationship between delivery with\n{@link IShoppingOrder order} (or {@link IShoppingOrderGood good}) is not 1: 1 or\nN: 1, but M: N. Entity `IShoppingDelivery` has been designed to represent such\nrelationship, by referencing target stocks or goods through subsidiary entity\n{@link IShoppingDeliveryPiece }.\n\nAlso, delivery does not end with only one step. It has multiple processes like\nmanufacturing, planning, shipping and delivering. Those steps are represented by\nanother subsidiary entity {@link IShoppingDeliveryJourney }."
      },
      "description": "Create a delivery.\n\nCreate a {@link IShoppingDelivery delivery} record targetting\n{@link IShoppingOrder orders}, their {@link IShoppingOrderGood goods} and\n{@link IShoppingSaleUnitStock stocks} ({@link IShoppingDeliveryPiece }) with\n{@link IShoppingDeliveryJourney journeys} and\n{@link IShoppingDeliveryShipper shippers} info.\n\nNote that, composition of the {@link IShoppingDeliveryPiece } must not over\nthe required. To identify which pieces are required, recommend to call\nthe {@link incompletes } function with target orders'\n{@link IShoppingOrderPublish.id }s before calling this one."
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/deliveries/incompletes",
      "name": "shoppings_sellers_deliveries_incompletes_patch",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "publish_ids": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "required": [
                "publish_ids"
              ]
            }
          }
        }
      ],
      "output": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "publish_id": {
              "type": "string",
              "format": "uuid",
              "title": "Target order's {@link IShoppingOrderPublish.id }",
              "description": "Target order's {@link IShoppingOrderPublish.id }."
            },
            "good_id": {
              "type": "string",
              "format": "uuid",
              "title": "Target good's {@link IShoppingOrderGood.id }",
              "description": "Target good's {@link IShoppingOrderGood.id }."
            },
            "stock_id": {
              "type": "string",
              "format": "uuid",
              "title": "Target stock's {@link IShoppingSaleUnitStock.id }",
              "description": "Target stock's {@link IShoppingSaleUnitStock.id }."
            },
            "quantity": {
              "type": "number",
              "minimum": 0,
              "title": "Quantity of the stock",
              "description": "Quantity of the stock.\n\nIt can be precision value to express splitted shipping."
            }
          },
          "required": [
            "publish_id",
            "good_id",
            "stock_id",
            "quantity"
          ],
          "description": "Creation information of the delivery piece."
        }
      },
      "description": "Get list of incomplete pieces.\n\nGet list of {@link IShoppingDeliveryPiece incomplete pieces} of target\norders' {@link IShoppingOrderPublish.id }s.\n\nIf you specify target orders' publish IDs, then this function returns\nincompleted pieces of the orders with computation as an Array of\n{@link IShoppingDeliveryPiece.ICreate } type.\n\nYou can utillize the result to make a huge {@link IShoppingDelivery delivery}\nfor integrated delivering, and also possible to make multiple deliveries for\nsplitted delivering."
    },
    {
      "method": "post",
      "path": "/shoppings/sellers/deliveries/{deliveryId}/journeys",
      "name": "shoppings_sellers_deliveries_journeys_postByDeliveryid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "deliveryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged delivery's "
            },
            "body": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "preparing",
                    "manufacturing",
                    "shipping",
                    "delivering"
                  ],
                  "title": "Type of journey",
                  "description": "Type of journey.\n\n- preparing\n- manufacturing\n- shipping\n- delivering"
                },
                "title": {
                  "type": "string",
                  "nullable": true,
                  "title": "Title of journey",
                  "description": "Title of journey."
                },
                "description": {
                  "type": "string",
                  "nullable": true,
                  "title": "Description of journey",
                  "description": "Description of journey."
                },
                "started_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "title": "Start time of the journey",
                  "description": "Start time of the journey."
                },
                "completed_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "title": "Completion time of the journey",
                  "description": "Completion time of the journey."
                }
              },
              "required": [
                "type",
                "title",
                "description",
                "started_at",
                "completed_at"
              ],
              "description": "Creation information of the delivery journey."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the record",
            "description": "Creation time of the record."
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Deletion time of the record",
            "description": "Deletion time of the record."
          },
          "type": {
            "type": "string",
            "enum": [
              "preparing",
              "manufacturing",
              "shipping",
              "delivering"
            ]
          },
          "title": {
            "type": "string",
            "nullable": true,
            "title": "Title of journey",
            "description": "Title of journey."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Description of journey",
            "description": "Description of journey."
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Start time of the journey",
            "description": "Start time of the journey."
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Completion time of the journey",
            "description": "Completion time of the journey."
          }
        },
        "required": [
          "id",
          "created_at",
          "deleted_at",
          "type",
          "title",
          "description",
          "started_at",
          "completed_at"
        ],
        "description": "Journey of delivery.\n\n`IShoppingDeliveryJourney` is a subsidiary entity of {@link IShoppingDelivery },\ndescribing each journey of the delivery. For reference, the word journey\nmeans each step of the delivery process, such as preparing, shipping, and\ndelivering {@link IShoppingOrderGood goods} to the\n{@link IShoppingCustomer customer}."
      },
      "description": "Create a new journey.\n\nCreate a new {@link IShoppingDeliveryJourney journey} of the\n{@link IShoppingDelivery delivery}.\n\nThis action may change the related {@link IShoppingOrderGood.state }.\nAlso, if the target journey's type is \"delivering\", whether the property\n{@link IShoppingDeliveryJourney.completed_at } is null or not affects to\nthe related goods' states. If the property is not null, the state becomes\n\"arrived\". Otherwise, the state becomes \"delivering\"."
    },
    {
      "method": "put",
      "path": "/shoppings/sellers/deliveries/{deliveryId}/journeys/{id}/complete",
      "name": "shoppings_sellers_deliveries_journeys_complete_putByDeliveryidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "deliveryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged delivery's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target journey's "
            },
            "body": {
              "type": "object",
              "properties": {
                "completed_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "title": "Completion time of the journey",
                  "description": "Completion time of the journey."
                }
              },
              "required": [
                "completed_at"
              ],
              "description": "Completion information of the delivery journey."
            }
          }
        }
      ],
      "description": "Complete a journey.\n\nComplete a {@link IShoppingDeliveryJourney journey} of the\n{@link IShoppingDelivery delivery}. In other words, fills the\n{@link IShoppingDeliveryJourney.completed_at } property with current time.\n\nIf the target journey's type is \"delivering\", this action may change\nthe related {@link IShoppingOrderGood.state goods' states} to be \"arrived\"."
    },
    {
      "method": "delete",
      "path": "/shoppings/sellers/deliveries/{deliveryId}/journeys/{id}",
      "name": "shoppings_sellers_deliveries_journeys_eraseByDeliveryidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "deliveryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged delivery's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target journey's "
            }
          }
        }
      ],
      "description": "Erase a journey.\n\nErase a {@link IShoppingDeliveryJourney journey} of the\n{@link IShoppingDelivery delivery}.\n\nIf erasing journey is the last one of the belonged delivery, this action\nmay change the related {@link IShoppingOrderGood.state }. By erasing the last\njourney, the state rolls back to the previous."
    },
    {
      "method": "post",
      "path": "/shoppings/sellers/deliveries/{deliveryId}/shippers",
      "name": "shoppings_sellers_deliveries_shippers_postByDeliveryid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "deliveryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged delivery's "
            },
            "body": {
              "type": "object",
              "properties": {
                "company": {
                  "type": "string",
                  "nullable": true
                },
                "name": {
                  "type": "string"
                },
                "mobile": {
                  "type": "string"
                }
              },
              "required": [
                "company",
                "name",
                "mobile"
              ]
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "company",
          "name",
          "mobile"
        ]
      },
      "description": "Create a new shipper.\n\nCreate a new {@link IShoppingDeliveryShipper shipper} of the\n{@link IShoppingDelivery delivery}.\n\nThis action does not affect to the related {@link IShoppingOrder orders} or\n{@link IShoppingOrderGood goods} like {@link IShoppingDeliveryJourney }\nor {@link IShoppingDeliveryPiece } case, but just informs to the\n{@link IShoppingCustomer customer}."
    },
    {
      "method": "delete",
      "path": "/shoppings/sellers/coupons/{id}",
      "name": "shoppings_sellers_coupons_eraseById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Target coupon's "
            }
          }
        }
      ],
      "description": "Erase a coupon.\n\nErase a {@link IShoppingCoupon coupon} with given ID.\n\nFor reference, if there're some {@link IShoppingCouponTicket tickets}\nwhich are already issued from the target coupon, they would not be affected.\nThose tickets are still valid until their expration time."
    },
    {
      "method": "put",
      "path": "/shoppings/sellers/sales/{id}/open",
      "name": "shoppings_sellers_sales_open_putById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "opened_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "title": "Opening time of the sale",
                  "description": "Opening time of the sale."
                },
                "closed_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "title": "Closing time of the sale",
                  "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever."
                }
              },
              "required": [
                "opened_at",
                "closed_at"
              ],
              "description": "Update opening time information of sale."
            }
          }
        }
      ],
      "description": "Change opening and closing time of a sale.\n\nUpdate a {@link IShoppingSale sale}'s opening and closing time.\n\nBy the way, if the sale still be opened or closed, it is not possible to\nchange the opening time. In contrary, if the sale already had been opened\nbut still not closed, it is possible to change the closing time.\n\nOf course, if closing time is less than opening time or not,\n428 unprocessable entity error would be thrown."
    },
    {
      "method": "post",
      "path": "/shoppings/sellers/sales/{id}/replica",
      "name": "shoppings_sellers_sales_replica_postById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target sale's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "section_code": {
            "type": "string",
            "title": "Belonged section's {@link IShoppingSection.code }",
            "description": "Belonged section's {@link IShoppingSection.code }."
          },
          "status": {
            "type": "string",
            "enum": [
              "paused",
              "suspended"
            ],
            "nullable": true,
            "title": "Initial status of the sale",
            "description": "Initial status of the sale.\n\n`null` or `undefined`: No restriction\n`paused`: Starts with {@link ITimestamps.paused_at paused} status\n`suspended`: Starts with {@link ITimestamps.suspended_at suspended} status"
          },
          "opened_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Opening time of the sale",
            "description": "Opening time of the sale."
          },
          "closed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Closing time of the sale",
            "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever."
          },
          "content": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "format": {
                "type": "string",
                "enum": [
                  "html",
                  "md",
                  "txt"
                ]
              },
              "body": {
                "type": "string"
              },
              "files": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "title": "File name, except extension",
                      "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                    },
                    "extension": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 8,
                      "nullable": true,
                      "title": "Extension",
                      "description": "Extension.\n\nPossible to omit like `README` case."
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "title": "URL path of the real file",
                      "description": "URL path of the real file."
                    }
                  },
                  "required": [
                    "name",
                    "extension",
                    "url"
                  ]
                }
              },
              "thumbnails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "title": "File name, except extension",
                      "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                    },
                    "extension": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 8,
                      "nullable": true,
                      "title": "Extension",
                      "description": "Extension.\n\nPossible to omit like `README` case."
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "title": "URL path of the real file",
                      "description": "URL path of the real file."
                    }
                  },
                  "required": [
                    "name",
                    "extension",
                    "url"
                  ]
                }
              }
            },
            "required": [
              "title",
              "format",
              "body",
              "files",
              "thumbnails"
            ]
          },
          "channels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "title": "Target channel's {@link IShoppingChannel.code }",
                  "description": "Target channel's {@link IShoppingChannel.code }."
                },
                "category_ids": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "List of target categories' {@link IShoppingChannelCategory.id }s",
                  "description": "List of target categories' {@link IShoppingChannelCategory.id }s.\n\nIf empty, it means all categories of the channel is listing the sale."
                }
              },
              "required": [
                "code",
                "category_ids"
              ],
              "description": "Creation information of the target channel (and categories) of sale to sell."
            }
          },
          "units": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "options": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "string",
                              "number",
                              "boolean"
                            ],
                            "title": "Type of descriptive option",
                            "description": "Type of descriptive option.\n\nWhich typed value should be written when purchasing."
                          },
                          "name": {
                            "type": "string",
                            "title": "Readable name of the option",
                            "description": "Readable name of the option."
                          }
                        },
                        "required": [
                          "type",
                          "name"
                        ],
                        "description": "Creation information of the descriptive option."
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "select"
                            ],
                            "title": "Discriminant for the type of selectable option",
                            "description": "Discriminant for the type of selectable option."
                          },
                          "name": {
                            "type": "string",
                            "title": "Represents the name of the option",
                            "description": "Represents the name of the option."
                          },
                          "variable": {
                            "type": "boolean",
                            "title": "Whether the option is variable or not",
                            "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not."
                          },
                          "candidates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Represents the name of the candidate value",
                                  "description": "Represents the name of the candidate value."
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "description": "Creation information of the candidate value."
                            },
                            "minItems": 1,
                            "title": "List of candidate values",
                            "description": "List of candidate values."
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "variable",
                          "candidates"
                        ],
                        "description": "Creation information of the selectable option."
                      }
                    ]
                  },
                  "title": "List of options",
                  "description": "List of options."
                },
                "stocks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Representative name of the stock",
                        "description": "Representative name of the stock."
                      },
                      "price": {
                        "type": "object",
                        "properties": {
                          "nominal": {
                            "type": "number",
                            "minimum": 0,
                            "title": "Nominal price",
                            "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount."
                          },
                          "real": {
                            "type": "number",
                            "minimum": 0,
                            "title": "Real price to pay",
                            "description": "Real price to pay."
                          }
                        },
                        "required": [
                          "nominal",
                          "real"
                        ],
                        "description": "Shopping price interface."
                      },
                      "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "title": "Initial inventory quantity",
                        "description": "Initial inventory quantity."
                      },
                      "choices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "option_index": {
                              "type": "integer",
                              "description": "Target option's index number in\n{@link IShoppingSaleUnit.ICreate.options }."
                            },
                            "candidate_index": {
                              "type": "integer",
                              "description": "Target candidate's index number in\n{@link IShoppingSaleUnitSelectableOption.ICreate.candidates }."
                            }
                          },
                          "required": [
                            "option_index",
                            "candidate_index"
                          ],
                          "description": "Creation information of stock choice."
                        },
                        "title": "List of choices",
                        "description": "List of choices.\n\nWhich candidate values being chosen for each option."
                      }
                    },
                    "required": [
                      "name",
                      "price",
                      "quantity",
                      "choices"
                    ],
                    "description": "Creation information of the stock."
                  },
                  "minItems": 1,
                  "title": "List of final stocks",
                  "description": "List of final stocks."
                },
                "name": {
                  "type": "string",
                  "title": "Representative name of the unit",
                  "description": "Representative name of the unit."
                },
                "primary": {
                  "type": "boolean",
                  "title": "Whether the unit is primary or not",
                  "description": "Whether the unit is primary or not.\n\nJust a labeling value."
                },
                "required": {
                  "type": "boolean",
                  "title": "Whether the unit is required or not",
                  "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case."
                }
              },
              "required": [
                "options",
                "stocks",
                "name",
                "primary",
                "required"
              ],
              "description": "Creation information of sale unit."
            },
            "minItems": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "section_code",
          "opened_at",
          "closed_at",
          "content",
          "channels",
          "units",
          "tags"
        ],
        "description": "Creation information of sale."
      },
      "description": "Get replica of a sale.\n\nGet a {@link IShoppingSale.ICreate } typed info of the target sale for\nreplication.\n\nIt would be useful for creating a new replication\n{@link IShoppingSale sale} with similar innformatiopn."
    },
    {
      "method": "delete",
      "path": "/shoppings/sellers/sales/{id}/pause",
      "name": "shoppings_sellers_sales_pause_eraseById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target sale's "
            }
          }
        }
      ],
      "description": "Pause a sale.\n\nPause a {@link IShoppingSale sale} from {@link open opened} state.\nTherefore, the sale can not be operated again until it be\n{@link restore restored}. By the way, {@link IShoppingCustomer customer}\nstill can sale from the {@link index } and {@link at } API endpints, but\n\"paused\" label would be attached.\n\nAlso, customer no more can put into the shopping cart, either.\nEven the sale already had been put into the shopping cart, the\n{@link IShoppingCartCommodity commodity} will not be listed on the\nshopping cart. Also, it is not possible to appling an\n{@link IShoppingOrder order} with the paused sale's commodity, either.\n\nBy the way, if the sale already had been applied to an order, the order\ncan be {@link IShoppingOrderPublish published} and\n{@link IShoppingSeller seller} must {@link IShoppingDelivery deliver} the\ngood to the customer."
    },
    {
      "method": "delete",
      "path": "/shoppings/sellers/sales/{id}/suspend",
      "name": "shoppings_sellers_sales_suspend_eraseById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target sale's "
            }
          }
        }
      ],
      "description": "Suspend a sale.\n\nSuspend a {@link IShoppingSale sale} from {@link open opened} state.\nTherefore, the sale can not be operated again until it be\n{@link restore restored} and {@link IShoppingCustomer customer} cannot\nsee the sale from the {@link index } and {@link at } API.\n\nAlso, customer no more can put into the shopping cart, either.\nEven the sale already had been put into the shopping cart, the\n{@link IShoppingCartCommodity commodity} will not be listed on the\nshopping cart. Also, it is not possible to appling an\n{@link IShoppingOrder order} with the suspended sale's commodity, either.\n\nBy the way, if the sale already had been applied to an order, the order\ncan be {@link IShoppingOrderPublish published} and\n{@link IShoppingSeller seller} must {@link IShoppingDelivery deliver} the\ngood to the customer."
    },
    {
      "method": "put",
      "path": "/shoppings/sellers/sales/{id}/restore",
      "name": "shoppings_sellers_sales_restore_putById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target sale's "
            }
          }
        }
      ],
      "description": "Restore a sale\n\nRestore a {@link IShoppingSale sale} from {@link pause paused} or\n{@link suspend suspended} state\n\nTherefore the sale can be operated again if its\n{@link IShoppingSale.closed_at closing time} has not been reached.\nAlso, if a {@link IShoppingCustomer customer} had put the sale into the\nshopping cart when being paused or suspended, the\n{@link IShoppingCartCommodity commodity} will be listed again on the\nshopping cart."
    },
    {
      "method": "post",
      "path": "/shoppings/sellers/sales/{saleId}/questions/{questionId}/answer",
      "name": "shoppings_sellers_sales_questions_answer_postBySaleidAndQuestionid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "questionId": {
              "type": "string",
              "format": "uuid",
              "description": "Target question's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Creation information of the article."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "seller": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation tmie of record",
                "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
              }
            },
            "required": [
              "id",
              "created_at"
            ],
            "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "seller",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "Answers to questions about sale snapshots.\n\n`IShoppingSaleInquiryAnswer` is an entity that embodies the official\nanswer written by the {@link IShoppingSeller seller} to the\n{@link IShoppingSaleInquiry inquiry} written by the\n{@link IShoppingCustomer customer}.\n\nOf course, in addition to writing an official response like this, it is\nalso possible for the seller to communicate with the inqjuiry written\ncustomer and multiple customers through\n{@link IShoppingSaleInquiryComment comments} in the attribution inquiry.\n\nFor refererence, it is not possible to write comments on this answer.\nEncourage people to write comments on the inquiry article. This is to\nprevent comments from being scattered in both inquiry and answer\narticles."
      },
      "description": "Write an answer article.\n\nWrite a formal {@link IShoppingSaleInquiryAnswer answer article} to a\nspecific {@link IShoppingSaleInquiry question article} written by a\n{@link IShoppingCustomer }.\n\nNote that, this is the formal answer that can be written only one per\na question article (but {@link update updatable}). Therefore, it needs to\nguide the {@link IShoppingSeller seller} to write it carefully.\n\nAlso, as seller can write {@link IShoppingSaleInquiryComment comments} to\nthe question article as many as he/she wants, it would be useful for\nadditional communication."
    },
    {
      "method": "put",
      "path": "/shoppings/sellers/sales/{saleId}/questions/{questionId}/answer",
      "name": "shoppings_sellers_sales_questions_answer_putBySaleidAndQuestionid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "questionId": {
              "type": "string",
              "format": "uuid",
              "description": "Target question's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Creation information of the article."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
          },
          "format": {
            "type": "string",
            "enum": [
              "html",
              "md",
              "txt"
            ]
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "title": "File name, except extension",
                  "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                },
                "extension": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 8,
                  "nullable": true,
                  "title": "Extension",
                  "description": "Extension.\n\nPossible to omit like `README` case."
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "title": "URL path of the real file",
                  "description": "URL path of the real file."
                }
              },
              "required": [
                "name",
                "extension",
                "url"
              ]
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "title",
          "body",
          "files"
        ]
      },
      "description": "Update an answer article.\n\nUpdate a formal {@link IShoppingSaleInquiryAnswer answer article} to a\nspecific {@link IShoppingSaleInquiry question article} written by a\n{@link IShoppingCustomer }.\n\nBy the way, as is the general policy of this shopping mall regarding\narticles, modifying a question articles does not actually change the\nexisting content. Modified content is accumulated and recorded in the\nexisting article record as a new\n{@link IShoppingSaleInquiryAnswer.ISnapshot snapshot}. And this is made\npublic to everyone, including the {@link IShoppingCustomer customer} and the\n{@link IShoppingSeller seller}, and anyone who can view the article can\nalso view the entire editing histories.\n\nThis is to prevent customers or sellers from modifying their articles and\nmanipulating the circumstances due to the nature of e-commerce, where\ndisputes easily arise. That is, to preserve evidence."
    },
    {
      "method": "post",
      "path": "/shoppings/sellers/sales/{saleId}/questions/{inquiryId}/comments",
      "name": "shoppings_sellers_sales_questions_comments_postBySaleidAndInquiryid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "body",
                "files"
              ],
              "description": "Creation information of the comment."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "administrator"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "seller"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "customer"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                        "title": "Citizen information",
                        "nullable": true
                      },
                      "seller": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Seller information.\n\nIf the member also signed up as a seller.",
                        "title": "Seller information",
                        "nullable": true
                      },
                      "administrator": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                        "title": "Administrator information",
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "citizen",
                      "seller",
                      "administrator",
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Membership information.\n\nIf the customer has joined as a member.",
                    "title": "Membership information",
                    "nullable": true
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "channel": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "code": {
                        "type": "string",
                        "title": "Identifier code",
                        "description": "Identifier code."
                      },
                      "name": {
                        "type": "string",
                        "title": "Name of the channel",
                        "description": "Name of the channel."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "code",
                      "name"
                    ],
                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                  },
                  "external_user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen activation info.",
                        "title": "Citizen activation info",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                      },
                      "application": {
                        "type": "string",
                        "title": "Identifier code of the external service",
                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                      },
                      "uid": {
                        "type": "string",
                        "title": "Identifier key of external user from the external system",
                        "description": "Identifier key of external user from the external system."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname of external user in the external system",
                        "description": "Nickname of external user in the external system."
                      },
                      "data": {
                        "description": "Additional information about external user from the external\nsystem."
                      }
                    },
                    "required": [
                      "id",
                      "citizen",
                      "created_at",
                      "application",
                      "uid",
                      "nickname",
                      "data"
                    ],
                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                    "title": "External user information",
                    "nullable": true
                  },
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "title": "Connection address",
                    "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                  },
                  "referrer": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "title": "Referrer address",
                    "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                  },
                  "ip": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "ipv4"
                      },
                      {
                        "type": "string",
                        "format": "ipv6"
                      }
                    ],
                    "title": "Connection IP Address",
                    "description": "Connection IP Address."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of the connection record",
                    "description": "Creation time of the connection record."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "citizen",
                  "id",
                  "channel",
                  "external_user",
                  "href",
                  "referrer",
                  "ip",
                  "created_at"
                ],
                "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "body",
                "files"
              ],
              "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
      },
      "description": "Create an inquiry comment.\n\nCreate an {@link IShoppingSaleInquiryComment inquiry comment} of a\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\ncreate an inquiry comment to your own {@link IShoppingSale sale}'s inquiry.\nOtherwise, you can create an inquiry comment to every inquiries of the sales."
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/sales/{saleId}/questions/{inquiryId}/comments",
      "name": "shoppings_sellers_sales_questions_comments_patchBySaleidAndInquiryid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of the comments with pagination and searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "writer": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "administrator"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "channel": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "code": {
                                  "type": "string",
                                  "title": "Identifier code",
                                  "description": "Identifier code."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of the channel",
                                  "description": "Name of the channel."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "code",
                                "name"
                              ],
                              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                            },
                            "external_user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "citizen": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "title": "Primary Key",
                                      "description": "Primary Key."
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "Creation time of record",
                                      "description": "Creation time of record."
                                    },
                                    "mobile": {
                                      "type": "string",
                                      "pattern": "^[0-9]*$",
                                      "title": "Mobile number",
                                      "description": "Mobile number."
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen activation info.",
                                  "title": "Citizen activation info",
                                  "nullable": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                                },
                                "application": {
                                  "type": "string",
                                  "title": "Identifier code of the external service",
                                  "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                                },
                                "uid": {
                                  "type": "string",
                                  "title": "Identifier key of external user from the external system",
                                  "description": "Identifier key of external user from the external system."
                                },
                                "nickname": {
                                  "type": "string",
                                  "title": "Nickname of external user in the external system",
                                  "description": "Nickname of external user in the external system."
                                },
                                "data": {
                                  "description": "Additional information about external user from the external\nsystem."
                                }
                              },
                              "required": [
                                "id",
                                "citizen",
                                "created_at",
                                "application",
                                "uid",
                                "nickname",
                                "data"
                              ],
                              "description": "External user information.\n\nWhen the customer has come frome an external service.",
                              "title": "External user information",
                              "nullable": true
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "title": "Connection address",
                              "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                            },
                            "referrer": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true,
                              "title": "Referrer address",
                              "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                            },
                            "ip": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "format": "ipv4"
                                },
                                {
                                  "type": "string",
                                  "format": "ipv6"
                                }
                              ],
                              "title": "Connection IP Address",
                              "description": "Connection IP Address."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of the connection record",
                              "description": "Creation time of the connection record."
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "external_user",
                            "href",
                            "referrer",
                            "ip",
                            "created_at"
                          ],
                          "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "customer",
                        "citizen",
                        "id",
                        "created_at"
                      ],
                      "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "seller"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "channel": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "code": {
                                  "type": "string",
                                  "title": "Identifier code",
                                  "description": "Identifier code."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of the channel",
                                  "description": "Name of the channel."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "code",
                                "name"
                              ],
                              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                            },
                            "external_user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "citizen": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "title": "Primary Key",
                                      "description": "Primary Key."
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "Creation time of record",
                                      "description": "Creation time of record."
                                    },
                                    "mobile": {
                                      "type": "string",
                                      "pattern": "^[0-9]*$",
                                      "title": "Mobile number",
                                      "description": "Mobile number."
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen activation info.",
                                  "title": "Citizen activation info",
                                  "nullable": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                                },
                                "application": {
                                  "type": "string",
                                  "title": "Identifier code of the external service",
                                  "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                                },
                                "uid": {
                                  "type": "string",
                                  "title": "Identifier key of external user from the external system",
                                  "description": "Identifier key of external user from the external system."
                                },
                                "nickname": {
                                  "type": "string",
                                  "title": "Nickname of external user in the external system",
                                  "description": "Nickname of external user in the external system."
                                },
                                "data": {
                                  "description": "Additional information about external user from the external\nsystem."
                                }
                              },
                              "required": [
                                "id",
                                "citizen",
                                "created_at",
                                "application",
                                "uid",
                                "nickname",
                                "data"
                              ],
                              "description": "External user information.\n\nWhen the customer has come frome an external service.",
                              "title": "External user information",
                              "nullable": true
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "title": "Connection address",
                              "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                            },
                            "referrer": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true,
                              "title": "Referrer address",
                              "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                            },
                            "ip": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "format": "ipv4"
                                },
                                {
                                  "type": "string",
                                  "format": "ipv6"
                                }
                              ],
                              "title": "Connection IP Address",
                              "description": "Connection IP Address."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of the connection record",
                              "description": "Creation time of the connection record."
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "external_user",
                            "href",
                            "referrer",
                            "ip",
                            "created_at"
                          ],
                          "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "customer",
                        "citizen",
                        "id",
                        "created_at"
                      ],
                      "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "customer"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "citizen": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "mobile": {
                                  "type": "string",
                                  "pattern": "^[0-9]*$",
                                  "title": "Mobile number",
                                  "description": "Mobile number."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                              "title": "Citizen information",
                              "nullable": true
                            },
                            "seller": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation tmie of record",
                                  "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                                }
                              },
                              "required": [
                                "id",
                                "created_at"
                              ],
                              "description": "Seller information.\n\nIf the member also signed up as a seller.",
                              "title": "Seller information",
                              "nullable": true
                            },
                            "administrator": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                                }
                              },
                              "required": [
                                "id",
                                "created_at"
                              ],
                              "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                              "title": "Administrator information",
                              "nullable": true
                            },
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "citizen",
                            "seller",
                            "administrator",
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Membership information.\n\nIf the customer has joined as a member.",
                          "title": "Membership information",
                          "nullable": true
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "channel": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "code": {
                              "type": "string",
                              "title": "Identifier code",
                              "description": "Identifier code."
                            },
                            "name": {
                              "type": "string",
                              "title": "Name of the channel",
                              "description": "Name of the channel."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "code",
                            "name"
                          ],
                          "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                        },
                        "external_user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "citizen": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "mobile": {
                                  "type": "string",
                                  "pattern": "^[0-9]*$",
                                  "title": "Mobile number",
                                  "description": "Mobile number."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen activation info.",
                              "title": "Citizen activation info",
                              "nullable": true
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                            },
                            "application": {
                              "type": "string",
                              "title": "Identifier code of the external service",
                              "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                            },
                            "uid": {
                              "type": "string",
                              "title": "Identifier key of external user from the external system",
                              "description": "Identifier key of external user from the external system."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname of external user in the external system",
                              "description": "Nickname of external user in the external system."
                            },
                            "data": {
                              "description": "Additional information about external user from the external\nsystem."
                            }
                          },
                          "required": [
                            "id",
                            "citizen",
                            "created_at",
                            "application",
                            "uid",
                            "nickname",
                            "data"
                          ],
                          "description": "External user information.\n\nWhen the customer has come frome an external service.",
                          "title": "External user information",
                          "nullable": true
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "title": "Connection address",
                          "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                        },
                        "referrer": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true,
                          "title": "Referrer address",
                          "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                        },
                        "ip": {
                          "oneOf": [
                            {
                              "type": "string",
                              "format": "ipv4"
                            },
                            {
                              "type": "string",
                              "format": "ipv6"
                            }
                          ],
                          "title": "Connection IP Address",
                          "description": "Connection IP Address."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of the connection record",
                          "description": "Creation time of the connection record."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "citizen",
                        "id",
                        "channel",
                        "external_user",
                        "href",
                        "referrer",
                        "ip",
                        "created_at"
                      ],
                      "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                    }
                  ]
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "parent_id": {
                  "type": "string",
                  "format": "uuid",
                  "nullable": true,
                  "title": "Parent comment's ID",
                  "description": "Parent comment's ID."
                },
                "snapshots": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of snapshot record",
                        "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                      },
                      "format": {
                        "type": "string",
                        "enum": [
                          "html",
                          "md",
                          "txt"
                        ]
                      },
                      "body": {
                        "type": "string",
                        "title": "Content body of comment",
                        "description": "Content body of comment."
                      },
                      "files": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 255,
                              "title": "File name, except extension",
                              "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                            },
                            "extension": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 8,
                              "nullable": true,
                              "title": "Extension",
                              "description": "Extension.\n\nPossible to omit like `README` case."
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "title": "URL path of the real file",
                              "description": "URL path of the real file."
                            }
                          },
                          "required": [
                            "name",
                            "extension",
                            "url"
                          ]
                        },
                        "title": "List of attachment files",
                        "description": "List of attachment files."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "format",
                      "body",
                      "files"
                    ],
                    "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
                  },
                  "minItems": 1,
                  "title": "List of snapshot contents",
                  "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of comment",
                  "description": "Creation time of comment."
                }
              },
              "required": [
                "writer",
                "id",
                "parent_id",
                "snapshots",
                "created_at"
              ],
              "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every inquiry comments.\n\nList up every {@link IShoppingSaleInquiryComment inquiry comments} of a\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}\nwith {@link IPage pagination}.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingSaleInquiryComment.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleInquiryComment.IRequest.sort sort condition}.\n\nBy the way, if you're a {@link IShoppingSeller seller}, you can only access\nto the your own {@link IShoppingSale sale}'s inquiries. Otherwise, you\ncan access to every inquiries of the sales."
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/sales/{saleId}/questions/{inquiryId}/comments/{id}",
      "name": "shoppings_sellers_sales_questions_comments_getBySaleidAndInquiryidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry comment's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "administrator"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "seller"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "customer"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                        "title": "Citizen information",
                        "nullable": true
                      },
                      "seller": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Seller information.\n\nIf the member also signed up as a seller.",
                        "title": "Seller information",
                        "nullable": true
                      },
                      "administrator": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                        "title": "Administrator information",
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "citizen",
                      "seller",
                      "administrator",
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Membership information.\n\nIf the customer has joined as a member.",
                    "title": "Membership information",
                    "nullable": true
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "channel": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "code": {
                        "type": "string",
                        "title": "Identifier code",
                        "description": "Identifier code."
                      },
                      "name": {
                        "type": "string",
                        "title": "Name of the channel",
                        "description": "Name of the channel."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "code",
                      "name"
                    ],
                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                  },
                  "external_user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen activation info.",
                        "title": "Citizen activation info",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                      },
                      "application": {
                        "type": "string",
                        "title": "Identifier code of the external service",
                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                      },
                      "uid": {
                        "type": "string",
                        "title": "Identifier key of external user from the external system",
                        "description": "Identifier key of external user from the external system."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname of external user in the external system",
                        "description": "Nickname of external user in the external system."
                      },
                      "data": {
                        "description": "Additional information about external user from the external\nsystem."
                      }
                    },
                    "required": [
                      "id",
                      "citizen",
                      "created_at",
                      "application",
                      "uid",
                      "nickname",
                      "data"
                    ],
                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                    "title": "External user information",
                    "nullable": true
                  },
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "title": "Connection address",
                    "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                  },
                  "referrer": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "title": "Referrer address",
                    "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                  },
                  "ip": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "ipv4"
                      },
                      {
                        "type": "string",
                        "format": "ipv6"
                      }
                    ],
                    "title": "Connection IP Address",
                    "description": "Connection IP Address."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of the connection record",
                    "description": "Creation time of the connection record."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "citizen",
                  "id",
                  "channel",
                  "external_user",
                  "href",
                  "referrer",
                  "ip",
                  "created_at"
                ],
                "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "body",
                "files"
              ],
              "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
      },
      "description": "Get an inquiry comment info.\n\nGet a detailed {@link IShoppingSaleInquiryComment inquiry comment}\ninformation of a {@link IShoppingSaleQuestion question} or\n{@link IShoppingSaleReview review}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s inquiry comment.\nOtherwise, you can access to every inquiry comments of the sales."
    },
    {
      "method": "put",
      "path": "/shoppings/sellers/sales/{saleId}/questions/{inquiryId}/comments/{id}",
      "name": "shoppings_sellers_sales_questions_comments_putBySaleidAndInquiryidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry comment's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "body",
                "files"
              ],
              "description": "Creation information of the comment."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
          },
          "format": {
            "type": "string",
            "enum": [
              "html",
              "md",
              "txt"
            ]
          },
          "body": {
            "type": "string",
            "title": "Content body of comment",
            "description": "Content body of comment."
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "title": "File name, except extension",
                  "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                },
                "extension": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 8,
                  "nullable": true,
                  "title": "Extension",
                  "description": "Extension.\n\nPossible to omit like `README` case."
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "title": "URL path of the real file",
                  "description": "URL path of the real file."
                }
              },
              "required": [
                "name",
                "extension",
                "url"
              ]
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "body",
          "files"
        ],
        "description": "Snapshot content of the comment."
      },
      "description": "Update an inquiry comment.\n\nUpdate an {@link IShoppingSaleInquiryComment inquiry comment} to a specific\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}.\n\nBy the way, as is the general policy of this shopping mall regarding\ncomments, modifying a comment does not actually change the existing content.\nModified content is accumulated and recorded in the existing comment record\nas a new {@link IShoppingSaleInquiryComment.ISnapshot snapshot}. And this\nis made public to everyone, who can read this inquiry comment.\n\nThis is to prevent customers or sellers from modifying their comments and\nmanipulating the circumstances due to the nature of e-commerce, where\ndisputes easily arise. That is, to preserve evidence."
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/sales/{saleId}/questions",
      "name": "shoppings_sellers_sales_questions_patchBySaleid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "answered": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "title": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "title_or_body": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at",
                      "-nickname",
                      "-answered_at",
                      "-title",
                      "-updated_at",
                      "+nickname",
                      "+answered_at",
                      "+title",
                      "+updated_at"
                    ]
                  },
                  "title": "Sorting conditions",
                  "description": "Sorting conditions."
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of summarized informations with pagination searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "secret": {
                  "type": "boolean",
                  "title": "Whether the question article is secret or not",
                  "description": "Whether the question article is secret or not.\n\nIf secret article, only the writer customer and related seller can see\nthe detailed content."
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "customer"
                      ],
                      "title": "Discriminant for the type of customer",
                      "description": "Discriminant for the type of customer."
                    },
                    "member": {
                      "type": "object",
                      "properties": {
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "seller": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\nIf the member also signed up as a seller.",
                          "title": "Seller information",
                          "nullable": true
                        },
                        "administrator": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                          "title": "Administrator information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname that uniquely identifies the member",
                          "description": "Nickname that uniquely identifies the member."
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "value": {
                                "type": "string",
                                "format": "email",
                                "title": "Email address value",
                                "description": "Email address value."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "created_at"
                            ],
                            "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                          },
                          "title": "List of emails",
                          "description": "List of emails."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                        }
                      },
                      "required": [
                        "citizen",
                        "seller",
                        "administrator",
                        "id",
                        "nickname",
                        "emails",
                        "created_at"
                      ],
                      "description": "Membership information.\n\nIf the customer has joined as a member.",
                      "title": "Membership information",
                      "nullable": true
                    },
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                      "title": "Citizen information",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "code": {
                          "type": "string",
                          "title": "Identifier code",
                          "description": "Identifier code."
                        },
                        "name": {
                          "type": "string",
                          "title": "Name of the channel",
                          "description": "Name of the channel."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ],
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                    },
                    "external_user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen activation info.",
                          "title": "Citizen activation info",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                        },
                        "application": {
                          "type": "string",
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                        },
                        "uid": {
                          "type": "string",
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system."
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "application",
                        "uid",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "title": "External user information",
                      "nullable": true
                    },
                    "href": {
                      "type": "string",
                      "format": "uri",
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                    },
                    "referrer": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true,
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                    },
                    "ip": {
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ],
                      "title": "Connection IP Address",
                      "description": "Connection IP Address."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record."
                    }
                  },
                  "required": [
                    "type",
                    "member",
                    "citizen",
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ],
                  "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                },
                "answer": {
                  "type": "object",
                  "properties": {
                    "seller": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "id",
                        "created_at"
                      ],
                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the last snapshot",
                      "description": "Title of the last snapshot."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the article",
                      "description": "Creation time of the article."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Modification time of the article",
                      "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                    }
                  },
                  "required": [
                    "seller",
                    "id",
                    "title",
                    "created_at",
                    "updated_at"
                  ],
                  "title": "Formal answer for the inquiry by the seller",
                  "description": "Formal answer for the inquiry by the seller.",
                  "nullable": true
                },
                "read_by_seller": {
                  "type": "boolean",
                  "title": "Whether the seller has viewed the inquiry or not",
                  "description": "Whether the seller has viewed the inquiry or not."
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the last snapshot",
                  "description": "Title of the last snapshot."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the article",
                  "description": "Creation time of the article."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Modification time of the article",
                  "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                }
              },
              "required": [
                "secret",
                "customer",
                "answer",
                "read_by_seller",
                "id",
                "title",
                "created_at",
                "updated_at"
              ],
              "description": "Summarized information of the question."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every summarized questions.\n\nList up every {@link IShoppingSaleQuestion.ISummary summarized questions} of a\n{@link IShoppingSale sale}.\n\nAs you can see, returned questions are summarized, not detailed. If you want\nto get the detailed information of a question, use {@link adridges } function\nor {@link at } function for each article.\n\nAlso, returned question has {@link IShoppingSaleQuestion.ISummary.answer }\nproperty which means the formal answer from the {@link IShoppingSeller }.\nAdditionally, returned question has another special property\n{@link IShoppingSaleQuestion.ISummary.secret } with masking to other\nprincple properties, and it means only related actors can {@link at read}\nthe question.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s questions. Otherwise,\nyou can access to every questions of the sales.\n\nBy the way, if you want, you can limit the result by configuring\n{@link IShoppingSaleQuestion.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleQuestion.IRequest.sort sort condition}."
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/sales/{saleId}/questions/abridges",
      "name": "shoppings_sellers_sales_questions_abridges_patchBySaleid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "answered": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "title": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "title_or_body": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at",
                      "-nickname",
                      "-answered_at",
                      "-title",
                      "-updated_at",
                      "+nickname",
                      "+answered_at",
                      "+title",
                      "+updated_at"
                    ]
                  },
                  "title": "Sorting conditions",
                  "description": "Sorting conditions."
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of summarized informations with pagination searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "secret": {
                  "type": "boolean",
                  "title": "Whether the question article is secret or not",
                  "description": "Whether the question article is secret or not.\n\nIf secret article, only the writer customer and related seller can see\nthe detailed content."
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "customer"
                      ],
                      "title": "Discriminant for the type of customer",
                      "description": "Discriminant for the type of customer."
                    },
                    "member": {
                      "type": "object",
                      "properties": {
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "seller": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\nIf the member also signed up as a seller.",
                          "title": "Seller information",
                          "nullable": true
                        },
                        "administrator": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                          "title": "Administrator information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname that uniquely identifies the member",
                          "description": "Nickname that uniquely identifies the member."
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "value": {
                                "type": "string",
                                "format": "email",
                                "title": "Email address value",
                                "description": "Email address value."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "created_at"
                            ],
                            "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                          },
                          "title": "List of emails",
                          "description": "List of emails."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                        }
                      },
                      "required": [
                        "citizen",
                        "seller",
                        "administrator",
                        "id",
                        "nickname",
                        "emails",
                        "created_at"
                      ],
                      "description": "Membership information.\n\nIf the customer has joined as a member.",
                      "title": "Membership information",
                      "nullable": true
                    },
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                      "title": "Citizen information",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "code": {
                          "type": "string",
                          "title": "Identifier code",
                          "description": "Identifier code."
                        },
                        "name": {
                          "type": "string",
                          "title": "Name of the channel",
                          "description": "Name of the channel."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ],
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                    },
                    "external_user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen activation info.",
                          "title": "Citizen activation info",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                        },
                        "application": {
                          "type": "string",
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                        },
                        "uid": {
                          "type": "string",
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system."
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "application",
                        "uid",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "title": "External user information",
                      "nullable": true
                    },
                    "href": {
                      "type": "string",
                      "format": "uri",
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                    },
                    "referrer": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true,
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                    },
                    "ip": {
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ],
                      "title": "Connection IP Address",
                      "description": "Connection IP Address."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record."
                    }
                  },
                  "required": [
                    "type",
                    "member",
                    "citizen",
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ],
                  "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                },
                "answer": {
                  "type": "object",
                  "properties": {
                    "seller": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "id",
                        "created_at"
                      ],
                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the last snapshot",
                      "description": "Title of the last snapshot."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the article",
                      "description": "Creation time of the article."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Modification time of the article",
                      "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "html",
                        "md",
                        "txt"
                      ]
                    },
                    "body": {
                      "type": "string",
                      "title": "Content body of article",
                      "description": "Content body of article."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "title": "File name, except extension",
                            "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                          },
                          "extension": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8,
                            "nullable": true,
                            "title": "Extension",
                            "description": "Extension.\n\nPossible to omit like `README` case."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "title": "URL path of the real file",
                            "description": "URL path of the real file."
                          }
                        },
                        "required": [
                          "name",
                          "extension",
                          "url"
                        ]
                      },
                      "title": "List of attachment files",
                      "description": "List of attachment files."
                    }
                  },
                  "required": [
                    "seller",
                    "id",
                    "title",
                    "created_at",
                    "updated_at",
                    "format",
                    "body",
                    "files"
                  ],
                  "title": "Formal answer for the inquiry by the seller",
                  "description": "Formal answer for the inquiry by the seller.",
                  "nullable": true
                },
                "read_by_seller": {
                  "type": "boolean",
                  "title": "Whether the seller has viewed the inquiry or not",
                  "description": "Whether the seller has viewed the inquiry or not."
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the last snapshot",
                  "description": "Title of the last snapshot."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the article",
                  "description": "Creation time of the article."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Modification time of the article",
                  "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "secret",
                "customer",
                "answer",
                "read_by_seller",
                "id",
                "title",
                "created_at",
                "updated_at",
                "format",
                "body",
                "files"
              ],
              "description": "Abridged information of the question."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every abridged questions.\n\nList up every {@link IShoppingSaleQuestion.IAbridge abridged questions} of\na {@link IShoppingSale sale}.\n\nAs you can see, returned questions are abridged, not detailed. If you want\nto get the detailed information of a question, use {@link at } function\nfor each article.\n\nAlso, returned question has {@link IShoppingSaleQuestion.IAridge.answer }\nproperty which means the formal answer from the {@link IShoppingSeller }.\nAdditionally, returned question has another special property\n{@link IShoppingSaleQuestion.IAridge.secret } with masking to other\nprincple properties, and it means only related actors can {@link at read}\nthe question.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s questions. Otherwise,\nyou can access to every questions of the sales.\n\nBy the way, if you want, you can limit the result by configuring\n{@link IShoppingSaleQuestion.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleQuestion.IRequest.sort sort condition}."
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/sales/{saleId}/questions/{id}",
      "name": "shoppings_sellers_sales_questions_getBySaleidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target question's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "boolean",
            "title": "Whether the question article is secret or not",
            "description": "Whether the question article is secret or not.\n\nIf secret article, only the writer customer and related seller can see\nthe detailed content."
          },
          "type": {
            "type": "string",
            "enum": [
              "question"
            ],
            "title": "Type of the derived inquiry",
            "description": "Type of the derived inquiry.\n\n- `question`: {@link IShoppingSaleQuestion }\n- `review`: {@link IShoppingSaleReview }"
          },
          "customer": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer"
                ],
                "title": "Discriminant for the type of customer",
                "description": "Discriminant for the type of customer."
              },
              "member": {
                "type": "object",
                "properties": {
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "seller": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation tmie of record",
                        "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Seller information.\n\nIf the member also signed up as a seller.",
                    "title": "Seller information",
                    "nullable": true
                  },
                  "administrator": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                    "title": "Administrator information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname that uniquely identifies the member",
                    "description": "Nickname that uniquely identifies the member."
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "value": {
                          "type": "string",
                          "format": "email",
                          "title": "Email address value",
                          "description": "Email address value."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        }
                      },
                      "required": [
                        "id",
                        "value",
                        "created_at"
                      ],
                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                    },
                    "title": "List of emails",
                    "description": "List of emails."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                  }
                },
                "required": [
                  "citizen",
                  "seller",
                  "administrator",
                  "id",
                  "nickname",
                  "emails",
                  "created_at"
                ],
                "description": "Membership information.\n\nIf the customer has joined as a member.",
                "title": "Membership information",
                "nullable": true
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                "title": "Citizen information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "type",
              "member",
              "citizen",
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
          },
          "answer": {
            "type": "object",
            "properties": {
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "snapshots": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of snapshot record",
                      "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "html",
                        "md",
                        "txt"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of article",
                      "description": "Title of article."
                    },
                    "body": {
                      "type": "string",
                      "title": "Content body of article",
                      "description": "Content body of article."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "title": "File name, except extension",
                            "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                          },
                          "extension": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8,
                            "nullable": true,
                            "title": "Extension",
                            "description": "Extension.\n\nPossible to omit like `README` case."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "title": "URL path of the real file",
                            "description": "URL path of the real file."
                          }
                        },
                        "required": [
                          "name",
                          "extension",
                          "url"
                        ]
                      },
                      "title": "List of attachment files",
                      "description": "List of attachment files."
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "format",
                    "title",
                    "body",
                    "files"
                  ],
                  "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
                },
                "minItems": 1,
                "title": "List of snapshot contents",
                "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of article",
                "description": "Creation time of article."
              }
            },
            "required": [
              "seller",
              "id",
              "snapshots",
              "created_at"
            ],
            "description": "Formal answer for the inquiry by the seller.",
            "title": "Formal answer for the inquiry by the seller",
            "nullable": true
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "Whether the seller has viewed the inquiry or not",
            "description": "Whether the seller has viewed the inquiry or not."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "secret",
          "type",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "Question about sale snapshot.\n\n`IShoppingSaleQuestion` is a subtype entity of {@link IShoppingSaleInquiry },\nand is used when a {@link IShoppingCustomer customer} wants to ask something\nabout a {@link IShoppingSale sale} ({@link IShoppingSaleSnapshot snapshot} at\nthe time) registered by the {@link IShoppingSeller seller}.\n\nAnd, like most shopping malls, `IShoppingSaleQuestion` also provides\na {@link secret } attribute, allowing you to create a \"secret message\" that can\nonly be viewed by the seller and the customer who wrote the question."
      },
      "description": "Get a question info.\n\nGet a detailed {@link IShoppingSaleQuestion question} information of a\n{@link IShoppingSale sale}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s question. Otherwise\nyou are a {@link IShoppingCustomer customer}, you can access to every\nquestions of the sales except the {@link IShoppingSaleQuestion.secret }\nvalue is `false`."
    },
    {
      "method": "post",
      "path": "/shoppings/sellers/sales/{saleId}/reviews/{reviewId}/answer",
      "name": "shoppings_sellers_sales_reviews_answer_postBySaleidAndReviewid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "reviewId": {
              "type": "string",
              "format": "uuid",
              "description": "Target review's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Creation information of the article."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "seller": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation tmie of record",
                "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
              }
            },
            "required": [
              "id",
              "created_at"
            ],
            "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "seller",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "Answers to questions about sale snapshots.\n\n`IShoppingSaleInquiryAnswer` is an entity that embodies the official\nanswer written by the {@link IShoppingSeller seller} to the\n{@link IShoppingSaleInquiry inquiry} written by the\n{@link IShoppingCustomer customer}.\n\nOf course, in addition to writing an official response like this, it is\nalso possible for the seller to communicate with the inqjuiry written\ncustomer and multiple customers through\n{@link IShoppingSaleInquiryComment comments} in the attribution inquiry.\n\nFor refererence, it is not possible to write comments on this answer.\nEncourage people to write comments on the inquiry article. This is to\nprevent comments from being scattered in both inquiry and answer\narticles."
      },
      "description": "Write an answer article.\n\nWrite a formal {@link IShoppingSaleInquiryAnswer answer article} to a\nspecific {@link IShoppingSaleInquiry review article} written by a\n{@link IShoppingCustomer }.\n\nNote that, this is the formal answer that can be written only one per\na review article (but {@link update updatable}). Therefore, it needs to\nguide the {@link IShoppingSeller seller} to write it carefully.\n\nAlso, as seller can write {@link IShoppingSaleInquiryComment comments} to\nthe review article as many as he/she wants, it would be useful for\nadditional communication."
    },
    {
      "method": "put",
      "path": "/shoppings/sellers/sales/{saleId}/reviews/{reviewId}/answer",
      "name": "shoppings_sellers_sales_reviews_answer_putBySaleidAndReviewid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "reviewId": {
              "type": "string",
              "format": "uuid",
              "description": "Target review's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Creation information of the article."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
          },
          "format": {
            "type": "string",
            "enum": [
              "html",
              "md",
              "txt"
            ]
          },
          "title": {
            "type": "string",
            "title": "Title of article",
            "description": "Title of article."
          },
          "body": {
            "type": "string",
            "title": "Content body of article",
            "description": "Content body of article."
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "title": "File name, except extension",
                  "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                },
                "extension": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 8,
                  "nullable": true,
                  "title": "Extension",
                  "description": "Extension.\n\nPossible to omit like `README` case."
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "title": "URL path of the real file",
                  "description": "URL path of the real file."
                }
              },
              "required": [
                "name",
                "extension",
                "url"
              ]
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "title",
          "body",
          "files"
        ]
      },
      "description": "Update an answer article.\n\nUpdate a formal {@link IShoppingSaleInquiryAnswer answer article} to a\nspecific {@link IShoppingSaleInquiry review article} written by a\n{@link IShoppingCustomer }.\n\nBy the way, as is the general policy of this shopping mall regarding\narticles, modifying a review articles does not actually change the\nexisting content. Modified content is accumulated and recorded in the\nexisting article record as a new\n{@link IShoppingSaleInquiryAnswer.ISnapshot snapshot}. And this is made\npublic to everyone, including the {@link IShoppingCustomer customer} and the\n{@link IShoppingSeller seller}, and anyone who can view the article can\nalso view the entire editing histories.\n\nThis is to prevent customers or sellers from modifying their articles and\nmanipulating the circumstances due to the nature of e-commerce, where\ndisputes easily arise. That is, to preserve evidence."
    },
    {
      "method": "post",
      "path": "/shoppings/sellers/sales/{saleId}/reviews/{inquiryId}/comments",
      "name": "shoppings_sellers_sales_reviews_comments_postBySaleidAndInquiryid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "body",
                "files"
              ],
              "description": "Creation information of the comment."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "administrator"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "seller"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "customer"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                        "title": "Citizen information",
                        "nullable": true
                      },
                      "seller": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Seller information.\n\nIf the member also signed up as a seller.",
                        "title": "Seller information",
                        "nullable": true
                      },
                      "administrator": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                        "title": "Administrator information",
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "citizen",
                      "seller",
                      "administrator",
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Membership information.\n\nIf the customer has joined as a member.",
                    "title": "Membership information",
                    "nullable": true
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "channel": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "code": {
                        "type": "string",
                        "title": "Identifier code",
                        "description": "Identifier code."
                      },
                      "name": {
                        "type": "string",
                        "title": "Name of the channel",
                        "description": "Name of the channel."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "code",
                      "name"
                    ],
                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                  },
                  "external_user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen activation info.",
                        "title": "Citizen activation info",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                      },
                      "application": {
                        "type": "string",
                        "title": "Identifier code of the external service",
                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                      },
                      "uid": {
                        "type": "string",
                        "title": "Identifier key of external user from the external system",
                        "description": "Identifier key of external user from the external system."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname of external user in the external system",
                        "description": "Nickname of external user in the external system."
                      },
                      "data": {
                        "description": "Additional information about external user from the external\nsystem."
                      }
                    },
                    "required": [
                      "id",
                      "citizen",
                      "created_at",
                      "application",
                      "uid",
                      "nickname",
                      "data"
                    ],
                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                    "title": "External user information",
                    "nullable": true
                  },
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "title": "Connection address",
                    "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                  },
                  "referrer": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "title": "Referrer address",
                    "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                  },
                  "ip": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "ipv4"
                      },
                      {
                        "type": "string",
                        "format": "ipv6"
                      }
                    ],
                    "title": "Connection IP Address",
                    "description": "Connection IP Address."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of the connection record",
                    "description": "Creation time of the connection record."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "citizen",
                  "id",
                  "channel",
                  "external_user",
                  "href",
                  "referrer",
                  "ip",
                  "created_at"
                ],
                "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "body",
                "files"
              ],
              "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
      },
      "description": "Create an inquiry comment.\n\nCreate an {@link IShoppingSaleInquiryComment inquiry comment} of a\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\ncreate an inquiry comment to your own {@link IShoppingSale sale}'s inquiry.\nOtherwise, you can create an inquiry comment to every inquiries of the sales."
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/sales/{saleId}/reviews/{inquiryId}/comments",
      "name": "shoppings_sellers_sales_reviews_comments_patchBySaleidAndInquiryid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of the comments with pagination and searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "writer": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "administrator"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "channel": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "code": {
                                  "type": "string",
                                  "title": "Identifier code",
                                  "description": "Identifier code."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of the channel",
                                  "description": "Name of the channel."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "code",
                                "name"
                              ],
                              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                            },
                            "external_user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "citizen": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "title": "Primary Key",
                                      "description": "Primary Key."
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "Creation time of record",
                                      "description": "Creation time of record."
                                    },
                                    "mobile": {
                                      "type": "string",
                                      "pattern": "^[0-9]*$",
                                      "title": "Mobile number",
                                      "description": "Mobile number."
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen activation info.",
                                  "title": "Citizen activation info",
                                  "nullable": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                                },
                                "application": {
                                  "type": "string",
                                  "title": "Identifier code of the external service",
                                  "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                                },
                                "uid": {
                                  "type": "string",
                                  "title": "Identifier key of external user from the external system",
                                  "description": "Identifier key of external user from the external system."
                                },
                                "nickname": {
                                  "type": "string",
                                  "title": "Nickname of external user in the external system",
                                  "description": "Nickname of external user in the external system."
                                },
                                "data": {
                                  "description": "Additional information about external user from the external\nsystem."
                                }
                              },
                              "required": [
                                "id",
                                "citizen",
                                "created_at",
                                "application",
                                "uid",
                                "nickname",
                                "data"
                              ],
                              "description": "External user information.\n\nWhen the customer has come frome an external service.",
                              "title": "External user information",
                              "nullable": true
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "title": "Connection address",
                              "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                            },
                            "referrer": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true,
                              "title": "Referrer address",
                              "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                            },
                            "ip": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "format": "ipv4"
                                },
                                {
                                  "type": "string",
                                  "format": "ipv6"
                                }
                              ],
                              "title": "Connection IP Address",
                              "description": "Connection IP Address."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of the connection record",
                              "description": "Creation time of the connection record."
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "external_user",
                            "href",
                            "referrer",
                            "ip",
                            "created_at"
                          ],
                          "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "customer",
                        "citizen",
                        "id",
                        "created_at"
                      ],
                      "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "seller"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "channel": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "code": {
                                  "type": "string",
                                  "title": "Identifier code",
                                  "description": "Identifier code."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Name of the channel",
                                  "description": "Name of the channel."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "code",
                                "name"
                              ],
                              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                            },
                            "external_user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "citizen": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "title": "Primary Key",
                                      "description": "Primary Key."
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "title": "Creation time of record",
                                      "description": "Creation time of record."
                                    },
                                    "mobile": {
                                      "type": "string",
                                      "pattern": "^[0-9]*$",
                                      "title": "Mobile number",
                                      "description": "Mobile number."
                                    },
                                    "name": {
                                      "type": "string",
                                      "title": "Real name, or equivalent nickname",
                                      "description": "Real name, or equivalent nickname."
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "created_at",
                                    "mobile",
                                    "name"
                                  ],
                                  "description": "Citizen activation info.",
                                  "title": "Citizen activation info",
                                  "nullable": true
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                                },
                                "application": {
                                  "type": "string",
                                  "title": "Identifier code of the external service",
                                  "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                                },
                                "uid": {
                                  "type": "string",
                                  "title": "Identifier key of external user from the external system",
                                  "description": "Identifier key of external user from the external system."
                                },
                                "nickname": {
                                  "type": "string",
                                  "title": "Nickname of external user in the external system",
                                  "description": "Nickname of external user in the external system."
                                },
                                "data": {
                                  "description": "Additional information about external user from the external\nsystem."
                                }
                              },
                              "required": [
                                "id",
                                "citizen",
                                "created_at",
                                "application",
                                "uid",
                                "nickname",
                                "data"
                              ],
                              "description": "External user information.\n\nWhen the customer has come frome an external service.",
                              "title": "External user information",
                              "nullable": true
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "title": "Connection address",
                              "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                            },
                            "referrer": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true,
                              "title": "Referrer address",
                              "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                            },
                            "ip": {
                              "oneOf": [
                                {
                                  "type": "string",
                                  "format": "ipv4"
                                },
                                {
                                  "type": "string",
                                  "format": "ipv6"
                                }
                              ],
                              "title": "Connection IP Address",
                              "description": "Connection IP Address."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of the connection record",
                              "description": "Creation time of the connection record."
                            }
                          },
                          "required": [
                            "id",
                            "channel",
                            "external_user",
                            "href",
                            "referrer",
                            "ip",
                            "created_at"
                          ],
                          "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "customer",
                        "citizen",
                        "id",
                        "created_at"
                      ],
                      "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "customer"
                          ],
                          "title": "Discriminant for the type of customer",
                          "description": "Discriminant for the type of customer."
                        },
                        "member": {
                          "type": "object",
                          "properties": {
                            "citizen": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "mobile": {
                                  "type": "string",
                                  "pattern": "^[0-9]*$",
                                  "title": "Mobile number",
                                  "description": "Mobile number."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                              "title": "Citizen information",
                              "nullable": true
                            },
                            "seller": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation tmie of record",
                                  "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                                }
                              },
                              "required": [
                                "id",
                                "created_at"
                              ],
                              "description": "Seller information.\n\nIf the member also signed up as a seller.",
                              "title": "Seller information",
                              "nullable": true
                            },
                            "administrator": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                                }
                              },
                              "required": [
                                "id",
                                "created_at"
                              ],
                              "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                              "title": "Administrator information",
                              "nullable": true
                            },
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname that uniquely identifies the member",
                              "description": "Nickname that uniquely identifies the member."
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "title": "Primary Key",
                                    "description": "Primary Key."
                                  },
                                  "value": {
                                    "type": "string",
                                    "format": "email",
                                    "title": "Email address value",
                                    "description": "Email address value."
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "title": "Creation time of record",
                                    "description": "Creation time of record."
                                  }
                                },
                                "required": [
                                  "id",
                                  "value",
                                  "created_at"
                                ],
                                "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                              },
                              "title": "List of emails",
                              "description": "List of emails."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                            }
                          },
                          "required": [
                            "citizen",
                            "seller",
                            "administrator",
                            "id",
                            "nickname",
                            "emails",
                            "created_at"
                          ],
                          "description": "Membership information.\n\nIf the customer has joined as a member.",
                          "title": "Membership information",
                          "nullable": true
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "channel": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "code": {
                              "type": "string",
                              "title": "Identifier code",
                              "description": "Identifier code."
                            },
                            "name": {
                              "type": "string",
                              "title": "Name of the channel",
                              "description": "Name of the channel."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "code",
                            "name"
                          ],
                          "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                        },
                        "external_user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "citizen": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "title": "Primary Key",
                                  "description": "Primary Key."
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "title": "Creation time of record",
                                  "description": "Creation time of record."
                                },
                                "mobile": {
                                  "type": "string",
                                  "pattern": "^[0-9]*$",
                                  "title": "Mobile number",
                                  "description": "Mobile number."
                                },
                                "name": {
                                  "type": "string",
                                  "title": "Real name, or equivalent nickname",
                                  "description": "Real name, or equivalent nickname."
                                }
                              },
                              "required": [
                                "id",
                                "created_at",
                                "mobile",
                                "name"
                              ],
                              "description": "Citizen activation info.",
                              "title": "Citizen activation info",
                              "nullable": true
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                            },
                            "application": {
                              "type": "string",
                              "title": "Identifier code of the external service",
                              "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                            },
                            "uid": {
                              "type": "string",
                              "title": "Identifier key of external user from the external system",
                              "description": "Identifier key of external user from the external system."
                            },
                            "nickname": {
                              "type": "string",
                              "title": "Nickname of external user in the external system",
                              "description": "Nickname of external user in the external system."
                            },
                            "data": {
                              "description": "Additional information about external user from the external\nsystem."
                            }
                          },
                          "required": [
                            "id",
                            "citizen",
                            "created_at",
                            "application",
                            "uid",
                            "nickname",
                            "data"
                          ],
                          "description": "External user information.\n\nWhen the customer has come frome an external service.",
                          "title": "External user information",
                          "nullable": true
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "title": "Connection address",
                          "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                        },
                        "referrer": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true,
                          "title": "Referrer address",
                          "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                        },
                        "ip": {
                          "oneOf": [
                            {
                              "type": "string",
                              "format": "ipv4"
                            },
                            {
                              "type": "string",
                              "format": "ipv6"
                            }
                          ],
                          "title": "Connection IP Address",
                          "description": "Connection IP Address."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of the connection record",
                          "description": "Creation time of the connection record."
                        }
                      },
                      "required": [
                        "type",
                        "member",
                        "citizen",
                        "id",
                        "channel",
                        "external_user",
                        "href",
                        "referrer",
                        "ip",
                        "created_at"
                      ],
                      "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                    }
                  ]
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "parent_id": {
                  "type": "string",
                  "format": "uuid",
                  "nullable": true,
                  "title": "Parent comment's ID",
                  "description": "Parent comment's ID."
                },
                "snapshots": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of snapshot record",
                        "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                      },
                      "format": {
                        "type": "string",
                        "enum": [
                          "html",
                          "md",
                          "txt"
                        ]
                      },
                      "body": {
                        "type": "string",
                        "title": "Content body of comment",
                        "description": "Content body of comment."
                      },
                      "files": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "maxLength": 255,
                              "title": "File name, except extension",
                              "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                            },
                            "extension": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 8,
                              "nullable": true,
                              "title": "Extension",
                              "description": "Extension.\n\nPossible to omit like `README` case."
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "title": "URL path of the real file",
                              "description": "URL path of the real file."
                            }
                          },
                          "required": [
                            "name",
                            "extension",
                            "url"
                          ]
                        },
                        "title": "List of attachment files",
                        "description": "List of attachment files."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "format",
                      "body",
                      "files"
                    ],
                    "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
                  },
                  "minItems": 1,
                  "title": "List of snapshot contents",
                  "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of comment",
                  "description": "Creation time of comment."
                }
              },
              "required": [
                "writer",
                "id",
                "parent_id",
                "snapshots",
                "created_at"
              ],
              "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every inquiry comments.\n\nList up every {@link IShoppingSaleInquiryComment inquiry comments} of a\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}\nwith {@link IPage pagination}.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingSaleInquiryComment.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleInquiryComment.IRequest.sort sort condition}.\n\nBy the way, if you're a {@link IShoppingSeller seller}, you can only access\nto the your own {@link IShoppingSale sale}'s inquiries. Otherwise, you\ncan access to every inquiries of the sales."
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/sales/{saleId}/reviews/{inquiryId}/comments/{id}",
      "name": "shoppings_sellers_sales_reviews_comments_getBySaleidAndInquiryidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry comment's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "writer": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "administrator"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from administrator info.\n\nInstead of accessing to the administrator information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.administrator },\n`IShoppingAdministrator.IInvert` starts from the administrator information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "seller"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Invert information of member.\n\nThis invert member information has been designed to be used for another\ninvert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "channel": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "code": {
                            "type": "string",
                            "title": "Identifier code",
                            "description": "Identifier code."
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of the channel",
                            "description": "Name of the channel."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "code",
                          "name"
                        ],
                        "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                      },
                      "external_user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "citizen": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              },
                              "mobile": {
                                "type": "string",
                                "pattern": "^[0-9]*$",
                                "title": "Mobile number",
                                "description": "Mobile number."
                              },
                              "name": {
                                "type": "string",
                                "title": "Real name, or equivalent nickname",
                                "description": "Real name, or equivalent nickname."
                              }
                            },
                            "required": [
                              "id",
                              "created_at",
                              "mobile",
                              "name"
                            ],
                            "description": "Citizen activation info.",
                            "title": "Citizen activation info",
                            "nullable": true
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                          },
                          "application": {
                            "type": "string",
                            "title": "Identifier code of the external service",
                            "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                          },
                          "uid": {
                            "type": "string",
                            "title": "Identifier key of external user from the external system",
                            "description": "Identifier key of external user from the external system."
                          },
                          "nickname": {
                            "type": "string",
                            "title": "Nickname of external user in the external system",
                            "description": "Nickname of external user in the external system."
                          },
                          "data": {
                            "description": "Additional information about external user from the external\nsystem."
                          }
                        },
                        "required": [
                          "id",
                          "citizen",
                          "created_at",
                          "application",
                          "uid",
                          "nickname",
                          "data"
                        ],
                        "description": "External user information.\n\nWhen the customer has come frome an external service.",
                        "title": "External user information",
                        "nullable": true
                      },
                      "href": {
                        "type": "string",
                        "format": "uri",
                        "title": "Connection address",
                        "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                      },
                      "referrer": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Referrer address",
                        "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                      },
                      "ip": {
                        "oneOf": [
                          {
                            "type": "string",
                            "format": "ipv4"
                          },
                          {
                            "type": "string",
                            "format": "ipv6"
                          }
                        ],
                        "title": "Connection IP Address",
                        "description": "Connection IP Address."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of the connection record",
                        "description": "Creation time of the connection record."
                      }
                    },
                    "required": [
                      "id",
                      "channel",
                      "external_user",
                      "href",
                      "referrer",
                      "ip",
                      "created_at"
                    ],
                    "description": "Inverted customer informatino.\n\nThis inverted customer information has been designed to be used for\nanother invert informations of sellers and administrators like below.\n\n- {@link IShoppingSeller.IInvert }\n- {@link IShoppingAdministrator.IInvert }"
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen verification information.\n\n`IShoppingCitizen` is an entity that records the user's\n{@link name real name} and {@link mobile } input information.\n\nFor reference, in South Korea, real name authentication is required for\ne-commerce participants, so the name attribute is important. However, the\nsituation is different overseas, so in reality, mobile attributes are the\nmost important, and identification of individual person is also done based\non this mobile.\n\nOf course, real name and mobile phone authentication information are\nencrypted and stored."
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "customer",
                  "citizen",
                  "id",
                  "created_at"
                ],
                "description": "Invert information starting from seller info.\n\nInstead of accessing to the seller information from the\n{@link IShoppingCustomer.member } -> {@link IShoppingMember.seller },\n`IShoppingSeller.IInvert` starts from the seller information\nand access to the customer, member and {@link IShoppingCitizen citizen}\ninformations inversely."
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "customer"
                    ],
                    "title": "Discriminant for the type of customer",
                    "description": "Discriminant for the type of customer."
                  },
                  "member": {
                    "type": "object",
                    "properties": {
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                        "title": "Citizen information",
                        "nullable": true
                      },
                      "seller": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation tmie of record",
                            "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Seller information.\n\nIf the member also signed up as a seller.",
                        "title": "Seller information",
                        "nullable": true
                      },
                      "administrator": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                          }
                        },
                        "required": [
                          "id",
                          "created_at"
                        ],
                        "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                        "title": "Administrator information",
                        "nullable": true
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname that uniquely identifies the member",
                        "description": "Nickname that uniquely identifies the member."
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "value": {
                              "type": "string",
                              "format": "email",
                              "title": "Email address value",
                              "description": "Email address value."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            }
                          },
                          "required": [
                            "id",
                            "value",
                            "created_at"
                          ],
                          "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                        },
                        "title": "List of emails",
                        "description": "List of emails."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                      }
                    },
                    "required": [
                      "citizen",
                      "seller",
                      "administrator",
                      "id",
                      "nickname",
                      "emails",
                      "created_at"
                    ],
                    "description": "Membership information.\n\nIf the customer has joined as a member.",
                    "title": "Membership information",
                    "nullable": true
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "channel": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "code": {
                        "type": "string",
                        "title": "Identifier code",
                        "description": "Identifier code."
                      },
                      "name": {
                        "type": "string",
                        "title": "Name of the channel",
                        "description": "Name of the channel."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "code",
                      "name"
                    ],
                    "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                  },
                  "external_user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "citizen": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Primary Key",
                            "description": "Primary Key."
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Creation time of record",
                            "description": "Creation time of record."
                          },
                          "mobile": {
                            "type": "string",
                            "pattern": "^[0-9]*$",
                            "title": "Mobile number",
                            "description": "Mobile number."
                          },
                          "name": {
                            "type": "string",
                            "title": "Real name, or equivalent nickname",
                            "description": "Real name, or equivalent nickname."
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "mobile",
                          "name"
                        ],
                        "description": "Citizen activation info.",
                        "title": "Citizen activation info",
                        "nullable": true
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                      },
                      "application": {
                        "type": "string",
                        "title": "Identifier code of the external service",
                        "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                      },
                      "uid": {
                        "type": "string",
                        "title": "Identifier key of external user from the external system",
                        "description": "Identifier key of external user from the external system."
                      },
                      "nickname": {
                        "type": "string",
                        "title": "Nickname of external user in the external system",
                        "description": "Nickname of external user in the external system."
                      },
                      "data": {
                        "description": "Additional information about external user from the external\nsystem."
                      }
                    },
                    "required": [
                      "id",
                      "citizen",
                      "created_at",
                      "application",
                      "uid",
                      "nickname",
                      "data"
                    ],
                    "description": "External user information.\n\nWhen the customer has come frome an external service.",
                    "title": "External user information",
                    "nullable": true
                  },
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "title": "Connection address",
                    "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                  },
                  "referrer": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true,
                    "title": "Referrer address",
                    "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                  },
                  "ip": {
                    "oneOf": [
                      {
                        "type": "string",
                        "format": "ipv4"
                      },
                      {
                        "type": "string",
                        "format": "ipv6"
                      }
                    ],
                    "title": "Connection IP Address",
                    "description": "Connection IP Address."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of the connection record",
                    "description": "Creation time of the connection record."
                  }
                },
                "required": [
                  "type",
                  "member",
                  "citizen",
                  "id",
                  "channel",
                  "external_user",
                  "href",
                  "referrer",
                  "ip",
                  "created_at"
                ],
                "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "parent_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "title": "Parent comment's ID",
            "description": "Parent comment's ID."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "id",
                "created_at",
                "format",
                "body",
                "files"
              ],
              "description": "Snapshot of comment.\n\n`IBbsArticleComment.ISnapshot` is a snapshot entity that contains\nthe contents of the comment.\n\nAs mentioned in {@link IBbsArticleComment }, designed to keep evidence\nand prevent fraud."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when a comment being created, and is\naccumulated every time the comment is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of comment",
            "description": "Creation time of comment."
          }
        },
        "required": [
          "writer",
          "id",
          "parent_id",
          "snapshots",
          "created_at"
        ],
        "description": "A comment written on an inquiry article.\n\n`IShoppingSaleInquiryComment` is a subtype entity of {@link IBbsArticleComment },\nand is used when you want to communicate with multiple people about an\n{@link IShoppingSaleInquiry inquiry} written by a\n{@link IShoppingCustomer customer}.\n\nFor reference, only related parties can write comments for\n{@link IShoppingSeller sellers}, but there is no limit to\n{@link IShoppingCustomer customers}. In other words, anyone customer can\nfreely write a comment, even if they are not the person who wrote the inquiry."
      },
      "description": "Get an inquiry comment info.\n\nGet a detailed {@link IShoppingSaleInquiryComment inquiry comment}\ninformation of a {@link IShoppingSaleQuestion question} or\n{@link IShoppingSaleReview review}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s inquiry comment.\nOtherwise, you can access to every inquiry comments of the sales."
    },
    {
      "method": "put",
      "path": "/shoppings/sellers/sales/{saleId}/reviews/{inquiryId}/comments/{id}",
      "name": "shoppings_sellers_sales_reviews_comments_putBySaleidAndInquiryidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "inquiryId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged inquiry's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target inquiry comment's "
            },
            "body": {
              "type": "object",
              "properties": {
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ],
                  "title": "Format of body",
                  "description": "Format of body.\n\nSame meaning with extension like `html`, `md`, `txt`."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of comment",
                  "description": "Content body of comment."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "format",
                "body",
                "files"
              ],
              "description": "Creation information of the comment."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of snapshot record",
            "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or comment."
          },
          "format": {
            "type": "string",
            "enum": [
              "html",
              "md",
              "txt"
            ]
          },
          "body": {
            "type": "string",
            "title": "Content body of comment",
            "description": "Content body of comment."
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "title": "File name, except extension",
                  "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                },
                "extension": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 8,
                  "nullable": true,
                  "title": "Extension",
                  "description": "Extension.\n\nPossible to omit like `README` case."
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "title": "URL path of the real file",
                  "description": "URL path of the real file."
                }
              },
              "required": [
                "name",
                "extension",
                "url"
              ]
            },
            "title": "List of attachment files",
            "description": "List of attachment files."
          }
        },
        "required": [
          "id",
          "created_at",
          "format",
          "body",
          "files"
        ],
        "description": "Snapshot content of the comment."
      },
      "description": "Update an inquiry comment.\n\nUpdate an {@link IShoppingSaleInquiryComment inquiry comment} to a specific\n{@link IShoppingSaleQuestion question} or {@link IShoppingSaleReview review}.\n\nBy the way, as is the general policy of this shopping mall regarding\ncomments, modifying a comment does not actually change the existing content.\nModified content is accumulated and recorded in the existing comment record\nas a new {@link IShoppingSaleInquiryComment.ISnapshot snapshot}. And this\nis made public to everyone, who can read this inquiry comment.\n\nThis is to prevent customers or sellers from modifying their comments and\nmanipulating the circumstances due to the nature of e-commerce, where\ndisputes easily arise. That is, to preserve evidence."
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/sales/{saleId}/reviews",
      "name": "shoppings_sellers_sales_reviews_patchBySaleid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "answered": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "title": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "title_or_body": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "minimum": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maximum": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at",
                      "-nickname",
                      "-answered_at",
                      "-title",
                      "-updated_at",
                      "+nickname",
                      "+answered_at",
                      "+title",
                      "+updated_at",
                      "-score",
                      "+score"
                    ]
                  },
                  "title": "Sorting conditions",
                  "description": "Sorting conditions."
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of summarized informations with pagination searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "number",
                  "title": "Score of the review",
                  "description": "Score of the review."
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "customer"
                      ],
                      "title": "Discriminant for the type of customer",
                      "description": "Discriminant for the type of customer."
                    },
                    "member": {
                      "type": "object",
                      "properties": {
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "seller": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\nIf the member also signed up as a seller.",
                          "title": "Seller information",
                          "nullable": true
                        },
                        "administrator": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                          "title": "Administrator information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname that uniquely identifies the member",
                          "description": "Nickname that uniquely identifies the member."
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "value": {
                                "type": "string",
                                "format": "email",
                                "title": "Email address value",
                                "description": "Email address value."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "created_at"
                            ],
                            "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                          },
                          "title": "List of emails",
                          "description": "List of emails."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                        }
                      },
                      "required": [
                        "citizen",
                        "seller",
                        "administrator",
                        "id",
                        "nickname",
                        "emails",
                        "created_at"
                      ],
                      "description": "Membership information.\n\nIf the customer has joined as a member.",
                      "title": "Membership information",
                      "nullable": true
                    },
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                      "title": "Citizen information",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "code": {
                          "type": "string",
                          "title": "Identifier code",
                          "description": "Identifier code."
                        },
                        "name": {
                          "type": "string",
                          "title": "Name of the channel",
                          "description": "Name of the channel."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ],
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                    },
                    "external_user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen activation info.",
                          "title": "Citizen activation info",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                        },
                        "application": {
                          "type": "string",
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                        },
                        "uid": {
                          "type": "string",
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system."
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "application",
                        "uid",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "title": "External user information",
                      "nullable": true
                    },
                    "href": {
                      "type": "string",
                      "format": "uri",
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                    },
                    "referrer": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true,
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                    },
                    "ip": {
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ],
                      "title": "Connection IP Address",
                      "description": "Connection IP Address."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record."
                    }
                  },
                  "required": [
                    "type",
                    "member",
                    "citizen",
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ],
                  "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                },
                "answer": {
                  "type": "object",
                  "properties": {
                    "seller": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "id",
                        "created_at"
                      ],
                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the last snapshot",
                      "description": "Title of the last snapshot."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the article",
                      "description": "Creation time of the article."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Modification time of the article",
                      "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                    }
                  },
                  "required": [
                    "seller",
                    "id",
                    "title",
                    "created_at",
                    "updated_at"
                  ],
                  "title": "Formal answer for the inquiry by the seller",
                  "description": "Formal answer for the inquiry by the seller.",
                  "nullable": true
                },
                "read_by_seller": {
                  "type": "boolean",
                  "title": "Whether the seller has viewed the inquiry or not",
                  "description": "Whether the seller has viewed the inquiry or not."
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the last snapshot",
                  "description": "Title of the last snapshot."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the article",
                  "description": "Creation time of the article."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Modification time of the article",
                  "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                }
              },
              "required": [
                "score",
                "customer",
                "answer",
                "read_by_seller",
                "id",
                "title",
                "created_at",
                "updated_at"
              ],
              "description": "Summarized information of the review."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every summarized reviews.\n\nList up every {@link IShoppingSaleReview.ISummary summarized reviews} of a\n{@link IShoppingSale sale}.\n\nAs you can see, returned reviews are summarized, not detailed. If you want\nto get the detailed information of a review, use {@link adridges } function\nor {@link at } function for each article.\n\nAlso, returned review has {@link IShoppingSaleReview.ISummary.answer }\nproperty which means the formal answer from the {@link IShoppingSeller }.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s reviews. Otherwise,\nyou can access to every reviews of the sales.\n\nBy the way, if you want, you can limit the result by configuring\n{@link IShoppingSaleReview.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleReview.IRequest.sort sort condition}."
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/sales/{saleId}/reviews/abridges",
      "name": "shoppings_sellers_sales_reviews_abridges_patchBySaleid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "answered": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "title": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "title_or_body": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "minimum": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maximum": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at",
                      "-nickname",
                      "-answered_at",
                      "-title",
                      "-updated_at",
                      "+nickname",
                      "+answered_at",
                      "+title",
                      "+updated_at",
                      "-score",
                      "+score"
                    ]
                  },
                  "title": "Sorting conditions",
                  "description": "Sorting conditions."
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of summarized informations with pagination searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "title": "Score of the review",
                  "description": "Score of the review."
                },
                "customer": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "customer"
                      ],
                      "title": "Discriminant for the type of customer",
                      "description": "Discriminant for the type of customer."
                    },
                    "member": {
                      "type": "object",
                      "properties": {
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                          "title": "Citizen information",
                          "nullable": true
                        },
                        "seller": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation tmie of record",
                              "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Seller information.\n\nIf the member also signed up as a seller.",
                          "title": "Seller information",
                          "nullable": true
                        },
                        "administrator": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                            }
                          },
                          "required": [
                            "id",
                            "created_at"
                          ],
                          "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                          "title": "Administrator information",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname that uniquely identifies the member",
                          "description": "Nickname that uniquely identifies the member."
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "title": "Primary Key",
                                "description": "Primary Key."
                              },
                              "value": {
                                "type": "string",
                                "format": "email",
                                "title": "Email address value",
                                "description": "Email address value."
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Creation time of record",
                                "description": "Creation time of record."
                              }
                            },
                            "required": [
                              "id",
                              "value",
                              "created_at"
                            ],
                            "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                          },
                          "title": "List of emails",
                          "description": "List of emails."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                        }
                      },
                      "required": [
                        "citizen",
                        "seller",
                        "administrator",
                        "id",
                        "nickname",
                        "emails",
                        "created_at"
                      ],
                      "description": "Membership information.\n\nIf the customer has joined as a member.",
                      "title": "Membership information",
                      "nullable": true
                    },
                    "citizen": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "mobile": {
                          "type": "string",
                          "pattern": "^[0-9]*$",
                          "title": "Mobile number",
                          "description": "Mobile number."
                        },
                        "name": {
                          "type": "string",
                          "title": "Real name, or equivalent nickname",
                          "description": "Real name, or equivalent nickname."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "mobile",
                        "name"
                      ],
                      "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                      "title": "Citizen information",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "channel": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        },
                        "code": {
                          "type": "string",
                          "title": "Identifier code",
                          "description": "Identifier code."
                        },
                        "name": {
                          "type": "string",
                          "title": "Name of the channel",
                          "description": "Name of the channel."
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "code",
                        "name"
                      ],
                      "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
                    },
                    "external_user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "citizen": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "title": "Primary Key",
                              "description": "Primary Key."
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Creation time of record",
                              "description": "Creation time of record."
                            },
                            "mobile": {
                              "type": "string",
                              "pattern": "^[0-9]*$",
                              "title": "Mobile number",
                              "description": "Mobile number."
                            },
                            "name": {
                              "type": "string",
                              "title": "Real name, or equivalent nickname",
                              "description": "Real name, or equivalent nickname."
                            }
                          },
                          "required": [
                            "id",
                            "created_at",
                            "mobile",
                            "name"
                          ],
                          "description": "Citizen activation info.",
                          "title": "Citizen activation info",
                          "nullable": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                        },
                        "application": {
                          "type": "string",
                          "title": "Identifier code of the external service",
                          "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                        },
                        "uid": {
                          "type": "string",
                          "title": "Identifier key of external user from the external system",
                          "description": "Identifier key of external user from the external system."
                        },
                        "nickname": {
                          "type": "string",
                          "title": "Nickname of external user in the external system",
                          "description": "Nickname of external user in the external system."
                        },
                        "data": {
                          "description": "Additional information about external user from the external\nsystem."
                        }
                      },
                      "required": [
                        "id",
                        "citizen",
                        "created_at",
                        "application",
                        "uid",
                        "nickname",
                        "data"
                      ],
                      "description": "External user information.\n\nWhen the customer has come frome an external service.",
                      "title": "External user information",
                      "nullable": true
                    },
                    "href": {
                      "type": "string",
                      "format": "uri",
                      "title": "Connection address",
                      "description": "Connection address.\n\nSame with {@link window.location.href } of client."
                    },
                    "referrer": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true,
                      "title": "Referrer address",
                      "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
                    },
                    "ip": {
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "ipv4"
                        },
                        {
                          "type": "string",
                          "format": "ipv6"
                        }
                      ],
                      "title": "Connection IP Address",
                      "description": "Connection IP Address."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the connection record",
                      "description": "Creation time of the connection record."
                    }
                  },
                  "required": [
                    "type",
                    "member",
                    "citizen",
                    "id",
                    "channel",
                    "external_user",
                    "href",
                    "referrer",
                    "ip",
                    "created_at"
                  ],
                  "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
                },
                "answer": {
                  "type": "object",
                  "properties": {
                    "seller": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation tmie of record",
                          "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                        }
                      },
                      "required": [
                        "id",
                        "created_at"
                      ],
                      "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of the last snapshot",
                      "description": "Title of the last snapshot."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of the article",
                      "description": "Creation time of the article."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Modification time of the article",
                      "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "html",
                        "md",
                        "txt"
                      ]
                    },
                    "body": {
                      "type": "string",
                      "title": "Content body of article",
                      "description": "Content body of article."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "title": "File name, except extension",
                            "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                          },
                          "extension": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8,
                            "nullable": true,
                            "title": "Extension",
                            "description": "Extension.\n\nPossible to omit like `README` case."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "title": "URL path of the real file",
                            "description": "URL path of the real file."
                          }
                        },
                        "required": [
                          "name",
                          "extension",
                          "url"
                        ]
                      },
                      "title": "List of attachment files",
                      "description": "List of attachment files."
                    }
                  },
                  "required": [
                    "seller",
                    "id",
                    "title",
                    "created_at",
                    "updated_at",
                    "format",
                    "body",
                    "files"
                  ],
                  "title": "Formal answer for the inquiry by the seller",
                  "description": "Formal answer for the inquiry by the seller.",
                  "nullable": true
                },
                "read_by_seller": {
                  "type": "boolean",
                  "title": "Whether the seller has viewed the inquiry or not",
                  "description": "Whether the seller has viewed the inquiry or not."
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "title": {
                  "type": "string",
                  "title": "Title of the last snapshot",
                  "description": "Title of the last snapshot."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the article",
                  "description": "Creation time of the article."
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Modification time of the article",
                  "description": "Modification time of the article.\n\nIn other words, the time when the last snapshot was created."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "score",
                "customer",
                "answer",
                "read_by_seller",
                "id",
                "title",
                "created_at",
                "updated_at",
                "format",
                "body",
                "files"
              ],
              "description": "Abridged information of the review."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every abridged reviews.\n\nList up every {@link IShoppingSaleReview.IAbridge abridged reviews} of\na {@link IShoppingSale sale}.\n\nAs you can see, returned reviews are abridged, not detailed. If you want\nto get the detailed information of a review, use {@link at } function\nfor each article.\n\nAlso, returned review has {@link IShoppingSaleReview.IAridge.answer }\nproperty which means the formal answer from the {@link IShoppingSeller }.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s reviews. Otherwise,\nyou can access to every reviews of the sales.\n\nBy the way, if you want, you can limit the result by configuring\n{@link IShoppingSaleReview.IRequest.search search condition} in the\nrequest body. Also, it is possible to customize sequence order of records\nby configuring {@link IShoppingSaleReview.IRequest.sort sort condition}."
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/sales/{saleId}/reviews/{id}",
      "name": "shoppings_sellers_sales_reviews_getBySaleidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target review's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "review"
            ],
            "title": "Type of the derived inquiry",
            "description": "Type of the derived inquiry.\n\n- `question`: {@link IShoppingSaleQuestion }\n- `review`: {@link IShoppingSaleReview }"
          },
          "customer": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customer"
                ],
                "title": "Discriminant for the type of customer",
                "description": "Discriminant for the type of customer."
              },
              "member": {
                "type": "object",
                "properties": {
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen information.\n\nOnly when has verified as a citizen, with mobile number and real name.\n\nFor reference, if the member has signed up as a seller or administrator,\nthis citizen information must be.",
                    "title": "Citizen information",
                    "nullable": true
                  },
                  "seller": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation tmie of record",
                        "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Seller information.\n\nIf the member also signed up as a seller.",
                    "title": "Seller information",
                    "nullable": true
                  },
                  "administrator": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record.\n\nAnother words, the time when the administrator has signed up."
                      }
                    },
                    "required": [
                      "id",
                      "created_at"
                    ],
                    "description": "Administrator information.\n\nIf the member also signed up as an administrator.",
                    "title": "Administrator information",
                    "nullable": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname that uniquely identifies the member",
                    "description": "Nickname that uniquely identifies the member."
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "title": "Primary Key",
                          "description": "Primary Key."
                        },
                        "value": {
                          "type": "string",
                          "format": "email",
                          "title": "Email address value",
                          "description": "Email address value."
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "title": "Creation time of record",
                          "description": "Creation time of record."
                        }
                      },
                      "required": [
                        "id",
                        "value",
                        "created_at"
                      ],
                      "description": "Email address of member.\n\nThis shopping mall system allows multiple email addresses to be\nregistered for one {@link IShoppingMember member}. If you don't have to\nplan such multiple email addresses, just use only one."
                    },
                    "title": "List of emails",
                    "description": "List of emails."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother words, the time when the member has signed up."
                  }
                },
                "required": [
                  "citizen",
                  "seller",
                  "administrator",
                  "id",
                  "nickname",
                  "emails",
                  "created_at"
                ],
                "description": "Membership information.\n\nIf the customer has joined as a member.",
                "title": "Membership information",
                "nullable": true
              },
              "citizen": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "mobile": {
                    "type": "string",
                    "pattern": "^[0-9]*$",
                    "title": "Mobile number",
                    "description": "Mobile number."
                  },
                  "name": {
                    "type": "string",
                    "title": "Real name, or equivalent nickname",
                    "description": "Real name, or equivalent nickname."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "mobile",
                  "name"
                ],
                "description": "Citizen information.\n\nIf the customer has verified his real name and mobile number.",
                "title": "Citizen information",
                "nullable": true
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "channel": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record."
                  },
                  "code": {
                    "type": "string",
                    "title": "Identifier code",
                    "description": "Identifier code."
                  },
                  "name": {
                    "type": "string",
                    "title": "Name of the channel",
                    "description": "Name of the channel."
                  }
                },
                "required": [
                  "id",
                  "created_at",
                  "code",
                  "name"
                ],
                "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
              },
              "external_user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "citizen": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Primary Key",
                        "description": "Primary Key."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creation time of record",
                        "description": "Creation time of record."
                      },
                      "mobile": {
                        "type": "string",
                        "pattern": "^[0-9]*$",
                        "title": "Mobile number",
                        "description": "Mobile number."
                      },
                      "name": {
                        "type": "string",
                        "title": "Real name, or equivalent nickname",
                        "description": "Real name, or equivalent nickname."
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "mobile",
                      "name"
                    ],
                    "description": "Citizen activation info.",
                    "title": "Citizen activation info",
                    "nullable": true
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation time of record",
                    "description": "Creation time of record.\n\nAnother word, first time when the external user connected."
                  },
                  "application": {
                    "type": "string",
                    "title": "Identifier code of the external service",
                    "description": "Identifier code of the external service.\n\nIt can be same with {@link IShoppingChannel.code } in common."
                  },
                  "uid": {
                    "type": "string",
                    "title": "Identifier key of external user from the external system",
                    "description": "Identifier key of external user from the external system."
                  },
                  "nickname": {
                    "type": "string",
                    "title": "Nickname of external user in the external system",
                    "description": "Nickname of external user in the external system."
                  },
                  "data": {
                    "description": "Additional information about external user from the external\nsystem."
                  }
                },
                "required": [
                  "id",
                  "citizen",
                  "created_at",
                  "application",
                  "uid",
                  "nickname",
                  "data"
                ],
                "description": "External user information.\n\nWhen the customer has come frome an external service.",
                "title": "External user information",
                "nullable": true
              },
              "href": {
                "type": "string",
                "format": "uri",
                "title": "Connection address",
                "description": "Connection address.\n\nSame with {@link window.location.href } of client."
              },
              "referrer": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "title": "Referrer address",
                "description": "Referrer address.\n\nSame with {@link window.document.referrer } of client."
              },
              "ip": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "type": "string",
                    "format": "ipv6"
                  }
                ],
                "title": "Connection IP Address",
                "description": "Connection IP Address."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of the connection record",
                "description": "Creation time of the connection record."
              }
            },
            "required": [
              "type",
              "member",
              "citizen",
              "id",
              "channel",
              "external_user",
              "href",
              "referrer",
              "ip",
              "created_at"
            ],
            "description": "Customer information, but not a person but a connection basis.\n\n`IShoppingCustomer` is an entity that literally embodies the information of\nthose who participated in the market as customers. By the way, the\n`IShoppingCustomer` does not mean a person, but a connection basis. Therefore,\neven if the same person connects to the shopping mall multiple, multiple\nrecords are created in `IShoppingCustomer`.\n\nThe first purpose of this is to track the customer's inflow path in detail,\nand it is for cases where the same person enters as a non-member,\n{@link IShoppingCartCommodity puts items in the shopping cart} in advance,\nand only authenticates their {@link IShoppingCitizen real name} or\nregisters/logs in at the moment of {@link IShoppingOrderPublish payment}.\nIt is the second. Lastly, it is to accurately track the activities that\na person performs at the shopping mall in various ways like below.\n\n- Same person comes from an {@link IShoppingExternalUser external service}\n- Same person creates multiple accounts\n- Same person makes a {@link IShoppingOrderPublish purchase} as a non-member with only {@link IShoppingCitizen real name authentication}\n- Same person acts both {@link IShoppingSeller seller} and {@link IShoppingAdministrator admin} at the same time\n\nTherefore, `IShoppingCustomer` can have multiple records with the same\n{@link IShoppingCitizen }, {@link IShoppingMember }, and\n{@link IShoppingExternalUser }. Additionally, if a customer signs up for\nmembership after verifying their real name or signs up for our service after\nbeing a user of an external service, all related records are changed at once.\nTherefore, identification and tracking of customers can be done very\nsystematically."
          },
          "answer": {
            "type": "object",
            "properties": {
              "seller": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "title": "Primary Key",
                    "description": "Primary Key."
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "title": "Creation tmie of record",
                    "description": "Creation tmie of record.\n\nAnother words, the time when the seller has signed up."
                  }
                },
                "required": [
                  "id",
                  "created_at"
                ],
                "description": "Seller information.\n\n`IShoppingSeller` is an entity that embodies a person who registers\n{@link IShoppingSale sales} to operate selling activities, with\n{@link IShoppingMember membership} joining.\n\nFor reference, unlike {@link IShoppingCustomer customers} which can\nparticipate even without membership joining, seller must join membership\nto operate sales. Also, seller must do the\n{@link IShoppingCitizen real-name and mobile authentication}, too."
              },
              "id": {
                "type": "string",
                "format": "uuid",
                "title": "Primary Key",
                "description": "Primary Key."
              },
              "snapshots": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Primary Key",
                      "description": "Primary Key."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Creation time of snapshot record",
                      "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "html",
                        "md",
                        "txt"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "title": "Title of article",
                      "description": "Title of article."
                    },
                    "body": {
                      "type": "string",
                      "title": "Content body of article",
                      "description": "Content body of article."
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 255,
                            "title": "File name, except extension",
                            "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                          },
                          "extension": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 8,
                            "nullable": true,
                            "title": "Extension",
                            "description": "Extension.\n\nPossible to omit like `README` case."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "title": "URL path of the real file",
                            "description": "URL path of the real file."
                          }
                        },
                        "required": [
                          "name",
                          "extension",
                          "url"
                        ]
                      },
                      "title": "List of attachment files",
                      "description": "List of attachment files."
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "format",
                    "title",
                    "body",
                    "files"
                  ],
                  "description": "Snapshot of article.\n\n`IBbsArticle.ISnapshot` is a snapshot entity that contains the contents of\nthe article, as mentioned in {@link IBbsArticle }, the contents of the article\nare separated from the article record to keep evidence and prevent fraud."
                },
                "minItems": 1,
                "title": "List of snapshot contents",
                "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "title": "Creation time of article",
                "description": "Creation time of article."
              }
            },
            "required": [
              "seller",
              "id",
              "snapshots",
              "created_at"
            ],
            "description": "Formal answer for the inquiry by the seller.",
            "title": "Formal answer for the inquiry by the seller",
            "nullable": true
          },
          "read_by_seller": {
            "type": "boolean",
            "title": "Whether the seller has viewed the inquiry or not",
            "description": "Whether the seller has viewed the inquiry or not."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "snapshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "title": "Score of the review",
                  "description": "Score of the review."
                },
                "id": {
                  "type": "string",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of snapshot record",
                  "description": "Creation time of snapshot record.\n\nIn other words, creation time or update time or article."
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "html",
                    "md",
                    "txt"
                  ]
                },
                "title": {
                  "type": "string",
                  "title": "Title of article",
                  "description": "Title of article."
                },
                "body": {
                  "type": "string",
                  "title": "Content body of article",
                  "description": "Content body of article."
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "File name, except extension",
                        "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                      },
                      "extension": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 8,
                        "nullable": true,
                        "title": "Extension",
                        "description": "Extension.\n\nPossible to omit like `README` case."
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "URL path of the real file",
                        "description": "URL path of the real file."
                      }
                    },
                    "required": [
                      "name",
                      "extension",
                      "url"
                    ]
                  },
                  "title": "List of attachment files",
                  "description": "List of attachment files."
                }
              },
              "required": [
                "score",
                "id",
                "created_at",
                "format",
                "title",
                "body",
                "files"
              ],
              "description": "Snapshot content of the review article."
            },
            "minItems": 1,
            "title": "List of snapshot contents",
            "description": "List of snapshot contents.\n\nIt is created for the first time when an article is created, and is\naccumulated every time the article is modified."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of article",
            "description": "Creation time of article."
          }
        },
        "required": [
          "type",
          "customer",
          "answer",
          "read_by_seller",
          "id",
          "snapshots",
          "created_at"
        ],
        "description": "Reviews for sale snapshots.\n\n`IShoppingSaleReview` is a subtype entity of {@link IShoppingSaleInquiry },\nand is used when a {@link IShoppingCustomer customer} purchases a\n{@link IShoppingSale sale} ({@link IShoppingSaleSnapshot snapshot} at the time)\nregistered by the {@link IShoppingSeller seller} as a product and leaves a\nreview and rating for it.\n\nFor reference, `IShoppingSaleReview` and\n{@link IShoppingOrderGod shopping_order_goods} have a logarithmic relationship\nof N: 1, but this does not mean that customers can continue to write reviews\nfor the same product indefinitely. Wouldn't there be restrictions, such as\nif you write a review once, you can write an additional review a month later?"
      },
      "description": "Get a review info.\n\nGet a detailed {@link IShoppingSaleReview review} information of a\n{@link IShoppingSale sale}.\n\nFor reference, if you're a {@link IShoppingSeller seller}, you can only\naccess to the your own {@link IShoppingSale sale}'s review. Otherwise\nyou are a {@link IShoppingCustomer customer}, you can access to every\nreviews of the sales."
    },
    {
      "method": "post",
      "path": "/shoppings/sellers/sales/{saleId}/snapshots/{id}/replica",
      "name": "shoppings_sellers_sales_snapshots_replica_postBySaleidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target snapshot's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "section_code": {
            "type": "string",
            "title": "Belonged section's {@link IShoppingSection.code }",
            "description": "Belonged section's {@link IShoppingSection.code }."
          },
          "status": {
            "type": "string",
            "enum": [
              "paused",
              "suspended"
            ],
            "nullable": true,
            "title": "Initial status of the sale",
            "description": "Initial status of the sale.\n\n`null` or `undefined`: No restriction\n`paused`: Starts with {@link ITimestamps.paused_at paused} status\n`suspended`: Starts with {@link ITimestamps.suspended_at suspended} status"
          },
          "opened_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Opening time of the sale",
            "description": "Opening time of the sale."
          },
          "closed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Closing time of the sale",
            "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever."
          },
          "content": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "format": {
                "type": "string",
                "enum": [
                  "html",
                  "md",
                  "txt"
                ]
              },
              "body": {
                "type": "string"
              },
              "files": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "title": "File name, except extension",
                      "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                    },
                    "extension": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 8,
                      "nullable": true,
                      "title": "Extension",
                      "description": "Extension.\n\nPossible to omit like `README` case."
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "title": "URL path of the real file",
                      "description": "URL path of the real file."
                    }
                  },
                  "required": [
                    "name",
                    "extension",
                    "url"
                  ]
                }
              },
              "thumbnails": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 255,
                      "title": "File name, except extension",
                      "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string."
                    },
                    "extension": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 8,
                      "nullable": true,
                      "title": "Extension",
                      "description": "Extension.\n\nPossible to omit like `README` case."
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "title": "URL path of the real file",
                      "description": "URL path of the real file."
                    }
                  },
                  "required": [
                    "name",
                    "extension",
                    "url"
                  ]
                }
              }
            },
            "required": [
              "title",
              "format",
              "body",
              "files",
              "thumbnails"
            ]
          },
          "channels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "title": "Target channel's {@link IShoppingChannel.code }",
                  "description": "Target channel's {@link IShoppingChannel.code }."
                },
                "category_ids": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "List of target categories' {@link IShoppingChannelCategory.id }s",
                  "description": "List of target categories' {@link IShoppingChannelCategory.id }s.\n\nIf empty, it means all categories of the channel is listing the sale."
                }
              },
              "required": [
                "code",
                "category_ids"
              ],
              "description": "Creation information of the target channel (and categories) of sale to sell."
            }
          },
          "units": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "options": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "string",
                              "number",
                              "boolean"
                            ],
                            "title": "Type of descriptive option",
                            "description": "Type of descriptive option.\n\nWhich typed value should be written when purchasing."
                          },
                          "name": {
                            "type": "string",
                            "title": "Readable name of the option",
                            "description": "Readable name of the option."
                          }
                        },
                        "required": [
                          "type",
                          "name"
                        ],
                        "description": "Creation information of the descriptive option."
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "select"
                            ],
                            "title": "Discriminant for the type of selectable option",
                            "description": "Discriminant for the type of selectable option."
                          },
                          "name": {
                            "type": "string",
                            "title": "Represents the name of the option",
                            "description": "Represents the name of the option."
                          },
                          "variable": {
                            "type": "boolean",
                            "title": "Whether the option is variable or not",
                            "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not."
                          },
                          "candidates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Represents the name of the candidate value",
                                  "description": "Represents the name of the candidate value."
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "description": "Creation information of the candidate value."
                            },
                            "minItems": 1,
                            "title": "List of candidate values",
                            "description": "List of candidate values."
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "variable",
                          "candidates"
                        ],
                        "description": "Creation information of the selectable option."
                      }
                    ]
                  },
                  "title": "List of options",
                  "description": "List of options."
                },
                "stocks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Representative name of the stock",
                        "description": "Representative name of the stock."
                      },
                      "price": {
                        "type": "object",
                        "properties": {
                          "nominal": {
                            "type": "number",
                            "minimum": 0,
                            "title": "Nominal price",
                            "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount."
                          },
                          "real": {
                            "type": "number",
                            "minimum": 0,
                            "title": "Real price to pay",
                            "description": "Real price to pay."
                          }
                        },
                        "required": [
                          "nominal",
                          "real"
                        ],
                        "description": "Shopping price interface."
                      },
                      "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "title": "Initial inventory quantity",
                        "description": "Initial inventory quantity."
                      },
                      "choices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "option_index": {
                              "type": "integer",
                              "description": "Target option's index number in\n{@link IShoppingSaleUnit.ICreate.options }."
                            },
                            "candidate_index": {
                              "type": "integer",
                              "description": "Target candidate's index number in\n{@link IShoppingSaleUnitSelectableOption.ICreate.candidates }."
                            }
                          },
                          "required": [
                            "option_index",
                            "candidate_index"
                          ],
                          "description": "Creation information of stock choice."
                        },
                        "title": "List of choices",
                        "description": "List of choices.\n\nWhich candidate values being chosen for each option."
                      }
                    },
                    "required": [
                      "name",
                      "price",
                      "quantity",
                      "choices"
                    ],
                    "description": "Creation information of the stock."
                  },
                  "minItems": 1,
                  "title": "List of final stocks",
                  "description": "List of final stocks."
                },
                "name": {
                  "type": "string",
                  "title": "Representative name of the unit",
                  "description": "Representative name of the unit."
                },
                "primary": {
                  "type": "boolean",
                  "title": "Whether the unit is primary or not",
                  "description": "Whether the unit is primary or not.\n\nJust a labeling value."
                },
                "required": {
                  "type": "boolean",
                  "title": "Whether the unit is required or not",
                  "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case."
                }
              },
              "required": [
                "options",
                "stocks",
                "name",
                "primary",
                "required"
              ],
              "description": "Creation information of sale unit."
            },
            "minItems": 1
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "section_code",
          "opened_at",
          "closed_at",
          "content",
          "channels",
          "units",
          "tags"
        ],
        "description": "Creation information of sale."
      },
      "description": "Get replica of a snapshot.\n\nGet a {@link IShoppingSale.ICreate } typed info of the target\n{@link IShoppingSaleSnapshot snapshot} record for replication.\n\nIt would be useful for creating a new replication {@link IShoppingSale sale}\nfrom the old snapshot."
    },
    {
      "method": "post",
      "path": "/shoppings/sellers/sales/{saleId}/units/{unitId}/stocks/{stockId}/supplements",
      "name": "shoppings_sellers_sales_units_stocks_supplements_postBySaleidAndUnitidAndStockid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "unitId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged unit's "
            },
            "stockId": {
              "type": "string",
              "format": "uuid",
              "description": "Target stock's "
            },
            "body": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "integer",
                  "title": "Supplemented quantity",
                  "description": "Supplemented quantity."
                }
              },
              "required": [
                "value"
              ],
              "description": "Creation information of the supplement."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "value": {
            "type": "integer",
            "title": "Supplemented quantity",
            "description": "Supplemented quantity."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of the record",
            "description": "Creation time of the record.\n\nAnother words, the time when inventory of the stock being supplemented."
          }
        },
        "required": [
          "id",
          "value",
          "created_at"
        ],
        "description": "Supplementation of inventory quantity of stock.\n\nYou know what? If a {@link IShoppingSaleUnitStock stock} has been sold over\nits {@link IShoppingSaleUnitStock.ICreate.quantity initial inventory quantity},\nthe stock can't be sold anymore, because of out of stock. In that case, how the\n{@link IShoppingSeller } should do?\n\nWhen the sotck is sold out, seller can supplement the inventory record by\nregistering this `IShoppingSaleUnitStockSupplement` record. Right, this\n`IShoppingSaleUnitStockSupplement` is an entity that embodies the\nsupplementation of the inventory quantity of the belonged stock."
      },
      "description": "Create a supplement.\n\nCreate a {@link IShoppingSaleUnitStockSupplement supplement history} of a\nspecific {@link IShoppingSaleUnitStock stock}.\n\nTherefore, {@link IShoppingSaleUnitStockInventory.income inventory} of the\ntarget stock will be increased by the\n{@link IShoppingSaleUnitStockSupplement.value supplement's value}."
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/sales/{saleId}/units/{unitId}/stocks/{stockId}/supplements",
      "name": "shoppings_sellers_sales_units_stocks_supplements_patchBySaleidAndUnitidAndStockid",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "unitId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged unit's "
            },
            "stockId": {
              "type": "string",
              "format": "uuid",
              "description": "Target stock's "
            },
            "body": {
              "type": "object",
              "properties": {
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-created_at",
                      "+created_at"
                    ]
                  },
                  "title": "Sortable columns",
                  "description": "Sortable columns."
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request information of the stock supplement list."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "value": {
                  "type": "integer",
                  "title": "Supplemented quantity",
                  "description": "Supplemented quantity."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of the record",
                  "description": "Creation time of the record.\n\nAnother words, the time when inventory of the stock being supplemented."
                }
              },
              "required": [
                "id",
                "value",
                "created_at"
              ],
              "description": "Supplementation of inventory quantity of stock.\n\nYou know what? If a {@link IShoppingSaleUnitStock stock} has been sold over\nits {@link IShoppingSaleUnitStock.ICreate.quantity initial inventory quantity},\nthe stock can't be sold anymore, because of out of stock. In that case, how the\n{@link IShoppingSeller } should do?\n\nWhen the sotck is sold out, seller can supplement the inventory record by\nregistering this `IShoppingSaleUnitStockSupplement` record. Right, this\n`IShoppingSaleUnitStockSupplement` is an entity that embodies the\nsupplementation of the inventory quantity of the belonged stock."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every supplements.\n\nList up every {@link IShoppingSaleUnitStockSupplement supplement histories}\nof a specific {@link IShoppingSaleUnitStock stock}.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingSaleUnitStockSupplement.IRequest.search search condition} in\nthe request body. Also, it is possible to customize sequence order of\nrecords by configuring {@link IShoppingSaleUnitStockSupplement.IRequest.sort }\nproperty."
    },
    {
      "method": "put",
      "path": "/shoppings/sellers/sales/{saleId}/units/{unitId}/stocks/{stockId}/supplements/{id}",
      "name": "shoppings_sellers_sales_units_stocks_supplements_putBySaleidAndUnitidAndStockidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "unitId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged unit's "
            },
            "stockId": {
              "type": "string",
              "format": "uuid",
              "description": "Target stock's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target supplement's "
            },
            "body": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "integer",
                  "title": "Supplemented quantity",
                  "description": "Supplemented quantity."
                }
              },
              "required": [
                "value"
              ],
              "description": "Creation information of the supplement."
            }
          }
        }
      ],
      "description": "Update a supplement.\n\nUpdate quantity value of a {@link IShoppingSaleUnitStockSupplement supplement}\nof a specific {@link IShoppingSaleUnitStock stock}.\n\nTherefore, {@link IShoppingSaleUnitStockInventory.income inventory} of the\ntarget stock will be changed by the\n{@link IShoppingSaleUnitStockSupplement.value supplement's value}."
    },
    {
      "method": "delete",
      "path": "/shoppings/sellers/sales/{saleId}/units/{unitId}/stocks/{stockId}/supplements/{id}",
      "name": "shoppings_sellers_sales_units_stocks_supplements_eraseBySaleidAndUnitidAndStockidAndId",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "saleId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged sale's "
            },
            "unitId": {
              "type": "string",
              "format": "uuid",
              "description": "Belonged unit's "
            },
            "stockId": {
              "type": "string",
              "format": "uuid",
              "description": "Target stock's "
            },
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target supplement's "
            }
          }
        }
      ],
      "description": "Erase a supplement.\n\nErase a {@link IShoppingSaleUnitStockSupplement supplement} of a specific\n{@link IShoppingSaleUnitStock stock}.\n\nTherefore, {@link IShoppingSaleUnitStockInventory.income inventory} of the\ntarget stock will be decreased by the\n{@link IShoppingSaleUnitStockSupplement.value supplement's value}."
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/systematic/channels",
      "name": "shoppings_sellers_systematic_channels_patch",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-channel.code",
                      "-channel.name",
                      "-channel.created_at",
                      "+channel.code",
                      "+channel.name",
                      "+channel.created_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of the channels with pagination and searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of record",
                  "description": "Creation time of record."
                },
                "code": {
                  "type": "string",
                  "title": "Identifier code",
                  "description": "Identifier code."
                },
                "name": {
                  "type": "string",
                  "title": "Name of the channel",
                  "description": "Name of the channel."
                }
              },
              "required": [
                "id",
                "created_at",
                "code",
                "name"
              ],
              "description": "Channel information.\n\n`IShoppingChannel` is a concept that shapes the distribution channel in the\nmarket. Therefore, the difference in the channel in this e-commerce system\nmeans that it is another site or application.\n\nBy the way, if your shopping mall system requires only one channel, then\njust use only one. This concept is designed to be expandable in the future."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every channels.\n\nList up every {@link IShoppingChannel channels} with pagination.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingChannel.IRequest.search search condition} in the request\nbody. Also, it is possible to customize sequence order of records by\nconfiguring {@link IShoppingChannel.IRequest.sort sort condition}."
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/systematic/sections",
      "name": "shoppings_sellers_systematic_sections_patch",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "sort": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "-section.code",
                      "-section.name",
                      "-section.created_at",
                      "+section.code",
                      "+section.name",
                      "+section.created_at"
                    ]
                  }
                },
                "page": {
                  "type": "integer",
                  "title": "Page number",
                  "description": "Page number."
                },
                "limit": {
                  "type": "integer",
                  "title": "Limitation of records per a page",
                  "description": "Limitation of records per a page."
                }
              },
              "description": "Request of the sections with pagination and searching/sorting options."
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "pagination": {
            "type": "object",
            "properties": {
              "current": {
                "type": "integer",
                "title": "Current page number",
                "description": "Current page number."
              },
              "limit": {
                "type": "integer",
                "title": "Limitation of records per a page",
                "description": "Limitation of records per a page."
              },
              "records": {
                "type": "integer",
                "title": "Total records in the database",
                "description": "Total records in the database."
              },
              "pages": {
                "type": "integer",
                "title": "Total pages",
                "description": "Total pages.\n\nEqual to {@link records } / {@link limit } with ceiling."
              }
            },
            "required": [
              "current",
              "limit",
              "records",
              "pages"
            ],
            "description": "Page information."
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "title": "Primary Key",
                  "description": "Primary Key."
                },
                "code": {
                  "type": "string",
                  "title": "Identifier code",
                  "description": "Identifier code."
                },
                "name": {
                  "type": "string",
                  "title": "Representative name of the section",
                  "description": "Representative name of the section."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Creation time of record",
                  "description": "Creation time of record."
                }
              },
              "required": [
                "id",
                "code",
                "name",
                "created_at"
              ],
              "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future."
            },
            "title": "List of records",
            "description": "List of records."
          }
        },
        "required": [
          "pagination",
          "data"
        ],
        "description": "A page.\n\nCollection of records with pagination indformation."
      },
      "description": "List up every sections.\n\nList up every {@link IShoppingSection sections} with pagination.\n\nIf you want, you can limit the result by configuring\n{@link IShoppingSection.IRequest.search search condition} in the request\nbody. Also, it is possible to customize sequence order of records by\nconfiguring {@link IShoppingSection.IRequest.sort sort condition}."
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/systematic/sections/{id}",
      "name": "shoppings_sellers_systematic_sections_getById",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Target section's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "code": {
            "type": "string",
            "title": "Identifier code",
            "description": "Identifier code."
          },
          "name": {
            "type": "string",
            "title": "Representative name of the section",
            "description": "Representative name of the section."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of record",
            "description": "Creation time of record."
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "created_at"
        ],
        "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future."
      },
      "description": "Get a section info.\n\nGet a detailed {@link IShoppingSection section} information."
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/systematic/sections/{code}/get",
      "name": "shoppings_sellers_systematic_sections_get_getByCode",
      "parameters": [
        {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Target section's "
            }
          }
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Primary Key",
            "description": "Primary Key."
          },
          "code": {
            "type": "string",
            "title": "Identifier code",
            "description": "Identifier code."
          },
          "name": {
            "type": "string",
            "title": "Representative name of the section",
            "description": "Representative name of the section."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Creation time of record",
            "description": "Creation time of record."
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "created_at"
        ],
        "description": "Section information.\n\n`IShoppingSection` is a concept that refers to the spatial information of\nthe market.\n\nIf we compare the section mentioned here to the offline market, it means a\nspatially separated area within the store, such as the \"fruit corner\" or\n\"butcher corner\". Therefore, in the {@link IShoppingSale sale} entity, it is\nnot possible to classify multiple sections simultaneously, but only one section\ncan be classified.\n\nBy the way, if your shopping mall system requires only one section, then just\nuse only one. This concept is designed to be expandable in the future."
      },
      "description": "Get a section info by its code.\n\nGet a detailed {@link IShoppingSection section} information by its code."
    }
  ],
  "errors": [
    {
      "method": "post",
      "path": "/shoppings/admins/coupons",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/coupons",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/admins/coupons/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/orders",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/admins/orders/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/sales",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/admins/sales/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/sales/{saleId}/snapshots",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/admins/sales/{saleId}/snapshots/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/admins/sales/{saleId}/snapshots/{id}/flip",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "post",
      "path": "/shoppings/admins/systematic/channels/{channelCode}/categories",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/systematic/channels/{channelCode}/categories",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/admins/systematic/channels/{channelCode}/categories/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/admins/systematic/channels/{channelCode}/categories/{id}/invert",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/admins/systematic/channels/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/admins/systematic/channels/hierarchical",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/admins/systematic/channels/{code}/get",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/coupons",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/customers/coupons/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "post",
      "path": "/shoppings/customers/coupons/tickets",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/coupons/tickets",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/customers/coupons/tickets/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "post",
      "path": "/shoppings/customers/carts/{cartId}/commodities",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/carts/{cartId}/commodities",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/customers/carts/{cartId}/commodities/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/carts/{cartId}/commodities/discountable",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "post",
      "path": "/shoppings/customers/orders",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/orders",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/customers/orders/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/customers/orders/{id}/price",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/orders/{id}/discountable",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "put",
      "path": "/shoppings/customers/orders/{id}/discount",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/sales",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/customers/sales/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/sales/{saleId}/snapshots",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/customers/sales/{saleId}/snapshots/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/customers/sales/{saleId}/snapshots/{id}/flip",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/systematic/channels/{channelCode}/categories",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/customers/systematic/channels/{channelCode}/categories/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/customers/systematic/channels/{channelCode}/categories/{id}/invert",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/customers/systematic/channels/hierarchical",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/customers/systematic/channels/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/customers/systematic/channels/{code}/get",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/deliveries",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/deliveries/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "post",
      "path": "/shoppings/sellers/coupons",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/coupons",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/coupons/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/orders",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/orders/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "post",
      "path": "/shoppings/sellers/sales",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/sales",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/sales/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "put",
      "path": "/shoppings/sellers/sales/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/sales/{saleId}/snapshots",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/sales/{saleId}/snapshots/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/sales/{saleId}/snapshots/{id}/flip",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/systematic/channels/{channelCode}/categories",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/systematic/channels/{channelCode}/categories/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/systematic/channels/{channelCode}/categories/{id}/invert",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "patch",
      "path": "/shoppings/sellers/systematic/channels/hierarchical",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/systematic/channels/{id}",
      "messages": [
        "Failed to escape $ref"
      ]
    },
    {
      "method": "get",
      "path": "/shoppings/sellers/systematic/channels/{code}/get",
      "messages": [
        "Failed to escape $ref"
      ]
    }
  ],
  "options": {
    "keyword": true,
    "separate": null
  }
}