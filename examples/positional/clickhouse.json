{
  "openapi": "3.0.3",
  "functions": [
    {
      "method": "get",
      "path": "/v1/organizations",
      "name": "v1_organizations_get",
      "parameters": [],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Get list of available organizations.\n\nReturns a list with a single organization associated with the API key in the request."
    },
    {
      "method": "get",
      "path": "/v1/organizations/:organizationId",
      "name": "v1_organizations_getByOrganizationid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested organization."
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Get organization details.\n\nReturns details of a single organization. In order to get the details, the auth key must belong to the organization."
    },
    {
      "method": "patch",
      "path": "/v1/organizations/:organizationId",
      "name": "v1_organizations_patchByOrganizationid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization to update."
        },
        {}
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Update organization details.\n\nUpdates organization fields. Requires ADMIN auth key role."
    },
    {
      "method": "get",
      "path": "/v1/organizations/:organizationId/services",
      "name": "v1_organizations_services_getByOrganizationid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested organization."
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "List of organization services.\n\nReturns a list of all services in the organization."
    },
    {
      "method": "post",
      "path": "/v1/organizations/:organizationId/services",
      "name": "v1_organizations_services_postByOrganizationid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization that will own the service."
        },
        {}
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Create new service.\n\nCreates a new service in the organization, and returns the current service state and a password to access the service. The service is started asynchronously."
    },
    {
      "method": "get",
      "path": "/v1/organizations/:organizationId/services/:serviceId",
      "name": "v1_organizations_services_getByOrganizationidAndServiceid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization that owns the service."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested service."
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Get service details.\n\nReturns a service that belongs to the organization"
    },
    {
      "method": "patch",
      "path": "/v1/organizations/:organizationId/services/:serviceId",
      "name": "v1_organizations_services_patchByOrganizationidAndServiceid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization that owns the service."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the service to update."
        },
        {}
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Update service basic details.\n\nUpdates basic service details like service name or IP access list."
    },
    {
      "method": "delete",
      "path": "/v1/organizations/:organizationId/services/:serviceId",
      "name": "v1_organizations_services_eraseByOrganizationidAndServiceid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization that owns the service."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the service to delete."
        }
      ],
      "description": "Delete service.\n\nDeletes the service. The service must be in stopped state and is deleted asynchronously after this method call."
    },
    {
      "method": "patch",
      "path": "/v1/organizations/:organizationId/services/:serviceId/state",
      "name": "v1_organizations_services_state_patchByOrganizationidAndServiceid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization that owns the service."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the service to update state."
        },
        {}
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Update service state.\n\nStarts or stop service"
    },
    {
      "method": "patch",
      "path": "/v1/organizations/:organizationId/services/:serviceId/scaling",
      "name": "v1_organizations_services_scaling_patchByOrganizationidAndServiceid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization that owns the service."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the service to update scaling parameters."
        },
        {}
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Update service auto scaling settings.\n\nUpdates minimum and maximum total memory limits and idle mode scaling behavior for the service. The memory settings are available only for \"production\" services and must be a multiple of 12 starting from 24GB."
    },
    {
      "method": "patch",
      "path": "/v1/organizations/:organizationId/services/:serviceId/password",
      "name": "v1_organizations_services_password_patchByOrganizationidAndServiceid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization that owns the service."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the service to update password."
        },
        {}
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Update service password.\n\nSets a new password for the service"
    },
    {
      "method": "get",
      "path": "/v1/organizations/:organizationId/services/:serviceId/backups",
      "name": "v1_organizations_services_backups_getByOrganizationidAndServiceid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization that owns the backup."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the service the backup was created from."
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "List of service backups.\n\nReturns a list of all backups for the service."
    },
    {
      "method": "get",
      "path": "/v1/organizations/:organizationId/services/:serviceId/backups/:backupId",
      "name": "v1_organizations_services_backups_getByOrganizationidAndServiceidAndBackupid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization that owns the backup."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the service the backup was created from."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested backup."
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Get backup details.\n\nReturns a single backup info."
    },
    {
      "method": "get",
      "path": "/v1/organizations/:organizationId/keys",
      "name": "v1_organizations_keys_getByOrganizationid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested organization."
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Get list of all keys.\n\nReturns a list of all keys in the organization."
    },
    {
      "method": "post",
      "path": "/v1/organizations/:organizationId/keys",
      "name": "v1_organizations_keys_postByOrganizationid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization that will own the key."
        },
        {}
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Create key.\n\nCreates new API key."
    },
    {
      "method": "get",
      "path": "/v1/organizations/:organizationId/keys/:keyId",
      "name": "v1_organizations_keys_getByOrganizationidAndKeyid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested organization."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested key."
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Get key details.\n\nReturns a single key details."
    },
    {
      "method": "patch",
      "path": "/v1/organizations/:organizationId/keys/:keyId",
      "name": "v1_organizations_keys_patchByOrganizationidAndKeyid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization that owns the key."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the key to update."
        },
        {}
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Update key.\n\nUpdates API key properties."
    },
    {
      "method": "delete",
      "path": "/v1/organizations/:organizationId/keys/:keyId",
      "name": "v1_organizations_keys_eraseByOrganizationidAndKeyid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization that owns the key."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the key to delete."
        }
      ],
      "description": "Delete key.\n\nDeletes API key. Only a key not used to authenticate the active request can be deleted."
    },
    {
      "method": "get",
      "path": "/v1/organizations/:organizationId/members",
      "name": "v1_organizations_members_getByOrganizationid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested organization."
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "List organization members.\n\nReturns a list of all members in the organization."
    },
    {
      "method": "get",
      "path": "/v1/organizations/:organizationId/members/:userId",
      "name": "v1_organizations_members_getByOrganizationidAndUserid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization the member is part of."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested user."
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Get member details.\n\nReturns a single organization member details."
    },
    {
      "method": "patch",
      "path": "/v1/organizations/:organizationId/members/:userId",
      "name": "v1_organizations_members_patchByOrganizationidAndUserid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization the member is part of."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the user to patch"
        },
        {}
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Update organization member.\n\nUpdates organization member role."
    },
    {
      "method": "delete",
      "path": "/v1/organizations/:organizationId/members/:userId",
      "name": "v1_organizations_members_eraseByOrganizationidAndUserid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested organization."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested user."
        }
      ],
      "description": "Remove an organization member.\n\nRemoves a user from the organization"
    },
    {
      "method": "get",
      "path": "/v1/organizations/:organizationId/invitations",
      "name": "v1_organizations_invitations_getByOrganizationid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested organization."
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "List all invitations.\n\nReturns list of all organization invitations."
    },
    {
      "method": "post",
      "path": "/v1/organizations/:organizationId/invitations",
      "name": "v1_organizations_invitations_postByOrganizationid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization to invite a user to."
        },
        {}
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Create an invitation.\n\nCreates organization invitation."
    },
    {
      "method": "get",
      "path": "/v1/organizations/:organizationId/invitations/:invitationId",
      "name": "v1_organizations_invitations_getByOrganizationidAndInvitationid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested organization."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested organization."
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Get invitation details.\n\nReturns details for a single organization invitation."
    },
    {
      "method": "delete",
      "path": "/v1/organizations/:organizationId/invitations/:invitationId",
      "name": "v1_organizations_invitations_eraseByOrganizationidAndInvitationid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the organization that has the invitation."
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested organization."
        }
      ],
      "description": "Delete organization invitation.\n\nDeletes a single organization invitation."
    },
    {
      "method": "get",
      "path": "/v1/organizations/:organizationId/activities",
      "name": "v1_organizations_activities_getByOrganizationid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested organization."
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "List of organization activities.\n\nReturns a list of all organization activities."
    },
    {
      "method": "get",
      "path": "/v1/organizations/:organizationId/activities/:activityId",
      "name": "v1_organizations_activities_getByOrganizationidAndActivityid",
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "ID of the requested organization."
        },
        {
          "type": "string",
          "description": "ID of the requested activity."
        }
      ],
      "output": {
        "type": "object",
        "properties": {
          "result": {},
          "status": {
            "type": "number",
            "description": "HTTP status code.",
            "example": 200
          },
          "requestId": {
            "type": "string",
            "description": "Unique id assigned to every request. UUIDv4",
            "format": "uuid"
          }
        }
      },
      "description": "Organization activity.\n\nReturns a single organization activity by ID."
    }
  ],
  "errors": [],
  "options": {
    "keyword": false,
    "separate": null
  }
}